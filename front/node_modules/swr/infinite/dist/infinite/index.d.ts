import { KeyLoader, Fetcher, Middleware } from 'swr';
import { SWRInfiniteConfiguration, SWRInfiniteResponse } from './types';
export declare const unstable_serialize: (getKey: KeyLoader<any>) => string;
export declare const infinite: Middleware;
declare type SWRInfiniteHook = <Data = any, Error = any>(...args: readonly [KeyLoader<Data>] | readonly [KeyLoader<Data>, Fetcher<Data> | null] | readonly [KeyLoader<Data>, SWRInfiniteConfiguration<Data, Error> | undefined] | readonly [KeyLoader<Data>, Fetcher<Data> | null, SWRInfiniteConfiguration<Data, Error> | undefined]) => SWRInfiniteResponse<Data, Error>;
declare const _default: SWRInfiniteHook;
export default _default;
export { SWRInfiniteConfiguration, SWRInfiniteResponse };
