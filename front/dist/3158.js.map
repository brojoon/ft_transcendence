{"version":3,"file":"3158.js","mappings":"qTAEO,IAAMA,EAAYC,EAAAA,EAAAA,IAAH,4ZAyBTC,EAAcD,EAAAA,EAAAA,IAAH,gbAuBXE,EAAcF,EAAAA,EAAAA,IAAH,oOACb,SAACG,GAAD,OAAWA,EAAMC,S,0GCrC5BC,IAAAA,OAAa,MAEb,IA4CA,EA5CgC,SAAC,GAAoD,I,IAAlDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACnE,G,GAAgCC,EAAAA,EAAAA,UAAS,G,EAAzC,E,8zBAAOC,EAAP,KAAiBC,EAAjB,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAUC,YAAW,WACzB,GAAIT,MAAAA,GAAAA,EAAUU,OAAQ,CACpB,GAAIT,IAAYD,MAAAA,OAAJ,EAAIA,EAAUU,UAAUV,MAAAA,OAAA,EAAAA,EAAUW,OAAQV,EAAW,EAC/D,OACSI,GAAWL,MAAAA,OAAH,EAAGA,EAAUU,SAC9BJ,GAAY,SAACM,GAAD,OAAUA,EAAO,QAGhC,IACH,OAAO,kBAAMC,aAAaL,MACzB,CAACH,EAAUL,EAAUC,IAEtB,gBAACT,EAAD,KACE,uBAAKsB,UAAU,kBACb,uBAAKA,UAAU,UACb,4BAAOZ,GACP,2BACE,gBAACH,EAAD,QAGJ,wBAAMe,UAAU,WAAWX,IAE7B,gBAACT,EAAD,CAAaqB,MAAO,CAAEC,SAAU,WAAYC,UAAW,WACrD,uBAAKH,UAAU,iBACZd,KAAaA,MAAAA,OAAA,EAAAA,EAAUW,OAAQV,EAAW,GAAKD,EAASU,QAAUT,GAC/DH,GAAAA,CAAME,EAASkB,MAAMC,OAAO,4BAC5Bd,EAAW,MAAQJ,GAEzB,gBAACN,EAAD,CACEE,MAAK,UACHG,KAAaA,MAAAA,OAAA,EAAAA,EAAUW,OAAQV,EAAW,IAAKD,MAAAA,OAAA,EAAAA,EAAUU,SAAUT,GAC/D,MACCI,EAAWJ,EAAY,IAHzB,OAMP,uBAAKa,UAAU,4B,4OCpDhB,IAAMM,EAAkB3B,EAAAA,EAAAA,IAAH,0KAYf4B,EAAe5B,EAAAA,EAAAA,IAAH,sxBA2CZ6B,EAAkB7B,EAAAA,EAAAA,IAAH,sJCd5B,EA9B+B,SAAC,GAA8C,IAA5C8B,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,cACxD,OACE,gCACE,gBAACN,EAAD,CAAiBO,QAASH,IAC1B,gBAACH,EAAD,KACE,uBAAKP,UAAU,aACb,uBAAKA,UAAU,UACb,gBAACc,EAAA,EAAD,CAAWd,UAAU,UACrB,uBAAKA,UAAU,kBAAkBY,IAEnC,2BACE,gBAACG,EAAA,EAAD,CAAYf,UAAU,QAAQa,QAASH,GACrC,gBAACM,EAAA,EAAD,SAIN,uBAAKhB,UAAU,WAAWS,GAC1B,gBAACD,EAAD,KACE,gBAACS,EAAA,EAAD,CAAQjB,UAAU,QAAQa,QAASH,EAAOQ,QAAQ,QAAlD,MAGA,gBAACD,EAAA,EAAD,CAAQJ,QAASF,EAAQO,QAAQ,QAAjC,Y,4VC7BH,I,IAAMC,GAAyBxC,EAAAA,EAAAA,GAAOyC,EAAAA,EAAPzC,CAAH,8mCAoEtB0C,GAAa1C,EAAAA,EAAAA,GAAO2C,EAAAA,EAAP3C,CAAH,6FACZ,SAACG,GAAD,OAAWA,EAAMyC,W,UCI5B,EA/DsB,YACLC,EAAAA,EAAAA,MAAPC,GAAR,IACcC,GAAWC,EAAAA,EAAAA,IAAqB,aAAcC,EAAAA,GAApDC,KACMC,GAAYH,EAAAA,EAAAA,IAAgB,mCAAoCC,EAAAA,GAAtEC,KACR,GAAmCE,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAChBC,EAAU,EAQd,OAPID,GAAcR,GAAUQ,EAAWR,EAAOU,UAASD,EAAU,GACjD,IAAZA,GAAiBF,GAAcP,GACjCO,EAAWI,KAAI,SAACC,GACVA,EAAWF,SAAWV,EAAOU,SAAQD,EAAU,MAKrD,gBAAChB,EAAD,KACE,gBAACoB,EAAA,EAAD,CAAMvC,UAAU,OAAOkB,QAAQ,YAC7B,gBAACsB,EAAA,EAAD,CAAaxC,UAAU,gBACrB,gBAACqB,EAAD,CACEE,QAAO,UACLY,EACgB,IAAZA,EACE,oBACA,oBACF,qBAENM,IAAKf,MAAAA,OAAF,EAAEA,EAAQgB,QACbC,IAAI,WAEN,gBAACC,EAAA,EAAD,CAAY1B,QAAQ,KAAK2B,UAAU,OAChCnB,MAAAA,OADH,EACGA,EAAQU,QAEX,4BAAOV,MAAAA,OAAP,EAAOA,EAAQoB,WAEjB,gBAACC,EAAA,EAAD,CAAa/C,UAAU,gBACrB,gBAAC,KAAD,CAAMgD,GAAG,mBAAmBhD,UAAU,gBACpC,gBAACiB,EAAA,EAAD,CAAQjB,UAAU,cAAckB,QAAQ,aAAxC,WAEE,gBAAC+B,EAAA,EAAD,SAILnB,EACC,gBAACiB,EAAA,EAAD,CAAa/C,UAAU,gBACrB,gBAAC,KAAD,CAAMgD,GAAG,SAAShD,UAAU,gBAC1B,gBAACiB,EAAA,EAAD,CAAQjB,UAAU,YAAYkB,QAAQ,aAAtC,SAEE,gBAACgC,EAAA,EAAD,SAKN,gBAACH,EAAA,EAAD,CAAa/C,UAAU,gBACrB,gBAACiB,EAAA,EAAD,CAAQjB,UAAU,kBAAkBkB,QAAQ,YAAYiC,UAAQ,GAAhE,SAEE,gBAACD,EAAA,EAAD,W,gMChEP,IAAME,GAA2BzE,EAAAA,EAAAA,GAAOyC,EAAAA,EAAPzC,CAAH,MAAG,+8EAqI3B0C,GAAa1C,EAAAA,EAAAA,GAAO2C,EAAAA,EAAP3C,CAAH,MAAG,uFACf,SAACG,GAAD,OAAWA,EAAMyC,W,k9BCjH5B,I,MAuVA,EAvVoC,SAAC,GAAiB,IAAf8B,EAAe,EAAfA,SAC7B5B,GAAOD,EAAAA,EAAAA,MAAPC,GACR,GAA+CE,EAAAA,EAAAA,IAAkB,kBAAmBC,EAAAA,GAAtE0B,EAAd,EAAQzB,KAAsB0B,EAA9B,EAAsBC,OACtB,GAAmD7B,EAAAA,EAAAA,IAAM,kCAC5BF,GAC3BG,EAAAA,GAFY6B,EAAd,EAAQ5B,KAAwB6B,EAAhC,EAAwBF,OAIxB,GAAiD7B,EAAAA,EAAAA,IAAM,iCAC3BF,GAC1BG,EAAAA,GAFY+B,EAAd,EAAQ9B,KAAuB+B,EAA/B,EAAuBJ,OAIT9B,GAAWC,EAAAA,EAAAA,IAAqB,aAAcC,EAAAA,GAApDC,KACFgC,GAAUC,EAAAA,EAAAA,MAChB,KAAgDxE,EAAAA,EAAAA,WAAS,GAAzD,GAAOyE,EAAP,KAAyBC,EAAzB,KACA,KAAsD1E,EAAAA,EAAAA,WAAS,GAA/D,GAAO2E,EAAP,KAA4BC,EAA5B,KACA,KAAwC5E,EAAAA,EAAAA,WAAS,GAAjD,GAAO6E,EAAP,KAAqBC,EAArB,KACA,KAAoD9E,EAAAA,EAAAA,WAAS,GAA7D,GAAO+E,EAAP,KAA2BC,EAA3B,KACA,GAAmCvC,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAChBC,EAAU,EACVD,GAAcA,EAAWmB,MAAAA,OAAD,EAACA,EAAUjB,UAASD,EAAU,GAC1C,IAAZA,GAAiBF,GAAcoB,GACjCpB,EAAWI,KAAI,SAACC,GACVA,EAAWF,SAAWiB,EAASjB,SAAQD,EAAU,MAIzD,IAAMoC,GAAkBC,EAAAA,EAAAA,cAAY,WAClCR,GAAoB,GACpBI,GAAgB,GAChBE,GAAsB,GACtBJ,GAAuB,KACtB,IAEGO,GAAyBD,EAAAA,EAAAA,cAC7B,SAACE,GACCA,EAAEC,iBACFX,GAAoB,SAAClE,GAAD,OAAWA,OAEjC,CAACiE,EAAkBC,IAGfY,IAA4BJ,EAAAA,EAAAA,cAChC,SAACE,GACCA,EAAEC,iBACFT,GAAuB,SAACpE,GAAD,OAAWA,OAEpC,CAACmE,EAAqBC,IAGlBW,IAAqBL,EAAAA,EAAAA,cACzB,SAACE,GACCA,EAAEC,iBACFP,GAAgB,SAACtE,GAAD,OAAWA,OAE7B,CAACqE,EAAcC,IAGXU,IAA2BN,EAAAA,EAAAA,cAC/B,SAACE,GACCA,EAAEC,iBACFL,GAAsB,SAACxE,GAAD,OAAWA,OAEnC,CAACuE,EAAoBC,IAGjBS,IAAsBP,EAAAA,EAAAA,cAAY,SAACE,GACvCA,EAAEC,iBACFK,IAAAA,KAAA,+BACgC3B,EAASjB,OADzC,QACuD,CAAE6C,QAAS,IAAMC,EAAAA,GACrEC,MAAK,SAACC,GACLvB,EAAQwB,KAAR,0BAAgCD,EAAIvD,UAErCyD,OAAM,SAACC,GACmC,aAArCA,EAAMC,SAAS3D,KAAKA,KAAKoD,QAC3BQ,EAAAA,GAAAA,MAAA,8BAAmCpC,EAASP,UAAY,CACtD4C,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,YAGTL,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAId,IAEGC,IAAkBvB,EAAAA,EAAAA,cACtB,SAACE,GACCA,EAAEC,iBACEzC,GAAY2B,EAAQwB,KAAR,0BAAgCnD,EAAWmB,EAASjB,YAEtE,CAACF,IAGG8D,IAAsBxB,EAAAA,EAAAA,cAAY,SAACE,GACvCA,EAAEC,iBACFK,IAAAA,IAAA,gCACgC3B,EAASjB,QAAU8C,EAAAA,GAChDC,MAAK,WACJzB,IACAa,OAEDe,OAAM,SAACC,GACmC,aAArCA,EAAMC,SAAS3D,KAAKA,KAAKoD,QAC3BQ,EAAAA,GAAAA,MAAA,8BAAmCpC,EAASP,UAAY,CACtD4C,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,YAGTL,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAId,IAEGG,IAAyBzB,EAAAA,EAAAA,cAAY,SAACE,GAC1CA,EAAEC,iBACFK,IAAAA,IAAA,mCACmC3B,EAASjB,QAAU8C,EAAAA,GACnDC,MAAK,WACJzB,IACAa,OAEDe,OAAM,SAACC,GACNE,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAGZ,IAEGI,IAAqB1B,EAAAA,EAAAA,cAAY,SAACE,GACtCA,EAAEC,iBACFK,IAAAA,IAAA,+BAC+B3B,EAASjB,QAAU8C,EAAAA,GAC/CC,MAAK,WACJzB,IACAE,IACAW,OAEDe,OAAM,SAACC,GACNE,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAGZ,IAEGK,IAAwB3B,EAAAA,EAAAA,cAAY,SAACE,GACzCA,EAAEC,iBACFK,IAAAA,IAAA,kCACkC3B,EAASjB,QAAU8C,EAAAA,GAClDC,MAAK,WACJzB,IACAE,IACAW,OAEDe,OAAM,SAACC,GACNE,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAGZ,IAEGM,IAAoB5B,EAAAA,EAAAA,cACxB,SAACE,GACCA,EAAEC,iBACFK,IAAAA,IAAA,0BAC0B3B,EAASjB,QAAU8C,EAAAA,GAC1CC,MAAK,SAACC,GACL7B,IAAe4B,MAAK,WAClBtB,EAAQwB,KAAR,qBAA2BD,EAAIvD,aAGlCyD,OAAM,SAACC,GACNE,EAAAA,GAAAA,MAAYF,EAAMN,QAAS,CACzBS,UAAW,IACXxF,SAAUuF,EAAAA,GAAAA,SAAAA,UACVE,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,iBAIf,CAACzC,EAAUE,EAAcD,IAG3B,OACE,gBAACF,EAAD,KACGW,GACC,gBAACsC,EAAA,EAAD,CACEzF,cAAa,cAASa,GACtBhB,QAAO,uCAAkCgB,EAAlC,qBACPf,MAAO+D,EACP9D,OAAQqF,KAGX/B,GACC,gBAACoC,EAAA,EAAD,CACEzF,cAAa,iBAAYa,GACzBhB,QAAO,sDAAiDgB,EAAjD,uBACPf,MAAOkE,GACPjE,OAAQsF,KAGX9B,GACC,gBAACkC,EAAA,EAAD,CACEzF,cAAa,gBAAWa,GACxBhB,QAAO,yCAAoCgB,EAApC,mDACPf,MAAOmE,GACPlE,OAAQuF,KAGX7B,GACC,gBAACgC,EAAA,EAAD,CACEzF,cAAa,kBAAaa,GAC1BhB,QAAO,2CAAsCgB,EAAtC,KACPf,MAAOoE,GACPnE,OAAQwF,KAIZ,gBAAC5D,EAAA,EAAD,CAAMvC,UAAU,iBAAiBkB,QAAQ,YACvC,gBAACsB,EAAA,EAAD,CAAaxC,UAAU,gBACrB,gBAAC,EAAD,CACEuB,QAAO,UACLY,EACgB,IAAZA,EACE,oBACA,oBACF,qBAENM,IAAKY,MAAAA,OAAF,EAAEA,EAAUX,QACfC,IAAI,WAEN,gBAACC,EAAA,EAAD,CAAY1B,QAAQ,KAAK2B,UAAU,OAChCQ,MAAAA,OADH,EACGA,EAAUjB,QAEb,wBAAMpC,UAAU,kBAAkBqD,MAAAA,OAAlC,EAAkCA,EAAUP,WAE9C,gBAACC,EAAA,EAAD,CAAa/C,UAAU,eACpB2D,EACC,gBAAC1C,EAAA,EAAD,CAAQjB,UAAU,sBAAsBkB,QAAQ,YAAYiC,UAAQ,GAApE,WAEE,gBAACmD,EAAA,EAAD,OAEY,IAAZnE,GAAiBD,GAAcR,QAAyC6E,IAA/BrE,EAAWR,MAAAA,OAAD,EAACA,EAAQU,QAC9D,gBAACnB,EAAA,EAAD,CAAQJ,QAASkF,GAAiB7E,QAAQ,YAAYlB,UAAU,aAAhE,SAEE,gBAACwG,EAAA,EAAD,OAEAtE,GAAcR,GAAUQ,EAAWR,MAAAA,OAAD,EAACA,EAAQU,QAC7C,gBAACnB,EAAA,EAAD,CAAQC,QAAQ,YAAYlB,UAAU,sBAAsBmD,UAAQ,GAApE,aAEE,gBAACmD,EAAA,EAAD,OAGF,gBAACrF,EAAA,EAAD,CAAQJ,QAASkE,GAAqB7D,QAAQ,YAAYlB,UAAU,iBAApE,aAEE,gBAACsG,EAAA,EAAD,OAGH3C,EACC,gBAAC1C,EAAA,EAAD,CAAQC,QAAQ,YAAYiC,UAAQ,EAACnD,UAAU,oBAA/C,WAEE,gBAACyG,EAAA,EAAD,OAEAhD,EACF,gBAACxC,EAAA,EAAD,CACEJ,QAAS+D,GACT1D,QAAQ,YACRlB,UAAU,uBAHZ,YAME,gBAACyG,EAAA,EAAD,OAGF,gBAACxF,EAAA,EAAD,CAAQjB,UAAU,aAAaa,QAAS4D,EAAwBvD,QAAQ,aAAxE,UAEE,gBAACuF,EAAA,EAAD,OAGH9C,EACC,gBAAC1C,EAAA,EAAD,CAAQjB,UAAU,cAAca,QAASiE,GAA0B5D,QAAQ,aAA3E,WAEE,gBAACuF,EAAA,EAAD,OAGF,gBAACxF,EAAA,EAAD,CAAQjB,UAAU,YAAYa,QAASgE,GAAoB3D,QAAQ,aAAnE,SAEE,gBAACwF,EAAA,EAAD,OAGH/C,EACC,gBAAC1C,EAAA,EAAD,CAAQjB,UAAU,oBAAoBkB,QAAQ,YAAYiC,UAAQ,GAAlE,WAEE,gBAACwD,EAAA,EAAD,OAGF,gBAAC1F,EAAA,EAAD,CAAQjB,UAAU,cAAca,QAASuF,GAAmBlF,QAAQ,aAApE,WAEE,gBAACyF,EAAA,EAAD,W,kHCtWP,IAAMC,EAAuBjI,EAAAA,EAAAA,IAAH,MAAG,yoBAqCvBkI,EAAyBlI,EAAAA,EAAAA,IAAH,MAAG,0rBA4CzBmI,EAAoBnI,EAAAA,EAAAA,IAAH,iCACnB,SAACG,GAAD,OAAWA,EAAMiI,a,2+BCnE5B,I,kBAgEA,GAhEgC,SAAC,GAAiB,IAAfC,EAAe,EAAfA,SACnBC,GAAoBtF,EAAAA,EAAAA,IAAM,4CACDqF,MAAAA,OADC,EACDA,EAAU5E,QAC/CR,EAAAA,GAFMC,KAIR,MAAwBvC,EAAAA,EAAAA,UAAS,GAAjC,GAAO4H,EAAP,KAAaC,EAAb,KACA,MAAsC7H,EAAAA,EAAAA,UAAS,IAA/C,GAAO8H,EAAP,KAAoBC,EAApB,KAWA,OACE,gBAACT,EAAD,KACE,uBAAK5G,UAAU,0BAAf,WACCiH,MAAAA,OAFH,EAEGA,EAAiB5E,KAAI,SAACwB,EAASyD,GAC9B,KAAIA,GAASF,GAAeF,EAAO,IAC/BA,EAAO,GACLI,EAAQF,EAAcF,GAE5B,OACE,gBAACL,EAAD,CAAwBU,IAAK1D,EAAQ2D,WACnC,gBAAC,KAAD,CAAMxE,GAAE,wBAAmBa,EAAQ2D,YACjC,gBAACC,GAAA,EAAD,CAAMzH,UAAU,qBACd,gBAACsB,EAAA,EAAD,CAAQtB,UAAU,SAASyC,IAAKuE,MAAAA,OAAF,EAAEA,EAAUtE,QAASC,IAAI,WACvD,uBAAK3C,UAAU,gBACb,gBAAC8G,EAAD,CAAmBC,UAAWlD,MAAAA,GAAAA,EAAS6D,SAAW,UAAY,WAC3D7D,MAAAA,GAAAA,EAAS6D,SAAW,MAAQ,OAC7B,wBAAM1H,UAAU,iBAAhB,YAA0C6D,MAAAA,OAA1C,EAA0CA,EAAS8D,WAErD,wBAAM3H,UAAU,KAAI6D,MAAAA,OAAA,EAAAA,EAAS+D,SAAU,OAAQ/D,MAAAA,OAA3B,EAA2BA,EAASgE,iBAGzDhE,MAAAA,GAAAA,EAAS6D,SACR,gBAACI,EAAA,EAAD,CAA4B9H,UAAU,0BAEtC,gBAAC+H,EAAA,EAAD,CAAoC/H,UAAU,iCAO1D,uBAAKA,UAAU,8BACb,gBAACgI,EAAA,EAAD,CACEhI,UAAU,qBACV6C,UAAU,MACVoF,MAAOhB,EAAkBA,MAAAA,OAAH,EAAGA,EAAiBiB,OAAS,EACnDhB,KAAMA,EACNiB,aA9CiB,SAACzD,EAAQ0D,GAChCjB,EAAQiB,IA8CFhB,YAAaA,EACbiB,oBA5CwB,SAAC3D,GAC/B2C,EAAeiB,SAAS5D,EAAE6D,OAAOC,MAAO,KACxCrB,EAAQ,IA2CFlH,MAAO,CAAEwI,MAAO,c,iCCxEbC,GAA0B/J,EAAAA,EAAAA,IAAH,K,GAAG,qpB,qBAAH,G,6ECkDpC,GAvCmC,SAAC,GAAiB,IAAfqI,EAAe,EAAfA,SACtB2B,GAAiBhH,EAAAA,EAAAA,IAAM,6CACGqF,MAAAA,OADH,EACGA,EAAU5E,QAChDR,EAAAA,GAFMC,KAKR,OACE,gBAAC6G,GAAD,KACE,uBAAK1I,UAAU,qBAAf,cACA,uBAAKA,UAAU,6BACb,gBAAC4I,GAAA,EAAD,CAAW5I,UAAU,0BACrB,uBAAKA,UAAU,yBACb,sCACA,4BACG2I,IACE,IAA4D,KAApDA,MAAAA,OAAA,EAAAA,EAAcE,WAAWF,MAAAA,OAAzB,EAAyBA,EAAcG,YAAkB,EAC9D,EACA,IAA4D,KAApDH,MAAAA,OAAA,EAAAA,EAAcE,WAAWF,MAAAA,OAAzB,EAAyBA,EAAcG,gBAI3D,uBAAK9I,UAAU,6BACb,gBAAC+I,GAAA,EAAD,CAAiB/I,UAAU,0BAC3B,uBAAKA,UAAU,yBACb,yCACA,4BAAO2I,MAAAA,OAAP,EAAOA,EAAcE,YAGzB,uBAAK7I,UAAU,6BACb,gBAACgJ,GAAA,EAAD,CAAehJ,UAAU,0BACzB,uBAAKA,UAAU,yBACb,0CACA,4BAAO2I,MAAAA,OAAP,EAAOA,EAAcG,e,mHCzCxB,IAAMG,GAA0BtK,EAAAA,EAAAA,IAAH,QAAG,skBAoC1B0C,IAAa1C,EAAAA,EAAAA,GAAO2C,EAAAA,EAAP3C,CAAH,QAAG,+BACf,SAACG,GAAD,OAAWA,EAAMyC,WAIf2H,GAAiBvK,EAAAA,EAAAA,IAAH,QAAG,gJ,6CC5B9B,I,MAyDA,GAzDmC,SAAC,GAAiB,IAO/CwD,EAPgC6E,EAAe,EAAfA,SACtBmC,GAAmBxH,EAAAA,EAAAA,IAAM,8BACdqF,MAAAA,OADc,EACdA,EAAU5E,QACjCR,EAAAA,GAFMC,KAIMuH,GAAYzH,EAAAA,EAAAA,IAA0B,qBAAsBC,EAAAA,GAAlEC,KACR,GAAmCE,EAAAA,EAAAA,YAAWC,EAAAA,GAAtCC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,WAEpB,OACE,gBAAC+G,GAAD,KACE,uBAAKjJ,UAAU,kBAAf,WACCmJ,MAAAA,GAAAA,EAAgBjB,OACf,gBAAC,MAAD,CAAYmB,oBAAqB,cAAGpJ,MAAH,IAAanB,E,kXAAb,cAAyB,gBAACoK,GAAmBpK,KAC5E,2BACGqK,MAAAA,OADH,EACGA,EAAgB9G,KAAI,SAACiH,GACpB,OAAOF,MAAAA,OAAP,EAAOA,EAAS/G,KAAI,SAACkH,GACnB,GAAID,EAAOE,UAAYD,EAAKnH,OAS1B,OARAD,EAAU,EACND,GAAcA,EAAWqH,EAAKnH,UAASD,EAAU,GAErC,IAAZA,IACFF,MAAAA,GAAAA,EAAYI,KAAI,SAACC,GACXA,EAAWF,SAAWmH,EAAKnH,SAAQD,EAAU,OAInD,gBAAC,KAAD,CAAMa,GAAE,iBAAYuG,MAAAA,OAAZ,EAAYA,EAAMnH,QAAUmF,IAAKgC,EAAKnH,QAC5C,gBAACqH,GAAA,GAAD,CAAUzJ,UAAU,oBAAoB0J,QAAM,GAC5C,gBAAC,GAAD,CACEnI,QAAO,UACLY,EACgB,IAAZA,EACE,oBACA,oBACF,qBAENM,IAAK8G,MAAAA,OAAF,EAAEA,EAAM7G,QACXC,IAAI,WAEN,gBAACgH,GAAA,EAAD,CAAc3J,UAAU,OAAO4J,QAASL,MAAAA,OAAF,EAAEA,EAAMzG,qBAU9D,uBAAK9C,UAAU,qBACb,kD,mHCjEH,IAAM6J,GAAkClL,EAAAA,EAAAA,IAAH,QAAG,0ZAuBlCuK,GAAiBvK,EAAAA,EAAAA,IAAH,QAAG,gJ,4NCM9B,I,GAsNA,GAtN2C,SAAC,GAAiB,IAAfqI,EAAe,EAAfA,SAC9B8C,GAAgBnI,EAAAA,EAAAA,IAAM,mCACNqF,MAAAA,OADM,EACNA,EAAU5E,QACtCR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOMmI,GAAgBrI,EAAAA,EAAAA,IAAM,mCACNqF,MAAAA,OADM,EACNA,EAAU5E,QACtCR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOMoI,GAAetI,EAAAA,EAAAA,IAAM,2CACGqF,MAAAA,OADH,EACGA,EAAU5E,QAC9CR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOMqI,GAAavI,EAAAA,EAAAA,IAAM,yCACGqF,MAAAA,OADH,EACGA,EAAU5E,QAC5CR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOMsI,GAAcxI,EAAAA,EAAAA,IAAM,0CACGqF,MAAAA,OADH,EACGA,EAAU5E,QAC7CR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOMuI,GAAiBzI,EAAAA,EAAAA,IAAM,kDACQqF,MAAAA,OADR,EACQA,EAAU5E,QACrDR,EAAAA,EACA,CACEmI,iBAAkB,MAJdlI,KAOR,OACE,gBAACgI,GAAD,KACE,uBAAK7J,UAAU,uBAAf,gBACA,gBAAC,MAAD,CAAYqJ,oBAAqB,cAAGpJ,MAAH,IAAanB,E,kXAAb,cAAyB,gBAAC,GAAmBA,KAC5E,uBAAKkB,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMqL,GAAAA,EACNnL,SAAU,EACVD,SAAUkL,EACVhL,OAAQ,kBACRC,UAAW,qBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMsL,GAAAA,EACNpL,SAAU,GACVD,SAAU4K,EACV1K,OAAQ,cACRC,UAAW,qBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMuL,GAAAA,EACNrL,SAAU,GACVD,SAAU8K,EACV5K,OAAQ,cACRC,UAAW,qBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMwL,GAAAA,EACNtL,SAAU,GACVD,SAAUiL,EACV/K,OAAQ,kBACRC,UAAW,mBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMyL,GAAAA,EACNvL,SAAU,EACVD,SAAU+K,EACV7K,OAAQ,kBACRC,UAAW,mBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM0L,GAAAA,EACNxL,SAAU,GACVD,SAAU+K,EACV7K,OAAQ,UACRC,UAAW,oBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM2L,GAAAA,EACNzL,SAAU,EACVD,SAAUgL,EACV9K,OAAQ,WACRC,UAAW,iBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM4L,GAAAA,EACN1L,SAAU,GACVD,SAAUgL,EACV9K,OAAQ,UACRC,UAAW,kBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM6L,GAAAA,EACN3L,SAAU,EACVD,SAAU4K,EACV1K,OAAQ,8BACRC,UAAW,oBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM8L,GAAAA,EACN5L,SAAU,GACVD,SAAUkL,EACVhL,OAAQ,mBACRC,UAAW,sBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAM+L,GAAAA,EACN7L,SAAU,EACVD,SAAU8K,EACV5K,OAAQ,iBACRC,UAAW,oBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMgM,GAAAA,EACN9L,SAAU,IACVD,SAAUkL,EACVhL,OAAQ,2BACRC,UAAW,uBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMiM,GAAAA,EACN/L,SAAU,IACVD,SAAU+K,EACV7K,OAAQ,2BACRC,UAAW,qBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMkM,GAAAA,EACNhM,SAAU,EACVD,SAAUiL,EACV/K,OAAQ,SACRC,UAAW,kBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMmM,GAAAA,EACNjM,SAAU,IACVD,SAAUiL,EACV/K,OAAQ,QACRC,UAAW,oBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMoM,GAAAA,EACNlM,SAAU,IACVD,SAAU8K,EACV5K,OAAQ,gBACRC,UAAW,sBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMqM,GAAAA,EACNnM,SAAU,IACVD,SAAU4K,EACV1K,OAAQ,OACRC,UAAW,sBAGf,uBAAKW,UAAU,4BACb,gBAACqK,GAAA,EAAD,CACEpL,KAAMsM,GAAAA,EACNpM,SAAU,IACVD,SAAUgL,EACV9K,OAAQ,UACRC,UAAW,sBC1OVmM,IAAmB7M,EAAAA,EAAAA,GAAOyC,EAAAA,EAAPzC,CAAH,Q,gHAAG,4EC6DhC,GAlDgB,WACd,IAGI0E,EAHI5B,GAAOD,EAAAA,EAAAA,MAAPC,GACMgK,GAAY9J,EAAAA,EAAAA,IAAmB,qBAAsBC,EAAAA,GAA3DC,KACMH,GAAWC,EAAAA,EAAAA,IAAqB,aAAcC,EAAAA,GAApDC,KAQR,OANIJ,GAAMA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,UACvBqJ,MAAAA,GAAAA,EAASpJ,KAAI,SAACkH,GACRA,EAAKnH,SAAWX,IAAI4B,EAAWkG,OAKrC,gBAACiC,GAAD,KACE,gBAACE,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,gBAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,QACrBzF,IAAP9E,GAAoBA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,SAAWiB,EAG7C,gBAAC,EAAD,CAAiBA,SAAUA,IAF3B,gBAAC,EAAD,WAIMkD,IAAP9E,GAAoBA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,SAAWiB,EAG7C,gBAAC,GAAD,CAAgB2D,SAAU3D,IAF1B,gBAAC,GAAD,CAAgB2D,SAAUtF,KAK9B,gBAACgK,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,QACrBzF,IAAP9E,GAAoBA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,SAAWiB,EAG7C,gBAAC,GAAD,CAAa2D,SAAU3D,IAFvB,gBAAC,GAAD,CAAa2D,SAAUtF,KAK3B,gBAACgK,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,QACrBzF,IAAP9E,GAAoBA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,SAAWiB,EAG7C,gBAAC,GAAD,CAAwB2D,SAAU3D,IAFlC,gBAAC,GAAD,CAAwB2D,SAAUtF,SAI5B6E,IAAP9E,GAAoBA,KAAOC,MAAAA,OAAL,EAAKA,EAAQU,SAAWiB,EAG7C,gBAAC,GAAD,CAAgB2D,SAAU3D,IAF1B,gBAAC,GAAD,CAAgB2D,SAAUtF","sources":["webpack://brojoon/./components/Achievement/style.ts","webpack://brojoon/./components/Achievement/index.tsx","webpack://brojoon/./components/BasicModal/style.ts","webpack://brojoon/./components/BasicModal/index.tsx","webpack://brojoon/./components/MyProfileCard/style.ts","webpack://brojoon/./components/MyProfileCard/index.tsx","webpack://brojoon/./components/UserProfileCard/style.ts","webpack://brojoon/./components/UserProfileCard/index.tsx","webpack://brojoon/./components/UserMatches/style.ts","webpack://brojoon/./components/UserMatches/index.tsx","webpack://brojoon/./components/UserStatistics/style.ts","webpack://brojoon/./components/UserStatistics/index.tsx","webpack://brojoon/./components/UserFriendCard/style.ts","webpack://brojoon/./components/UserFriendCard/index.tsx","webpack://brojoon/./components/UserProfileAchieveCard/style.ts","webpack://brojoon/./components/UserProfileAchieveCard/index.tsx","webpack://brojoon/./pages/Profile/style.ts","webpack://brojoon/./pages/Profile/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n\r\n\t& .achieve-header {\r\n\t\tfont-size: 18px;\r\n\t\tfont-weight: 700;\r\n\t\tpadding: 15px 15px;\r\n\t\tborder-radius: 3px 3px 0 0;\r\n\t\tbackground-color: #1e1e1e;\r\n\t}\r\n\r\n\t& .header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\t& .content {\r\n\t\tfont-size: 14px;\r\n\t\tcolor: #bebebe;\r\n\t\tfont-weight: 600\r\n\t}\r\n`;\r\n\r\nexport const AchieveBody = styled.div`\r\n\tposition: relative;\r\n\ttext-align: center;\r\n\r\n\t& .progress-text {\r\n\t\t\tz-index: 15;\r\n\t\t\tposition: absolute;\r\n\t\t\tright: 50%;\r\n\t\t\ttransform: translateX(50%);\r\n\t\t\tline-height: 22px;\r\n\t\t\tfont-size: 12px;\r\n\t\t\twhite-space: nowrap;\r\n\t}\r\n\r\n\t& .progress-background {\r\n\t\tbackground-color: #253161;\r\n\t\twidth: 100%;\r\n\t\tfont-weight: 500;\r\n\t\tborder-radius: 0 0 3px 3px;\r\n\t\theight: 23px;\r\n\t}\r\n`;\r\n\r\nexport const ProgressBar = styled.div<{ width: string }>`\r\n  width: ${(props) => props.width};\r\n\tposition: absolute;\r\n\tz-index: 10;\r\n\tbackground-color: #365dff;\r\n\tfont-weight: 500;\r\n\tborder-radius: 0 0 3px 3px;\r\n\theight: 23px;\r\n\ttext-align: center;\r\n\ttransition: all ease-out 0.5s;\r\n`;","import React, { useEffect, useState, VFC } from 'react';\r\nimport { IAchievement } from '@typings/db';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/ko';\r\nimport { Container, AchieveBody, ProgressBar } from './style';\r\n\r\ninterface Props {\r\n  curValue: IAchievement | undefined;\r\n  maxCount: number;\r\n  Icon: any;\r\n  header: string;\r\n  condition: string;\r\n}\r\n\r\ndayjs.locale('ko');\r\n\r\nconst Achievement: VFC<Props> = ({ Icon, curValue, maxCount, header, condition }) => {\r\n  const [progress, setProgress] = useState(0);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      if (curValue?.number) {\r\n        if (maxCount <= curValue?.number && curValue?.star >= maxCount / 5) {\r\n          return;\r\n        } else if (progress < curValue?.number) {\r\n          setProgress((prev) => prev + 1);\r\n        }\r\n      }\r\n    }, 40);\r\n    return () => clearTimeout(timeout);\r\n  }, [progress, curValue, maxCount]);\r\n  return (\r\n    <Container>\r\n      <div className=\"achieve-header\">\r\n        <div className=\"header\">\r\n          <span>{header}</span>\r\n          <div>\r\n            <Icon />\r\n          </div>\r\n        </div>\r\n        <span className=\"content\">{condition}</span>\r\n      </div>\r\n      <AchieveBody style={{ position: 'relative', textAlign: 'center' }}>\r\n        <div className=\"progress-text\">\r\n          {curValue && (curValue?.star >= maxCount / 5 || curValue.number >= maxCount)\r\n            ? dayjs(curValue.time).format('YYYY. MM. DD. A HH:mm:ss')\r\n            : progress + ' / ' + maxCount}\r\n        </div>\r\n        <ProgressBar\r\n          width={`${\r\n            curValue && (curValue?.star >= maxCount / 5 || curValue?.number >= maxCount)\r\n              ? '100'\r\n              : (progress / maxCount) * 100\r\n          }%`}\r\n        ></ProgressBar>\r\n        <div className=\"progress-background\"></div>\r\n      </AchieveBody>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Achievement;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ModalBackground = styled.div`\r\n\tcolor: white;\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tz-index: 6000;\r\n\tbackground-color: rgba(30, 30, 030, 0.5);\r\n\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\twidth: 400px;\r\n\tbackground-color: #1e1e1e;\r\n\tcolor: #979797;\r\n\topacity: 1;\r\n\tborder: 1px solid #1e1e1e;\r\n\tborder-radius: 4px;\r\n\tz-index: 7000;\r\n\ttransform: translate(-50%, -50%);\r\n\tbox-shadow:\r\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n\r\n\t& .container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tbackground-color: #fec107;\r\n\t}\r\n\r\n\t& .header {\r\n\t\tmargin: 1px 10px 0 8px;\r\n\t\tfont-size: 20px;\r\n\t\tcolor: white;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t& .header-content {\r\n\t\tmargin: 0 0 0 4px;\r\n\t\tline-height: 22px;\r\n\t}\r\n\r\n\t& .header .emoji {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .content {\r\n\t\tmargin: 10px;\r\n\t}\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\tmargin-top: 15px;\r\n\tfont-weight: 600;\r\n\r\n\t& .noBtn {\r\n\t\tcolor: #979797;\r\n\t}\r\n`;","import React, { VFC } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { ModalBackground, ModalContent, ButtonContainer } from './style';\r\n\r\ninterface Props {\r\n  content: string;\r\n  headerContent: string;\r\n  NoBtn: (e: any) => void;\r\n  YesBtn: (e: any) => void;\r\n}\r\nconst BasicModal: VFC<Props> = ({ content, NoBtn, YesBtn, headerContent }) => {\r\n  return (\r\n    <>\r\n      <ModalBackground onClick={NoBtn}></ModalBackground>\r\n      <ModalContent>\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <ErrorIcon className=\"emoji\" />\r\n            <div className=\"header-content\">{headerContent}</div>\r\n          </div>\r\n          <div>\r\n            <IconButton className=\"emoji\" onClick={NoBtn}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">{content}</div>\r\n        <ButtonContainer>\r\n          <Button className=\"noBtn\" onClick={NoBtn} variant=\"text\">\r\n            NO\r\n          </Button>\r\n          <Button onClick={YesBtn} variant=\"text\">\r\n            YES\r\n          </Button>\r\n        </ButtonContainer>\r\n      </ModalContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicModal;\r\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\n\r\nexport const MyProfileCardContainer = styled(Box)`\r\n\twidth: 100%;\r\n\r\n\t& .card {\r\n\t\tbackground-color: #1e1e1e;\r\n\t\tcolor: white;\r\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\t\twidth: 100%;\r\n\t\tpadding: 5px 10px 15px 10px;\r\n\t}\r\n\r\n\t& .card-content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t& .avatar {\r\n\r\n\t}\r\n\r\n\t& span {\r\n\t\tcolor: #52575d;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t& .card-actions {\r\n\t\tdisplay: flex;\r\n\t\tflexDirection: column;\r\n\t\tjustifyContent: center;\r\n\t\talignItems: center;\r\n\r\n\t}\r\n\r\n\t& .setting-link {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t& .setting-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: #597aff;\r\n\t\tborder-color: #597aff;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t& .admin-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t& .admin-btn:hover {\r\n\t\tbackground-color: rgba(255, 212, 0, 1);\r\n\r\n\t}\r\n\r\n\t& .admin-block-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: #393939 !important;\r\n\t\tborder-color: #393939 !important;\r\n\t\tfont-weight: bold;\r\n\t}\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\twidth: 180px;\r\n\theight: 180px;\r\n\tmargin-bottom: 20px;\r\n`;","import React, { useContext, useEffect, useState } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { IUser } from '@typings/db';\r\nimport { MyProfileCardContainer, UserAvatar } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nconst MyProfileCard = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\r\n  const { data: isAdmin } = useSWR<boolean>('/api/users/checkAdminOrModerator', fetcher);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState = 0;\r\n  if (onGameList && myData && onGameList[myData.userId]) isState = 2;\r\n  if (isState === 0 && onlineList && myData) {\r\n    onlineList.map((onlineUser) => {\r\n      if (onlineUser.userId === myData.userId) isState = 1;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <MyProfileCardContainer>\r\n      <Card className=\"card\" variant=\"outlined\">\r\n        <CardContent className=\"card-content\">\r\n          <UserAvatar\r\n            isstate={`${\r\n              isState\r\n                ? isState === 1\r\n                  ? '2px solid #1ed14b'\r\n                  : '2px solid #FFD400'\r\n                : '2px solid #d63638'\r\n            }`}\r\n            src={myData?.profile}\r\n            alt=\"Avatar\"\r\n          />\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {myData?.userId}\r\n          </Typography>\r\n          <span>{myData?.username}</span>\r\n        </CardContent>\r\n        <CardActions className=\"card-actions\">\r\n          <Link to=\"/profile/setting\" className=\"setting-link\">\r\n            <Button className=\"setting-btn\" variant=\"contained\">\r\n              SETTING&nbsp;\r\n              <SettingsIcon />\r\n            </Button>\r\n          </Link>\r\n        </CardActions>\r\n        {isAdmin ? (\r\n          <CardActions className=\"card-actions\">\r\n            <Link to=\"/admin\" className=\"setting-link\">\r\n              <Button className=\"admin-btn\" variant=\"contained\">\r\n                ADMIN&nbsp;\r\n                <ManageAccountsIcon />\r\n              </Button>\r\n            </Link>\r\n          </CardActions>\r\n        ) : (\r\n          <CardActions className=\"card-actions\">\r\n            <Button className=\"admin-block-btn\" variant=\"contained\" disabled>\r\n              ADMIN&nbsp;\r\n              <ManageAccountsIcon />\r\n            </Button>\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    </MyProfileCardContainer>\r\n  );\r\n};\r\n\r\nexport default MyProfileCard;\r\n","\r\nimport styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const UserProfileCardContainer = styled(Box)`\r\n\twidth: 100%;\r\n\r\n\t& .card-container {\r\n\t\tbackground-color: #1e1e1e;\r\n\t\tcolor: white;\r\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\t\twidth: 100%;\r\n\t\tpadding: 5px 10px 15px 10px;\r\n\t}\r\n\r\n\t& .card-content {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t& .card-user-text {\r\n\t\tcolor: #52575d;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t& .card-action {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tjustify-content: space-betweens;\r\n\t}\r\n\r\n\t& .challenge-block-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: #393939;\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t& .watch-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t& .watch-btn:hover {\r\n\t\tbackground-color: rgba(255, 212, 0, 1);\r\n\t}\r\n\r\n\t& .challenge-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(22, 120, 209, 0.8);\r\n\t\tfont-weight: bold;\r\n\t}\r\n\r\n\t& .challenge-btn:hover\t {\r\n\t\tbackground-color: rgba(22, 120, 209, 1);\r\n\t}\r\n\r\n\t& .friend-block-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: #393939;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .friend-unfriend-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(30, 30, 30, 0.8);\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t\tcolor: #ec3f31;\r\n\t}\r\n\r\n\t& .friend-unfriend-btn:hover {\r\n\t\tbackground-color: rgba(30, 30, 30, 1);\r\n\t}\r\n\r\n\r\n\t& .friend-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(94, 189, 255, 0.8);\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .friend-btn:hover {\r\n\t\tbackground-color: rgba(94, 189, 255, 1);\r\n\t}\r\n\r\n\t& .unblock-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: red;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .block-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(255, 0, 0, 0.8);\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .block-btn:hover {\r\n\t\tbackground-color: rgba(255, 0, 0, 1);\r\n\t}\r\n\r\n\t& .message-block-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: #393939;\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .message-btn {\r\n\t\twidth: 100%;\r\n\t\theight: 35px;\r\n\t\tbackground-color: rgba(156, 250, 36, 0.8);\r\n\t\tfont-weight: bold;\r\n\t\tmargin: 20px 0 0 0;\r\n\t}\r\n\r\n\t& .message-btn:hover {\r\n\t\tbackground-color: rgba(156, 250, 36, 1);\r\n\t}\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\twidth: 180px;\r\n\theight: 180px;\r\n\tmargin-bottom: 20px;\r\n`;","import React, { useCallback, VFC, useState, useContext } from 'react';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { IUser, IDmList } from '@typings/db';\r\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\r\nimport GamepadIcon from '@mui/icons-material/Gamepad';\r\nimport axios from 'axios';\r\nimport BasicModal from '@components/BasicModal';\r\nimport config from '@utils/config';\r\nimport { UserProfileCardContainer, UserAvatar } from './style';\r\nimport { SocketContext } from '@store/socket';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface Props {\r\n  UserData: IUser;\r\n}\r\n\r\nconst UserProfileCard: VFC<Props> = ({ UserData }) => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { data: dmList, mutate: mutateDmList } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\r\n  const { data: isFriend, mutate: mutateisFriend } = useSWR<boolean>(\r\n    `/api/friend/checkfriend/${id}`,\r\n    fetcher,\r\n  );\r\n  const { data: isBlock, mutate: mutateIsBlock } = useSWR<boolean>(\r\n    `/api/friend/checkblock/${id}`,\r\n    fetcher,\r\n  );\r\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\r\n  const history = useHistory();\r\n  const [isAddFriendModal, setIsAddFriendModal] = useState(false);\r\n  const [isRemoveFriendModal, setIsRemoveFriendModal] = useState(false);\r\n  const [isBlockModal, setIsBlockModal] = useState(false);\r\n  const [isRemoveBlockModal, setIsRemoveBlockModal] = useState(false);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState = 0;\r\n  if (onGameList && onGameList[UserData?.userId]) isState = 2;\r\n  if (isState === 0 && onlineList && UserData) {\r\n    onlineList.map((onlineUser) => {\r\n      if (onlineUser.userId === UserData.userId) isState = 1;\r\n    });\r\n  }\r\n\r\n  const removeAllModals = useCallback(() => {\r\n    setIsAddFriendModal(false);\r\n    setIsBlockModal(false);\r\n    setIsRemoveBlockModal(false);\r\n    setIsRemoveFriendModal(false);\r\n  }, []);\r\n\r\n  const onToggleAddFriendModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsAddFriendModal((prev) => !prev);\r\n    },\r\n    [isAddFriendModal, setIsAddFriendModal],\r\n  );\r\n\r\n  const onToggleRemoveFriendModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsRemoveFriendModal((prev) => !prev);\r\n    },\r\n    [isRemoveFriendModal, setIsRemoveFriendModal],\r\n  );\r\n\r\n  const onToggleBlockModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsBlockModal((prev) => !prev);\r\n    },\r\n    [isBlockModal, setIsBlockModal],\r\n  );\r\n\r\n  const onToggleRemoveBlockModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsRemoveBlockModal((prev) => !prev);\r\n    },\r\n    [isRemoveBlockModal, setIsRemoveBlockModal],\r\n  );\r\n\r\n  const onClickChallengeBtn = useCallback((e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`/api/dms/sendMessage/${UserData.userId}/3/0`, { message: '' }, config)\r\n      .then((res) => {\r\n        history.push(`/game/ping-pong/${res.data}`);\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.data.message === 'Block 상태') {\r\n          toast.error(`You were blocked by ${UserData.username}`, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n        } else {\r\n          toast.error(error.message, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onClickWatchBtn = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (onGameList) history.push(`/game/ping-pong/${onGameList[UserData.userId]}`);\r\n    },\r\n    [onGameList],\r\n  );\r\n\r\n  const onClickAddFriendBtn = useCallback((e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/api/friend/addfriend/${UserData.userId}`, config)\r\n      .then(() => {\r\n        mutateisFriend();\r\n        removeAllModals();\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.data.message === 'Block 상태') {\r\n          toast.error(`You were blocked by ${UserData.username}`, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n        } else {\r\n          toast.error(error.message, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  const onClickRemoveFriendBtn = useCallback((e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/api/friend/removefriend/${UserData.userId}`, config)\r\n      .then(() => {\r\n        mutateisFriend();\r\n        removeAllModals();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message, {\r\n          autoClose: 4000,\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          theme: 'colored',\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const onClickAddBlockBtn = useCallback((e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/api/friend/addblock/${UserData.userId}`, config)\r\n      .then(() => {\r\n        mutateisFriend();\r\n        mutateIsBlock();\r\n        removeAllModals();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message, {\r\n          autoClose: 4000,\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          theme: 'colored',\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const onClickRemoveBlockBtn = useCallback((e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`/api/friend/removeblock/${UserData.userId}`, config)\r\n      .then(() => {\r\n        mutateisFriend();\r\n        mutateIsBlock();\r\n        removeAllModals();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message, {\r\n          autoClose: 4000,\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          theme: 'colored',\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  const onClickMessageBtn = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      axios\r\n        .get(`/api/dms/create/${UserData.userId}`, config)\r\n        .then((res) => {\r\n          mutateDmList().then(() => {\r\n            history.push(`/social/dm/${res.data}`);\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n        });\r\n    },\r\n    [UserData, mutateDmList, dmList],\r\n  );\r\n\r\n  return (\r\n    <UserProfileCardContainer>\r\n      {isAddFriendModal && (\r\n        <BasicModal\r\n          headerContent={`Add ${id}`}\r\n          content={`Are you sure you want to add ${id} to your friends?`}\r\n          NoBtn={onToggleAddFriendModal}\r\n          YesBtn={onClickAddFriendBtn}\r\n        />\r\n      )}\r\n      {isRemoveFriendModal && (\r\n        <BasicModal\r\n          headerContent={`Remove ${id}`}\r\n          content={`Are you sure you want to permanently remove ${id} from your friends?`}\r\n          NoBtn={onToggleRemoveFriendModal}\r\n          YesBtn={onClickRemoveFriendBtn}\r\n        />\r\n      )}\r\n      {isBlockModal && (\r\n        <BasicModal\r\n          headerContent={`Block ${id}`}\r\n          content={`Are you sure you want to block ${id}? It will be removed from your friend list too.`}\r\n          NoBtn={onToggleBlockModal}\r\n          YesBtn={onClickAddBlockBtn}\r\n        />\r\n      )}\r\n      {isRemoveBlockModal && (\r\n        <BasicModal\r\n          headerContent={`UnBlock ${id}`}\r\n          content={`Are you sure you want to unblock ${id}?`}\r\n          NoBtn={onToggleRemoveBlockModal}\r\n          YesBtn={onClickRemoveBlockBtn}\r\n        />\r\n      )}\r\n\r\n      <Card className=\"card-container\" variant=\"outlined\">\r\n        <CardContent className=\"card-content\">\r\n          <UserAvatar\r\n            isstate={`${\r\n              isState\r\n                ? isState === 1\r\n                  ? '2px solid #1ed14b'\r\n                  : '2px solid #FFD400'\r\n                : '2px solid #d63638'\r\n            }`}\r\n            src={UserData?.profile}\r\n            alt=\"Avatar\"\r\n          />\r\n          <Typography variant=\"h5\" component=\"div\">\r\n            {UserData?.userId}\r\n          </Typography>\r\n          <span className=\"card-user-text\">{UserData?.username}</span>\r\n        </CardContent>\r\n        <CardActions className=\"card-action\">\r\n          {isBlock ? (\r\n            <Button className=\"challenge-block-btn\" variant=\"contained\" disabled>\r\n              BLOCKED&nbsp;\r\n              <GamepadIcon />\r\n            </Button>\r\n          ) : isState === 2 && onGameList && myData && onGameList[myData?.userId] === undefined ? (\r\n            <Button onClick={onClickWatchBtn} variant=\"contained\" className=\"watch-btn\">\r\n              WATCH&nbsp;\r\n              <VisibilityIcon />\r\n            </Button>\r\n          ) : onGameList && myData && onGameList[myData?.userId] ? (\r\n            <Button variant=\"contained\" className=\"challenge-block-btn\" disabled>\r\n              CHALLENGE&nbsp;\r\n              <GamepadIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={onClickChallengeBtn} variant=\"contained\" className=\"challenge-btn\">\r\n              CHALLENGE&nbsp;\r\n              <GamepadIcon />\r\n            </Button>\r\n          )}\r\n          {isBlock ? (\r\n            <Button variant=\"contained\" disabled className=\"friend-block-btn\">\r\n              BLOCKED&nbsp;\r\n              <PersonAddAlt1Icon />\r\n            </Button>\r\n          ) : isFriend ? (\r\n            <Button\r\n              onClick={onToggleRemoveFriendModal}\r\n              variant=\"contained\"\r\n              className=\"friend-unfriend-btn\"\r\n            >\r\n              UNFRIEND&nbsp;\r\n              <PersonAddAlt1Icon />\r\n            </Button>\r\n          ) : (\r\n            <Button className=\"friend-btn\" onClick={onToggleAddFriendModal} variant=\"contained\">\r\n              FRIEND&nbsp;\r\n              <PersonAddAlt1Icon />\r\n            </Button>\r\n          )}\r\n          {isBlock ? (\r\n            <Button className=\"unblock-btn\" onClick={onToggleRemoveBlockModal} variant=\"contained\">\r\n              UNBLOCK&nbsp;\r\n              <PersonAddAlt1Icon />\r\n            </Button>\r\n          ) : (\r\n            <Button className=\"block-btn\" onClick={onToggleBlockModal} variant=\"contained\">\r\n              BLOCK&nbsp;\r\n              <PersonOffIcon />\r\n            </Button>\r\n          )}\r\n          {isBlock ? (\r\n            <Button className=\"message-block-btn\" variant=\"contained\" disabled>\r\n              BLOCKED&nbsp;\r\n              <ChatIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button className=\"message-btn\" onClick={onClickMessageBtn} variant=\"contained\">\r\n              MESSAGE&nbsp;\r\n              <ChatIcon />\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </UserProfileCardContainer>\r\n  );\r\n};\r\n\r\nexport default UserProfileCard;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserMatchesContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n\tfont-size: 16px;\r\n\twidth: 100%;\r\n\tbackground-color: #1e1e1e;\r\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\r\n\t& .profile-matches-header {\r\n\t\tmargin: 18px;\r\n\t\tfont-size: 22px;\r\n\t}\r\n\r\n\t& .profile-pagination-wrapper {\r\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\r\n\t\tcolor: white;\r\n\r\n\t}\r\n\r\n\t& .profile-pagination-wrapper {\r\n\t\tcolor: white;\r\n\t}\r\n\t& .profile-pagination {\r\n\t\toverflow: hidden;\r\n\t}\r\n\r\n\t& .css-1mf6u8l-MuiSvgIcon-root-MuiSelect-icon {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .css-pqjvzy-MuiSvgIcon-root-MuiSelect-icon {\r\n\t\tcolor: white;\r\n\t}\r\n\t\r\n`;\r\n\r\nexport const UserMatchesListWrapper = styled.div`\r\n\r\n  & .list-item-wrapper {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\r\n\t\tpadding: 6px 15px;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .list-item-wrapper:hover {\r\n\t\tbackground: #666666;\r\n\t}\r\n\r\n\t& .avatar {\r\n\t\twidth: 56px;\r\n\t\theight: 56px;\r\n\t}\r\n\r\n\t& .opponent-text {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .user-text {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .user-matches-icon-win {\r\n\t\tfont-size: 34px;\r\n\t\tcolor: #ffe937;\r\n\t}\r\n\t& .user-matches-icon-lose {\r\n\t\tfont-size: 34px;\r\n\t\tcolor: #ec443b;\r\n\t}\r\n\r\n\t& .matches-text {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\twidth: 63%;\r\n\t}\r\n`;\r\n\r\nexport const UserMatchesResult = styled.div<{ textColor: string }>`\r\n\tcolor: ${((props) => props.textColor)};\r\n`;","import React, { VFC, useState } from 'react';\r\nimport { IUser } from '@typings/db';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { UserMatchesContainer, UserMatchesListWrapper, UserMatchesResult } from './style';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport SentimentVeryDissatisfiedSharpIcon from '@mui/icons-material/SentimentVeryDissatisfiedSharp';\r\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\r\nimport { Link } from 'react-router-dom';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport List from '@mui/material/List';\r\nimport { IUserGameHistory } from '@typings/db';\r\n\r\ninterface Props {\r\n  userData: IUser | null | undefined;\r\n}\r\n\r\nconst UserMatches: VFC<Props> = ({ userData }) => {\r\n  const { data: userGameHistory } = useSWR<IUserGameHistory[]>(\r\n    `/api/game/history/userGameHistory/${userData?.userId}`,\r\n    fetcher,\r\n  );\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (e: any, newPage: any) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (e: any) => {\r\n    setRowsPerPage(parseInt(e.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <UserMatchesContainer>\r\n      <div className=\"profile-matches-header\">Matches</div>\r\n      {userGameHistory?.map((history, index) => {\r\n        if (index >= rowsPerPage * (page + 1)) return;\r\n        if (page > 0) {\r\n          if (index < rowsPerPage * page) return;\r\n        }\r\n        return (\r\n          <UserMatchesListWrapper key={history.historyId}>\r\n            <Link to={`/game/history/${history.historyId}`}>\r\n              <List className=\"list-item-wrapper\">\r\n                <Avatar className=\"avatar\" src={userData?.profile} alt=\"Avatar\" />\r\n                <div className=\"matches-text\">\r\n                  <UserMatchesResult textColor={history?.isWinner ? '#ffe937' : '#ec443b'}>\r\n                    {history?.isWinner ? 'Won' : 'Lost'}\r\n                    <span className=\"opponent-text\"> against {history?.opponent}</span>\r\n                  </UserMatchesResult>\r\n                  <span className=\"\">{history?.myPoint + ' - ' + history?.opponentPoint}</span>\r\n                </div>\r\n\r\n                {history?.isWinner ? (\r\n                  <SentimentVerySatisfiedIcon className=\"user-matches-icon-win\" />\r\n                ) : (\r\n                  <SentimentVeryDissatisfiedSharpIcon className=\"user-matches-icon-lose\" />\r\n                )}\r\n              </List>\r\n            </Link>\r\n          </UserMatchesListWrapper>\r\n        );\r\n      })}\r\n      <div className=\"profile-pagination-wrapper\">\r\n        <TablePagination\r\n          className=\"profile-pagination\"\r\n          component=\"div\"\r\n          count={userGameHistory ? userGameHistory?.length : 0}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          rowsPerPage={rowsPerPage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n          style={{ color: 'white' }}\r\n        />\r\n      </div>\r\n    </UserMatchesContainer>\r\n  );\r\n};\r\n\r\nexport default UserMatches;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserStatisticsContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor:white;\r\n\twidth: 100%;\r\n\theight: 270px;\r\n\tbackground-color: #1e1e1e;\r\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\tpadding: 5px 10px 15px 10px;\r\n\tmargin-top: 15px;\r\n\tfont-size: 20px;\r\n\twhite-space: nowrap;\r\n\r\n\t& .statistics-header {\r\n\t\tfont-size: 22px;\r\n\t\tmargin: 10px 0 15px 10px;\r\n\t}\r\n\r\n\t& .statistics-count-wrapper {\r\n\t\tmargin: 10px;\r\n\t\tdisplay: flex;\r\n\r\n\t}\r\n\r\n\t& .statistics-match-icon {\r\n\t\tfont-size: 45px;\r\n\r\n\t}\r\n\r\n\t& .statistics-match-text {\r\n\t\twidth: 100%;\r\n\t\tmargin-left: 15px;\r\n\t\tline-height: 40px;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n`;","import React, { VFC } from 'react';\r\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\r\nimport EventBusyIcon from '@mui/icons-material/EventBusy';\r\nimport { IUserMatches, IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport GradeIcon from '@mui/icons-material/Grade';\r\nimport { UserStatisticsContainer } from './style';\r\n\r\ninterface Props {\r\n  userData: IUser | undefined | null;\r\n}\r\n\r\nconst UserStatistics: VFC<Props> = ({ userData }) => {\r\n  const { data: MatchesCount } = useSWR<IUserMatches>(\r\n    `/api/game/history/userWinLoseFight/${userData?.userId}`,\r\n    fetcher,\r\n  );\r\n\r\n  return (\r\n    <UserStatisticsContainer>\r\n      <div className=\"statistics-header\">Statistics</div>\r\n      <div className=\"statistics-count-wrapper \">\r\n        <GradeIcon className=\"statistics-match-icon\" />\r\n        <div className=\"statistics-match-text\">\r\n          <span>RATING</span>\r\n          <span>\r\n            {MatchesCount &&\r\n              (2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14 < 0\r\n                ? 0\r\n                : 2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"statistics-count-wrapper \">\r\n        <EmojiEventsIcon className=\"statistics-match-icon\" />\r\n        <div className=\"statistics-match-text\">\r\n          <span>Win Count</span>\r\n          <span>{MatchesCount?.numOfWin}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"statistics-count-wrapper \">\r\n        <EventBusyIcon className=\"statistics-match-icon\" />\r\n        <div className=\"statistics-match-text\">\r\n          <span>Loss Count</span>\r\n          <span>{MatchesCount?.numOfLose}</span>\r\n        </div>\r\n      </div>\r\n    </UserStatisticsContainer>\r\n  );\r\n};\r\n\r\nexport default UserStatistics;\r\n","import styled from '@emotion/styled';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\n\r\nexport const UserFriendCardContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n\tfont-size: 16px;\r\n\twidth: 100%;\r\n\tbackground-color: #1e1e1e;\r\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\theight: 300px;\r\n\r\n\t& .friends-header {\r\n\t\tmargin: 18px;\r\n\t\tfont-size: 22px;\r\n\t}\r\n\r\n\t& .list-item-wrapper {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .list-item-wrapper:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.5);\r\n\t}\r\n\r\n\t& .user {\r\n\t\tmargin-left: 12px;\r\n\t}\r\n\r\n\t& .no-friend-wrapper {\r\n\t\tdisplay: flex;\r\n\t\theight: 100%;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) < { isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { VFC, useContext } from 'react';\r\nimport { UserFriendCardContainer, UserAvatar, ScrollbarColor } from './style';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport { IUser } from '@typings/db';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { IFriendList, IAllUser } from '@typings/db';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport { Link } from 'react-router-dom';\r\nimport { SocketContext } from '@store/socket';\r\n\r\ninterface Props {\r\n  userData: IUser | undefined | null;\r\n}\r\n\r\nconst UserFriendCard: VFC<Props> = ({ userData }) => {\r\n  const { data: userFriendList } = useSWR<IFriendList[]>(\r\n    `/api/friend/friends/${userData?.userId}`,\r\n    fetcher,\r\n  );\r\n  const { data: allUser } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n  return (\r\n    <UserFriendCardContainer>\r\n      <div className=\"friends-header\">Friends</div>\r\n      {userFriendList?.length ? (\r\n        <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\r\n          <div>\r\n            {userFriendList?.map((friend) => {\r\n              return allUser?.map((user: IAllUser) => {\r\n                if (friend.userId2 === user.userId) {\r\n                  isState = 0;\r\n                  if (onGameList && onGameList[user.userId]) isState = 2;\r\n\r\n                  if (isState === 0) {\r\n                    onlineList?.map((onlineUser) => {\r\n                      if (onlineUser.userId === user.userId) isState = 1;\r\n                    });\r\n                  }\r\n                  return (\r\n                    <Link to={`/users/${user?.userId}`} key={user.userId}>\r\n                      <ListItem className=\"list-item-wrapper\" button>\r\n                        <UserAvatar\r\n                          isstate={`${\r\n                            isState\r\n                              ? isState === 1\r\n                                ? '2px solid #1ed14b'\r\n                                : '2px solid #FFD400'\r\n                              : '2px solid #d63638'\r\n                          }`}\r\n                          src={user?.profile}\r\n                          alt=\"Avatar\"\r\n                        />\r\n                        <ListItemText className=\"user\" primary={user?.username} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  );\r\n                }\r\n              });\r\n            })}\r\n          </div>\r\n        </Scrollbars>\r\n      ) : (\r\n        <div className=\"no-friend-wrapper\">\r\n          <span>no friend found</span>\r\n        </div>\r\n      )}\r\n    </UserFriendCardContainer>\r\n  );\r\n};\r\n\r\nexport default UserFriendCard;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserProfileAchieveCardContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n\tfont-size: 16px;\r\n\twidth: 100%;\r\n\tbackground-color: #1e1e1e;\r\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\tmargin-bottom: 15px;\r\n\theight: 320px;\r\n\r\n\t& .achievements-header {\r\n\t\tmargin: 18px;\r\n\t\tfont-size: 22px;\r\n\t}\r\n\r\n\t& .achievements-achievement {\r\n\t\tmargin: 15px;\r\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\r\n\t}\r\n\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { VFC } from 'react';\r\nimport { UserProfileAchieveCardContainer, ScrollbarColor } from './style';\r\nimport { IAchievement } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport { IUser } from '@typings/db';\r\nimport Achievement from '@components/Achievement';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport StarIcon from '@mui/icons-material/Star';\r\nimport BusinessIcon from '@mui/icons-material/Business';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport GroupsIcon from '@mui/icons-material/Groups';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\r\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\r\nimport ForumIcon from '@mui/icons-material/Forum';\r\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\r\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\r\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\r\nimport LocalDiningIcon from '@mui/icons-material/LocalDining';\r\nimport ShieldIcon from '@mui/icons-material/Shield';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport LocalPoliceIcon from '@mui/icons-material/LocalPolice';\r\nimport SchoolIcon from '@mui/icons-material/School';\r\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\r\nimport GavelIcon from '@mui/icons-material/Gavel';\r\n\r\ninterface Props {\r\n  userData: IUser | undefined | null;\r\n}\r\n\r\nconst UserProfileAchieveCard: VFC<Props> = ({ userData }) => {\r\n  const { data: friendCount } = useSWR<IAchievement>(\r\n    `/api/friend/countFriends/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  const { data: DmListCount } = useSWR<IAchievement>(\r\n    `/api/dms/getDmListNumber/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  const { data: matchCount } = useSWR<IAchievement>(\r\n    `/api/game/achievement/numOfFight/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  const { data: winCount } = useSWR<IAchievement>(\r\n    `/api/game/achievement/numOfWin/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  const { data: loseCount } = useSWR<IAchievement>(\r\n    `/api/game/achievement/numOfLose/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  const { data: channelCount } = useSWR<IAchievement>(\r\n    `/api/channels/achievement/numOfChannels/${userData?.userId}`,\r\n    fetcher,\r\n    {\r\n      dedupingInterval: 10000,\r\n    },\r\n  );\r\n  return (\r\n    <UserProfileAchieveCardContainer>\r\n      <div className=\"achievements-header\">Achievements</div>\r\n      <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={ChatBubbleIcon}\r\n            maxCount={5}\r\n            curValue={channelCount}\r\n            header={'Channels member'}\r\n            condition={'Join 5 channels'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={GroupsIcon}\r\n            maxCount={10}\r\n            curValue={friendCount}\r\n            header={'Small group'}\r\n            condition={'Have 10 friends'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={RecordVoiceOverIcon}\r\n            maxCount={30}\r\n            curValue={DmListCount}\r\n            header={'Chatterbox '}\r\n            condition={'DM to 30 people'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={LocalPoliceIcon}\r\n            maxCount={15}\r\n            curValue={loseCount}\r\n            header={'Captain America'}\r\n            condition={'Lose 15 games'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={LightbulbIcon}\r\n            maxCount={5}\r\n            curValue={matchCount}\r\n            header={'Welcome newbie '}\r\n            condition={'Match 5 times'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={SchoolIcon}\r\n            maxCount={30}\r\n            curValue={matchCount}\r\n            header={'Alumnus'}\r\n            condition={'Match 30 times'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={LocalDiningIcon}\r\n            maxCount={5}\r\n            curValue={winCount}\r\n            header={'Warriors'}\r\n            condition={'Win 5 games'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={LocalFireDepartmentIcon}\r\n            maxCount={15}\r\n            curValue={winCount}\r\n            header={'Fighter'}\r\n            condition={'Win 15 games'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={BusinessIcon}\r\n            maxCount={5}\r\n            curValue={friendCount}\r\n            header={'Businesses with 5 employees'}\r\n            condition={'Have 5 friends'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={ForumIcon}\r\n            maxCount={60}\r\n            curValue={channelCount}\r\n            header={'Community member'}\r\n            condition={'Join 60 channels'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={SendIcon}\r\n            maxCount={5}\r\n            curValue={DmListCount}\r\n            header={'Paper Airplane'}\r\n            condition={'DM to 5 people'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={FacebookIcon}\r\n            maxCount={150}\r\n            curValue={channelCount}\r\n            header={'Addicted to social media'}\r\n            condition={'Join 150 channels'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={AirplanemodeActiveIcon}\r\n            maxCount={300}\r\n            curValue={matchCount}\r\n            header={'Air Force Medal of honor'}\r\n            condition={'Match 300 times'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={ShieldIcon}\r\n            maxCount={5}\r\n            curValue={loseCount}\r\n            header={'Shield'}\r\n            condition={'Lose 5 games'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={SecurityIcon}\r\n            maxCount={100}\r\n            curValue={loseCount}\r\n            header={'Aegis'}\r\n            condition={'Lose 100 games'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={SportsBaseballIcon}\r\n            maxCount={100}\r\n            curValue={DmListCount}\r\n            header={'Chan Ho Park '}\r\n            condition={'DM to 100 people'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={StarIcon}\r\n            maxCount={100}\r\n            curValue={friendCount}\r\n            header={'Star'}\r\n            condition={'Have 100 friends'}\r\n          />\r\n        </div>\r\n        <div className=\"achievements-achievement\">\r\n          <Achievement\r\n            Icon={GavelIcon}\r\n            maxCount={100}\r\n            curValue={winCount}\r\n            header={'Mjolnir'}\r\n            condition={'Win 100 games'}\r\n          />\r\n        </div>\r\n      </Scrollbars>\r\n    </UserProfileAchieveCardContainer>\r\n  );\r\n};\r\n\r\nexport default UserProfileAchieveCard;\r\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport const ProfileContainer = styled(Box)`\r\n\tflex-grow: 1;\r\n\tbackground-color: #121212;\r\n\tpadding: 20px;\r\n`;","import React from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport MyProfileCard from '@components/MyProfileCard';\r\nimport UserProfileCard from '@components/UserProfileCard';\r\nimport UserMatches from '@components/UserMatches';\r\nimport UserStatistics from '@components/UserStatistics';\r\nimport UserFriendCard from '@components/UserFriendCard';\r\nimport UserProfileAchieveCard from '@components/UserProfileAchieveCard';\r\nimport fetcher from '@utils/fetcher';\r\nimport { useParams } from 'react-router-dom';\r\nimport { IUser, IAllUser } from '@typings/db';\r\nimport useSWR from 'swr';\r\nimport { ProfileContainer } from './style';\r\n\r\nconst Profile = () => {\r\n  const { id } = useParams<{ id: string }>();\r\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\r\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\r\n  let UserData;\r\n  if (id && id !== myData?.userId) {\r\n    alluser?.map((user) => {\r\n      if (user.userId === id) UserData = user;\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ProfileContainer>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={12} md={3}>\r\n          {id === undefined || id === myData?.userId || !UserData ? (\r\n            <MyProfileCard />\r\n          ) : (\r\n            <UserProfileCard UserData={UserData} />\r\n          )}\r\n          {id === undefined || id === myData?.userId || !UserData ? (\r\n            <UserStatistics userData={myData} />\r\n          ) : (\r\n            <UserStatistics userData={UserData} />\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={6}>\r\n          {id === undefined || id === myData?.userId || !UserData ? (\r\n            <UserMatches userData={myData} />\r\n          ) : (\r\n            <UserMatches userData={UserData} />\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={3}>\r\n          {id === undefined || id === myData?.userId || !UserData ? (\r\n            <UserProfileAchieveCard userData={myData} />\r\n          ) : (\r\n            <UserProfileAchieveCard userData={UserData} />\r\n          )}\r\n          {id === undefined || id === myData?.userId || !UserData ? (\r\n            <UserFriendCard userData={myData} />\r\n          ) : (\r\n            <UserFriendCard userData={UserData} />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </ProfileContainer>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"names":["Container","styled","AchieveBody","ProgressBar","props","width","dayjs","Icon","curValue","maxCount","header","condition","useState","progress","setProgress","useEffect","timeout","setTimeout","number","star","prev","clearTimeout","className","style","position","textAlign","time","format","ModalBackground","ModalContent","ButtonContainer","content","NoBtn","YesBtn","headerContent","onClick","Error","IconButton","Close","Button","variant","MyProfileCardContainer","Box","UserAvatar","Avatar","isstate","useParams","id","myData","useSWR","fetcher","data","isAdmin","useContext","SocketContext","onlineList","onGameList","isState","userId","map","onlineUser","Card","CardContent","src","profile","alt","Typography","component","username","CardActions","to","Settings","ManageAccounts","disabled","UserProfileCardContainer","UserData","dmList","mutateDmList","mutate","isFriend","mutateisFriend","isBlock","mutateIsBlock","history","useHistory","isAddFriendModal","setIsAddFriendModal","isRemoveFriendModal","setIsRemoveFriendModal","isBlockModal","setIsBlockModal","isRemoveBlockModal","setIsRemoveBlockModal","removeAllModals","useCallback","onToggleAddFriendModal","e","preventDefault","onToggleRemoveFriendModal","onToggleBlockModal","onToggleRemoveBlockModal","onClickChallengeBtn","axios","message","config","then","res","push","catch","error","response","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","theme","onClickWatchBtn","onClickAddFriendBtn","onClickRemoveFriendBtn","onClickAddBlockBtn","onClickRemoveBlockBtn","onClickMessageBtn","BasicModal","Gamepad","undefined","Visibility","PersonAddAlt1","PersonOff","Chat","UserMatchesContainer","UserMatchesListWrapper","UserMatchesResult","textColor","userData","userGameHistory","page","setPage","rowsPerPage","setRowsPerPage","index","key","historyId","List","isWinner","opponent","myPoint","opponentPoint","SentimentVerySatisfied","SentimentVeryDissatisfiedSharp","TablePagination","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","color","UserStatisticsContainer","MatchesCount","Grade","numOfWin","numOfLose","EmojiEvents","EventBusy","UserFriendCardContainer","ScrollbarColor","userFriendList","allUser","renderThumbVertical","friend","user","userId2","ListItem","button","ListItemText","primary","UserProfileAchieveCardContainer","friendCount","dedupingInterval","DmListCount","matchCount","winCount","loseCount","channelCount","Achievement","ChatBubbleIcon","GroupsIcon","RecordVoiceOverIcon","LocalPoliceIcon","LightbulbIcon","SchoolIcon","LocalDiningIcon","LocalFireDepartmentIcon","BusinessIcon","ForumIcon","SendIcon","FacebookIcon","AirplanemodeActiveIcon","ShieldIcon","SecurityIcon","SportsBaseballIcon","StarIcon","GavelIcon","ProfileContainer","alluser","Grid","container","spacing","item","xs","sm","md"],"sourceRoot":""}