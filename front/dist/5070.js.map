{"version":3,"file":"5070.js","mappings":"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","sources":["webpack://brojoon/./components/DMLeftDrawer/style.ts","webpack://brojoon/./components/DMLeftDrawer/index.tsx","webpack://brojoon/./components/FriendsList/style.ts","webpack://brojoon/./components/FriendsList/index.tsx","webpack://brojoon/./components/FriendsOnlineList/style.ts","webpack://brojoon/./components/FriendsOnlineList/index.tsx","webpack://brojoon/./components/BlockList/style.ts","webpack://brojoon/./components/BlockList/index.tsx","webpack://brojoon/./pages/SocialSlider/style.ts","webpack://brojoon/./pages/SocialSlider/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const DMLeftDrawerContainer = styled.div`\r\n\twidth: 300px;\r\n\theight: 100%;\r\n\tpadding: 30px 15px;\r\n\tbackground-color: #363636;\r\n\tborder-right: 1px solid #4f4f4f;\r\n\toverflow: hidden;\r\n\r\n\t& .search-input {\r\n\t\twidth: 100%;\r\n\t\toutline: none;\r\n\t\tresize: none;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground: #bdbdbd;\r\n\t\tfont-size: 16px;\r\n\t\tfont-weight: bold;\r\n\t\tfont-family: monospace;\r\n\t\theight: 40px;\r\n\t\tcolor: black;\r\n\t\tborder: none;\r\n\t\tpadding: 0 12px;\r\n\t}\r\n\r\n\t& .friend-icon-wrapper {\r\n\t\tborder-top: 1px solid #4f4f4f;\r\n\t\tborder-bottom: 1px solid #4f4f4f;\r\n\t\tmargin: 10px 0;\r\n\t\tpadding: 14px 0 0;\r\n\t\theight: 80px;\r\n\t}\r\n\r\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\r\n\t\tbackground-color: #666666 !important;\r\n\t}\r\n\r\n\t& .friend-list-wrapper {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t& .friend-list-wrapper:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.7);\r\n\t}\r\n\r\n\t& .friend-list-btn {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .friend-list-icon {\r\n\t\tmargin-right: 20px;\r\n\t}\r\n`;\r\n\r\nexport const DMListContainer = styled.div`\r\n\theight: 79%;\r\n\r\n\t& .list {\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\r\n\t\tbackground-color: #666666 !important;\r\n\t}\r\n\r\n\t& .list:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.7);\r\n\t}\r\n\r\n\t& .list-item-button {\r\n\t\tpadding: 8px;\r\n\t}\r\n\r\n\t& .user-avatar-id-wrapper {\r\n\t\tdisplay: flex;\r\n\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\r\n\t& .user-id {\r\n\t\tmargin-left: 12px;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\tmargin-left: 0;\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { useCallback, useState, useContext } from 'react';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport List from '@mui/material/List';\r\nimport { IUser, IAllUser, IDmList, IBlockList } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport useSWR from 'swr';\r\nimport { Link } from 'react-router-dom';\r\nimport EmojiPeopleRoundedIcon from '@mui/icons-material/EmojiPeopleRounded';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport { DMLeftDrawerContainer, DMListContainer, UserAvatar, ScrollbarColor } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nlet dmlist2: IDmList[] | undefined;\r\n\r\nconst DMLeftDrawerBar = () => {\r\n  const { data: dmlist } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\r\n  const { data: users } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\r\n  const { data: blockList } = useSWR<IBlockList[]>(`/api/friend/blocklist`, fetcher);\r\n  // const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\r\n\r\n  const [selectedIndex, setSelectedIndex] = useState(0);\r\n  const [dmSearchInputValue, setDMSearchInputValue] = useState('');\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  const handleListItemClick = useCallback(\r\n    (event: any, index: number) => {\r\n      setSelectedIndex(index);\r\n    },\r\n    [selectedIndex, setSelectedIndex],\r\n  );\r\n\r\n  const onChangeDMSearchInput = useCallback((e) => {\r\n    setDMSearchInputValue(e.target.value);\r\n  }, []);\r\n\r\n  if (dmSearchInputValue && dmSearchInputValue.indexOf('\\\\') === -1) {\r\n    dmlist2 = dmlist?.filter((dm) => {\r\n      const regex = new RegExp(dmSearchInputValue, 'gi');\r\n      return dm.username.match(regex);\r\n    });\r\n  }\r\n\r\n  const getDMList = useCallback(\r\n    (inputValue: string) => {\r\n      if (!inputValue) return dmlist;\r\n      else return dmlist2;\r\n    },\r\n    [dmlist],\r\n  );\r\n\r\n  return (\r\n    <DMLeftDrawerContainer>\r\n      <input\r\n        className=\"search-input\"\r\n        onChange={onChangeDMSearchInput}\r\n        value={dmSearchInputValue}\r\n        autoComplete=\"off\"\r\n      ></input>\r\n      <div className=\"friend-icon-wrapper\">\r\n        <Link to={`/social`}>\r\n          <List className=\"friend-list-wrapper\" component=\"nav\" aria-label=\"main mailbox folders\">\r\n            <ListItemButton\r\n              className=\"friend-list-btn\"\r\n              selected={selectedIndex === 0}\r\n              onClick={(event: any) => handleListItemClick(event, 0)}\r\n            >\r\n              <EmojiPeopleRoundedIcon className=\"friend-list-icon\" />\r\n              <ListItemText primary=\"Friends\" />\r\n            </ListItemButton>\r\n          </List>\r\n        </Link>\r\n      </div>\r\n      <DMListContainer>\r\n        <Scrollbars\r\n          autoHide\r\n          renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\r\n        >\r\n          <div>\r\n            {getDMList(dmSearchInputValue)?.map((dm: IDmList, index: number) => {\r\n              let isblock = false;\r\n              blockList?.map((blockedUser) => {\r\n                if (blockedUser.userId2 === dm.userId) isblock = true;\r\n              });\r\n              if (!isblock) {\r\n                return (\r\n                  <Link to={`/social/dm/${dm.id}`} key={dm.id}>\r\n                    <List className=\"list\" component=\"nav\" aria-label=\"main mailbox folders\">\r\n                      <ListItemButton\r\n                        className=\"list-item-button\"\r\n                        selected={selectedIndex === index + 1}\r\n                        onClick={(event: any) => handleListItemClick(event, index + 1)}\r\n                      >\r\n                        {users?.map((user: any) => {\r\n                          if (user.userId === dm.userId) {\r\n                            isState = 0;\r\n                            if (onGameList && onGameList[user.userId]) isState = 2;\r\n                            if (isState === 0) {\r\n                              onlineList?.map((onlineUser) => {\r\n                                if (onlineUser.userId === user.userId) isState = 1;\r\n                              });\r\n                            }\r\n                            return (\r\n                              <div className=\"user-avatar-id-wrapper\" key={dm.id}>\r\n                                <UserAvatar\r\n                                  isstate={`${\r\n                                    isState\r\n                                      ? isState === 1\r\n                                        ? '2px solid #1ed14b'\r\n                                        : '2px solid #FFD400'\r\n                                      : '2px solid #d63638'\r\n                                  }`}\r\n                                  src={user.profile}\r\n                                  alt=\"Avatar\"\r\n                                />\r\n                                <ListItemText className=\"user-id\" primary={user.username} />\r\n                              </div>\r\n                            );\r\n                          }\r\n                        })}\r\n                      </ListItemButton>\r\n                    </List>\r\n                  </Link>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </Scrollbars>\r\n      </DMListContainer>\r\n    </DMLeftDrawerContainer>\r\n  );\r\n};\r\n\r\nexport default DMLeftDrawerBar;\r\n","import styled from '@emotion/styled';\r\nimport List from '@mui/material/List';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const FriendListContainer = styled(List)`\r\n\twidth: 100%:\r\n\theight: 100%;\r\n\tbackground: #1e1e1e;\r\n\r\n\t& .friend-list-wrapper:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.5);\r\n\t}\r\n\r\n\t& .text {\r\n\t\tmargin-left: 12px;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { useContext } from 'react';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { IAllUser, IFriendList } from '@typings/db';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { Link } from 'react-router-dom';\r\nimport { FriendListContainer, UserAvatar, ScrollbarColor } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nconst FriendsList = () => {\r\n  const { data: users } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\r\n  const { data: friends } = useSWR<IFriendList[]>(`/api/friend/friendlist`, fetcher);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  return (\r\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\r\n      <FriendListContainer aria-label=\"mailbox folders\">\r\n        {friends?.map((friend: any) => {\r\n          return users?.map((user) => {\r\n            if (user?.userId === friend?.userId2) {\r\n              isState = 0;\r\n              if (onGameList && onGameList[user.userId]) isState = 2;\r\n              if (isState === 0) {\r\n                onlineList?.map((onlineUser) => {\r\n                  if (onlineUser.userId === user.userId) isState = 1;\r\n                });\r\n              }\r\n              return (\r\n                <Link to={`/users/${user.userId}`} key={user.userId}>\r\n                  <ListItem className=\"friend-list-wrapper\" button>\r\n                    <UserAvatar\r\n                      isstate={`${\r\n                        isState\r\n                          ? isState === 1\r\n                            ? '2px solid #1ed14b'\r\n                            : '2px solid #FFD400'\r\n                          : '2px solid #d63638'\r\n                      }`}\r\n                      src={user.profile}\r\n                      alt=\"Avatar\"\r\n                    />\r\n                    <ListItemText className=\"text\" primary={user.username} />\r\n                  </ListItem>\r\n                </Link>\r\n              );\r\n            }\r\n          });\r\n        })}\r\n      </FriendListContainer>\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import styled from '@emotion/styled';\r\nimport List from '@mui/material/List';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const FriendsOnlineListContainer = styled(List)`\r\n\twidth: 100%:\r\n\theight: 100%;\r\n\tbackground: #1e1e1e;\r\n\r\n\t& .friend-list-wrapper:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.5);\r\n\t}\r\n\r\n\t& .text {\r\n\t\tmargin-left: 12px;\r\n\t\tcolor: white;\r\n\t}\r\n\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { useContext } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { IAllUser, IFriendList } from '@typings/db';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { Link } from 'react-router-dom';\r\nimport { FriendsOnlineListContainer, UserAvatar, ScrollbarColor } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nconst FriendsOnlineList = () => {\r\n  const { data: users } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\r\n  const { data: friends } = useSWR<IFriendList[]>(`/api/friend/friendlist`, fetcher);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  return (\r\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\r\n      <FriendsOnlineListContainer aria-label=\"mailbox folders\">\r\n        {friends?.map((friend: any) => {\r\n          return users?.map((user) => {\r\n            if (user?.userId === friend?.userId2) {\r\n              isState = 0;\r\n              if (onGameList && onGameList[user.userId]) isState = 2;\r\n\r\n              if (isState === 0) {\r\n                onlineList?.map((onlineUser) => {\r\n                  if (onlineUser.userId === user.userId) isState = 1;\r\n                });\r\n              }\r\n              if (isState === 0) return;\r\n              return (\r\n                <Link to={`/users/${user.userId}`} key={user.userId}>\r\n                  <ListItem className=\"friend-list-wrapper\" button>\r\n                    <UserAvatar\r\n                      isstate={`${\r\n                        isState\r\n                          ? isState === 1\r\n                            ? '2px solid #1ed14b'\r\n                            : '2px solid #FFD400'\r\n                          : '2px solid #d63638'\r\n                      }`}\r\n                      src={user.profile}\r\n                      alt=\"Avatar\"\r\n                    />\r\n                    <ListItemText className=\"text\" primary={user.username} />\r\n                  </ListItem>\r\n                </Link>\r\n              );\r\n            }\r\n          });\r\n        })}\r\n      </FriendsOnlineListContainer>\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default FriendsOnlineList;\r\n","import styled from '@emotion/styled';\r\nimport List from '@mui/material/List';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\n\r\nexport const MuiList = styled(List)`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #1e1e1e;\r\n\r\n\t& .block-list-wrapper:hover {\r\n\t\tbackground-color: rgba(74,75,84,0.5);\r\n\t}\r\n\r\n\t& .list-text {\r\n\t\tmargin-left: 12px;\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\r\n`;\r\n\r\nexport const ScrollbarColor = styled.div`\r\n  ...style;\r\n  background-color: #787c7f;\r\n  width: 8px;\r\n  border-radius: 5px;\r\n\r\n\t&:hover {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;","import React, { useContext } from 'react';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { IAllUser, IBlockList } from '@typings/db';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { Link } from 'react-router-dom';\r\nimport { MuiList, UserAvatar, ScrollbarColor } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nconst BlockList = () => {\r\n  const { data: users } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\r\n  const { data: blockList } = useSWR<IBlockList[]>(`/api/friend/blocklist`, fetcher);\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  return (\r\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\r\n      <MuiList>\r\n        {blockList?.map((blockUser: IBlockList) => {\r\n          return users?.map((user) => {\r\n            if (user?.userId === blockUser?.userId2) {\r\n              isState = 0;\r\n              if (onGameList && onGameList[user.userId]) isState = 2;\r\n              if (isState === 0) {\r\n                onlineList?.map((onlineUser) => {\r\n                  if (onlineUser.userId === user.userId) isState = 1;\r\n                });\r\n              }\r\n              return (\r\n                <Link to={`/users/${user.userId}`} key={blockUser.userId2}>\r\n                  <ListItem className=\"block-list-wrapper\" button>\r\n                    <UserAvatar\r\n                      isstate={`${\r\n                        isState\r\n                          ? isState === 1\r\n                            ? '2px solid #1ed14b'\r\n                            : '2px solid #FFD400'\r\n                          : '2px solid #d63638'\r\n                      }`}\r\n                      src={user.profile}\r\n                      alt=\"Avatar\"\r\n                    />\r\n                    <ListItemText className=\"list-text\" primary={user.username} />\r\n                  </ListItem>\r\n                </Link>\r\n              );\r\n            }\r\n          });\r\n        })}\r\n      </MuiList>\r\n    </Scrollbars>\r\n  );\r\n};\r\n\r\nexport default BlockList;\r\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\n\r\nexport const SocialSliderContainer = styled(Box)`\r\n\tbackground-color: #1e1e1e; \r\n\twidth: 100%;\r\n\theight: 100%;\r\n\r\n\t& .app-bar {\r\n\t\tbackground: #1e1e1e;\r\n\t\theight: 10vh;\r\n\t}\r\n\r\n\t& .swipeable-views {\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\n\r\nexport const TabPannelBox = styled(Box)`\r\n\theight: 90vh;\r\n`;","import React, { useState, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Typography from '@mui/material/Typography';\r\nimport FriendsList from '@components/FriendsList';\r\nimport FriendsOnlineList from '@components/FriendsOnlineList';\r\nimport BlockList from '@components/BlockList';\r\nimport DMLeftDrawer from '@components/DMLeftDrawer';\r\nimport { SocialSliderContainer, TabPannelBox } from './style';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\nfunction TabPanel(props: any) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`full-width-tabpanel-${index}`}\r\n        aria-labelledby={`full-width-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <TabPannelBox>\r\n            <Typography component=\"span\">{children}</Typography>\r\n          </TabPannelBox>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SocialSlider = () => {\r\n  const theme = useTheme();\r\n  const [value, setValue] = useState(0);\r\n  const isMobile = useMediaQuery({ maxWidth: 700 });\r\n\r\n  const handleChange = useCallback((event: any, newValue: any) => {\r\n    setValue(newValue);\r\n  }, []);\r\n\r\n  const handleChangeIndex = useCallback((index: any) => {\r\n    setValue(index);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <DMLeftDrawer />\r\n      {isMobile ? null : (\r\n        <SocialSliderContainer>\r\n          <AppBar position=\"static\" className=\"app-bar\">\r\n            <Tabs\r\n              value={value}\r\n              onChange={handleChange}\r\n              indicatorColor=\"secondary\"\r\n              textColor=\"inherit\"\r\n              variant=\"fullWidth\"\r\n              aria-label=\"full width tabs example\"\r\n            >\r\n              <Tab label=\"🌐 ONLINE\" {...a11yProps(0)}></Tab>\r\n              <Tab label=\"👥 FRIENDS\" {...a11yProps(1)} />\r\n              <Tab label=\"🚨 BLOCKED\" {...a11yProps(2)} />\r\n            </Tabs>\r\n          </AppBar>\r\n          <SwipeableViews\r\n            className=\"swipeable-views \"\r\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n            index={value}\r\n            onChangeIndex={handleChangeIndex}\r\n          >\r\n            <TabPanel value={value} index={0}>\r\n              <FriendsOnlineList />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <FriendsList />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n              <BlockList />\r\n            </TabPanel>\r\n          </SwipeableViews>\r\n        </SocialSliderContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SocialSlider;\r\n"],"names":["dmlist2","DMLeftDrawerContainer","styled","DMListContainer","UserAvatar","Avatar","props","isstate","ScrollbarColor","isState","dmlist","useSWR","fetcher","data","users","blockList","useState","selectedIndex","setSelectedIndex","dmSearchInputValue","setDMSearchInputValue","useContext","SocketContext","onlineList","onGameList","handleListItemClick","useCallback","event","index","onChangeDMSearchInput","e","target","value","indexOf","filter","dm","regex","RegExp","username","match","getDMList","inputValue","className","onChange","autoComplete","to","List","component","ListItemButton","selected","onClick","EmojiPeopleRounded","ListItemText","primary","autoHide","renderThumbVertical","style","map","isblock","blockedUser","userId2","userId","id","key","user","onlineUser","src","profile","alt","FriendListContainer","friends","friend","ListItem","button","FriendsOnlineListContainer","MuiList","blockUser","SocialSliderContainer","Box","TabPannelBox","TabPanel","children","other","role","hidden","Typography","a11yProps","propTypes","PropTypes","theme","useTheme","setValue","isMobile","useMediaQuery","maxWidth","handleChange","newValue","handleChangeIndex","DMLeftDrawer","AppBar","position","Tabs","indicatorColor","textColor","variant","Tab","label","axis","direction","onChangeIndex"],"sourceRoot":""}