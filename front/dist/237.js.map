{"version":3,"file":"237.js","mappings":"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","sources":["webpack://brojoon/./components/BasicModal/style.ts","webpack://brojoon/./components/BasicModal/index.tsx","webpack://brojoon/./components/LeftSideBar/style.ts","webpack://brojoon/./components/LeftSideBar/index.tsx","webpack://brojoon/./layouts/Content/style.ts","webpack://brojoon/./pages/Home/style.ts","webpack://brojoon/./components/IntroduceModal/style.ts","webpack://brojoon/./components/IntroduceModal/index.tsx","webpack://brojoon/./pages/Home/index.tsx","webpack://brojoon/./components/MyProfileCard/style.ts","webpack://brojoon/./components/MyProfileCard/index.tsx","webpack://brojoon/./components/UserProfileCard/style.ts","webpack://brojoon/./components/UserProfileCard/index.tsx","webpack://brojoon/./components/UserMatches/style.ts","webpack://brojoon/./components/UserMatches/index.tsx","webpack://brojoon/./components/UserStatistics/style.ts","webpack://brojoon/./components/UserStatistics/index.tsx","webpack://brojoon/./components/UserFriendCard/style.ts","webpack://brojoon/./components/UserFriendCard/index.tsx","webpack://brojoon/./components/UserProfileAchieveCard/style.ts","webpack://brojoon/./components/Achievement/style.ts","webpack://brojoon/./components/Achievement/index.tsx","webpack://brojoon/./components/UserProfileAchieveCard/index.tsx","webpack://brojoon/./pages/Profile/style.ts","webpack://brojoon/./pages/Profile/index.tsx","webpack://brojoon/./pages/Channels/style.ts","webpack://brojoon/./components/ProtectedRoomModal/style.ts","webpack://brojoon/./components/ProtectedRoomModal/index.tsx","webpack://brojoon/./components/ChannelBody/style.ts","webpack://brojoon/./components/ChannelBody/index.tsx","webpack://brojoon/./components/ChannelHeader/style.ts","webpack://brojoon/./components/ChannelHeader/index.tsx","webpack://brojoon/./pages/ChannelDiscover/style.ts","webpack://brojoon/./components/ChannelLeftDrawBar/style.ts","webpack://brojoon/./components/ChannelLeftDrawBar/index.tsx","webpack://brojoon/./pages/ChannelDiscover/index.tsx","webpack://brojoon/./components/ChatBox/style.ts","webpack://brojoon/./components/ChatBox/index.tsx","webpack://brojoon/./components/ChannelChatHeader/style.ts","webpack://brojoon/./components/ChannelChatHeader/index.tsx","webpack://brojoon/./components/ChannelChatList/style.ts","webpack://brojoon/./utils/makeSection.ts","webpack://brojoon/./components/ChannelChatList/index.tsx","webpack://brojoon/./components/ChannelMemberDrawBar/style.ts","webpack://brojoon/./components/ChannelProfile/style.ts","webpack://brojoon/./components/ChannelProfile/index.tsx","webpack://brojoon/./components/ChannelMemberDrawBar/index.tsx","webpack://brojoon/./components/ChannelRoomSettingModal/style.ts","webpack://brojoon/./components/ChannelForm/style.ts","webpack://brojoon/./components/ChannelForm/index.tsx","webpack://brojoon/./components/ChannelRoomSettingModal/index.tsx","webpack://brojoon/./components/ChannelInviteModal/style.ts","webpack://brojoon/./components/ChannelInviteModal/index.tsx","webpack://brojoon/./pages/ChannelRoom/style.ts","webpack://brojoon/./pages/ChannelRoom/index.tsx","webpack://brojoon/./pages/ChannelCreate/style.ts","webpack://brojoon/./pages/ChannelCreate/index.tsx","webpack://brojoon/./pages/Channels/index.tsx","webpack://brojoon/./pages/Social/style.ts","webpack://brojoon/./components/FriendsList/style.ts","webpack://brojoon/./components/FriendsList/index.tsx","webpack://brojoon/./components/FriendsOnlineList/style.ts","webpack://brojoon/./components/FriendsOnlineList/index.tsx","webpack://brojoon/./components/BlockList/style.ts","webpack://brojoon/./components/BlockList/index.tsx","webpack://brojoon/./components/DMLeftDrawer/style.ts","webpack://brojoon/./components/DMLeftDrawer/index.tsx","webpack://brojoon/./pages/SocialSlider/style.ts","webpack://brojoon/./pages/SocialSlider/index.tsx","webpack://brojoon/./components/DMChatHeader/style.ts","webpack://brojoon/./components/DMChatHeader/index.tsx","webpack://brojoon/./components/DMChatList/style.ts","webpack://brojoon/./components/DMChatList/index.tsx","webpack://brojoon/./pages/DirectMessage/style.ts","webpack://brojoon/./pages/DirectMessage/index.tsx","webpack://brojoon/./pages/Social/index.tsx","webpack://brojoon/./components/UsersList/style.ts","webpack://brojoon/./components/UsersList/index.tsx","webpack://brojoon/./pages/Users/style.ts","webpack://brojoon/./pages/Users/index.tsx","webpack://brojoon/./pages/Achievements/style.ts","webpack://brojoon/./pages/Achievements/index.tsx","webpack://brojoon/./pages/Match/style.ts","webpack://brojoon/./pages/Match/index.tsx","webpack://brojoon/./pages/History/style.ts","webpack://brojoon/./pages/History/index.tsx","webpack://brojoon/./components/GamePixiContainer/style.ts","webpack://brojoon/./components/GamePixiContainer/index.tsx","webpack://brojoon/./components/GameSetting/style.ts","webpack://brojoon/./components/GameSetting/index.tsx","webpack://brojoon/./pages/PingPong/style.ts","webpack://brojoon/./pages/PingPong/index.tsx","webpack://brojoon/./pages/Game/index.tsx","webpack://brojoon/./components/TwoFactorSwitch/style.ts","webpack://brojoon/./components/TwoFactorSwitch/index.tsx","webpack://brojoon/./pages/ProfileSetting/style.ts","webpack://brojoon/./components/NickNameChangeField/style.ts","webpack://brojoon/./components/NickNameChangeField/index.tsx","webpack://brojoon/./pages/ProfileSetting/index.tsx","webpack://brojoon/./layouts/Content/index.tsx","webpack://brojoon/./utils/config.ts","webpack://brojoon/./utils/fetcher.ts","webpack://brojoon/./utils/useSocket.ts"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ModalBackground = styled.div`\n\tcolor: white;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 6000;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n\n`;\n\nexport const ModalContent = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 400px;\n\tbackground-color: #1e1e1e;\n\tcolor: #979797;\n\topacity: 1;\n\tborder: 1px solid #1e1e1e;\n\tborder-radius: 4px;\n\tz-index: 7000;\n\ttransform: translate(-50%, -50%);\n\tbox-shadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tbackground-color: #fec107;\n\t}\n\n\t& .header {\n\t\tmargin: 1px 10px 0 8px;\n\t\tfont-size: 20px;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t}\n\n\t& .header-content {\n\t\tmargin: 0 0 0 4px;\n\t\tline-height: 22px;\n\t}\n\n\t& .header .emoji {\n\t\tcolor: white;\n\t}\n\n\t& .content {\n\t\tmargin: 10px;\n\t}\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tfont-weight: 600;\n\n\t& .noBtn {\n\t\tcolor: #979797;\n\t}\n`;","import React, { VFC } from 'react';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { ModalBackground, ModalContent, ButtonContainer } from './style';\n\ninterface Props {\n  content: string;\n  headerContent: string;\n  NoBtn: (e: any) => void;\n  YesBtn: (e: any) => void;\n}\nconst BasicModal: VFC<Props> = ({ content, NoBtn, YesBtn, headerContent }) => {\n  return (\n    <>\n      <ModalBackground onClick={NoBtn}></ModalBackground>\n      <ModalContent>\n        <div className=\"container\">\n          <div className=\"header\">\n            <ErrorIcon className=\"emoji\" />\n            <div className=\"header-content\">{headerContent}</div>\n          </div>\n          <div>\n            <IconButton className=\"emoji\" onClick={NoBtn}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div className=\"content\">{content}</div>\n        <ButtonContainer>\n          <Button className=\"noBtn\" onClick={NoBtn} variant=\"text\">\n            NO\n          </Button>\n          <Button onClick={YesBtn} variant=\"text\">\n            YES\n          </Button>\n        </ButtonContainer>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default BasicModal;\n","import styled from '@emotion/styled';\nimport Badge from '@mui/material/Badge';\nimport { styled as muiStyled } from '@mui/material/styles';\nimport Fab from '@mui/material/Fab';\n\n\nexport const LeftSideBarContainer = styled.div`\n\twidth: 55px;\n\tflex-shrink: 0;\n\tborder-right: '5px solid #121212';\n\n\t& .fab-wrapper {\n\t\tbackground: #4d4d4d;\n\t\tmargin-top: 8px;\n\t\twidth: 30px;\n\t\theight: 1px;\n\t}\n`;\n\nexport const Toolbar = styled.div`\n\tposition: fixed;\n\tleft : 0;\n\theight : 100%;\n\twidth: 55px;\n\tbackground-color: #363636;\n\tfont-size: 50px;\n\tdisplay: flex;\n`;\n\nexport const NavIcons = styled.div`\n\twidth: 50px;\n\tdisplay: flex;\n\talign-items: center;\n\tflex-direction: column;\n\tmargin-top: 15px;\n\n\t.sideBarIcon {\n\t\tfont-size: 28px;\n\t\twidth: 45px;\n\t\theight: 45px;\n\t\tbox-shadow: none;\n\t\tmargin-top: 10px;\n\t}\n\n\t.sideBarIcon:hover {\n\t\tbackground-color: #4a4b54;\n\n\n\t}\t\n\t\n\t.sideBarIconLast {\n\t\tposition: fixed;\n\t\tbottom: 5px;\n\t\tleft: 5px;\n\t\twidth: 45px;\n\t\theight: 45px;\n\t\tbox-shadow: none;\n\t}\n\n\t.sideBarIconLast:hover {\n\t\tbackground-color: #4a4b54;\n\n\t}\n\t\n`;\n\nexport const StyledBadge = muiStyled(Badge)(({ theme }) => ({\n\tmarginBottom: '15px',\n\tcursor: 'pointer',\n\t'& .MuiBadge-badge': {\n\t\tbackgroundColor: '#44b700',\n\t\tcolor: '#44b700',\n\t\tboxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\n\t\t'&::after': {\n\t\t\tposition: 'absolute',\n\t\t\ttop: 0,\n\t\t\tleft: 0,\n\t\t\tborderRadius: '50%',\n\t\t\tanimation: 'ripple 1.2s infinite ease-in-out',\n\t\t\tborder: '1px solid currentColor',\n\t\t\tcontent: '\"\"',\n\t\t},\n\t},\n\t'@keyframes ripple': {\n\t\t'0%': {\n\t\t\ttransform: 'scale(.8)',\n\t\t\topacity: 1,\n\t\t},\n\t\t'100%': {\n\t\t\ttransform: 'scale(2.4)',\n\t\t\topacity: 0,\n\t\t},\n\t},\n}));\n\nexport const MyFab = styled(Fab) <{ selected: boolean }>`\n\tbackground-color: ${(props) => props.selected ? '#4a4b54' : '#363636'};\n\tbox-shadow: 0;\n\tcolor: white;\n\n`;\n","import React, { useCallback, useState } from 'react';\nimport { MyFab, NavIcons, StyledBadge, Toolbar, LeftSideBarContainer } from './style';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport VideogameAssetIcon from '@mui/icons-material/VideogameAsset';\nimport ConnectWithoutContactIcon from '@mui/icons-material/ConnectWithoutContact';\nimport GroupIcon from '@mui/icons-material/Group';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Avatar from '@mui/material/Avatar';\nimport { Link, useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport Tooltip from '@mui/material/Tooltip';\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech';\nimport Scrollbars from 'react-custom-scrollbars';\nimport DashboardSharpIcon from '@mui/icons-material/DashboardSharp';\nimport getSocket from '@utils/useSocket';\nimport config from '@utils/config';\nconst LeftSideBar = () => {\n  const { data, mutate } = useSWR<IUser | null>('/api/users', fetcher);\n\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n\n  const history = useHistory();\n\n  const handleListItemClick = (event: any, index: number) => {\n    setSelectedIndex(index);\n  };\n\n  const onClickLogOut = useCallback(() => {\n    axios\n      .get('/api/auth/logout', config)\n      .then(() => {\n        getSocket().disconnect();\n        history.push('/login');\n      })\n      .catch((error) => {\n        if (error.response.data.code === 401) {\n          history.push('/login');\n        } else {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n  return (\n    <LeftSideBarContainer>\n      <Toolbar>\n        <Scrollbars>\n          <NavIcons>\n            <Link to={`/profile`}>\n              <Tooltip title=\"Profile\" placement=\"right\" arrow>\n                <StyledBadge\n                  className=\"sideBarProfileIcon\"\n                  onClick={(e) => {\n                    handleListItemClick(e, -1);\n                  }}\n                  overlap=\"circular\"\n                  anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                  variant=\"dot\"\n                >\n                  <Avatar src={data?.profile} alt=\"Avatar\" />\n                </StyledBadge>\n              </Tooltip>\n            </Link>\n            <div className=\"fab-wrapper\"></div>\n            <Link to={`/home`}>\n              <Tooltip title=\"Home\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 0}\n                  onClick={(e) => {\n                    handleListItemClick(e, 0);\n                  }}\n                >\n                  <DashboardSharpIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n            <Link to={`/social`}>\n              <Tooltip title=\"Social\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 1}\n                  onClick={(e) => {\n                    handleListItemClick(e, 1);\n                  }}\n                >\n                  <ConnectWithoutContactIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n            <Link to={`/channels`}>\n              <Tooltip title=\"Channels\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 2}\n                  onClick={(e) => {\n                    handleListItemClick(e, 2);\n                  }}\n                >\n                  <ForumIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n            <Link to={`/users`}>\n              <Tooltip title=\"Users\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 3}\n                  onClick={(e) => {\n                    handleListItemClick(e, 3);\n                  }}\n                >\n                  <GroupIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n            <Link to={`/achievements`}>\n              <Tooltip title=\"Achievements\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 4}\n                  onClick={(e) => {\n                    handleListItemClick(e, 4);\n                  }}\n                >\n                  <MilitaryTechIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n            <Link to={`/game`}>\n              <Tooltip title=\"Game\" placement=\"right\" arrow>\n                <MyFab\n                  aria-label=\"add\"\n                  className=\"sideBarIcon\"\n                  selected={selectedIndex === 5}\n                  onClick={(e) => {\n                    handleListItemClick(e, 5);\n                  }}\n                >\n                  <VideogameAssetIcon />\n                </MyFab>\n              </Tooltip>\n            </Link>\n\n            <Tooltip title=\"Logout\" placement=\"right\" arrow>\n              <MyFab\n                aria-label=\"add\"\n                className=\"sideBarIconLast\"\n                selected={selectedIndex === 6}\n                onClick={onClickLogOut}\n              >\n                <LogoutIcon />\n              </MyFab>\n            </Tooltip>\n          </NavIcons>\n        </Scrollbars>\n      </Toolbar>\n    </LeftSideBarContainer>\n  );\n};\n\nexport default LeftSideBar;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\n`;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\theight: 100vh;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content:center;\n\twidth: 100%;\n\tmargin: 0;\n\tpadding: 0 0 130px 0;\n\tbackground-image: url(\"../../img/bg3.jpg\");\n\tbackground-repeat : no-repeat;\n\tbackground-size : cover;\n\tflex-direction: column;\n\tcolor: white;\t\n\n\t& .header {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\tfont-size: 40px;\n\t}\n\n\t& .header-sub {\n\t\tmargin: 0 0 40px 0;\n\t\tpadding: 0;\n\t}\n\n\t& .btn-wrapper {\n\t\tdisplay: flex;\n\t}\n\n\t& .introduce-btn {\n\t\tborder-radius: 25px;\n\t\tpadding: 10px 22px;\n\t\tborder: 1px solid white;\n\t\tcorsor: point;\n\t\tbackground: none;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tfont-weight: 700;\n\n\t}\n\n\t& .Intro-icon {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tfont-size: 25px;\n\t}\n\n\t& .quick-play-btn {\n\t\tborder-radius: 25px;\n\t\tpadding: 10px 22px;\n\t\tbackground: black;\n\t\tcorsor: point;\n\t\tmargin-left: 25px;\n\t\tbox-shadow: none;\n\t\tborder: none;\n\t\tcolor: white;\n\t\tcursor: pointer;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tfont-weight: 700;\n\n\t}\n\n\t& .quick-icon {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tfont-size: 25px;\n\t} \n\n`;","import styled from '@emotion/styled';\n\nexport const ModalBackground = styled.div`\n\tcolor: white;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 6000;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n\n`;\n\nexport const ModalContent = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 500px;\n\tbackground-color: #1e1e1e;\n\tcolor: #979797;\n\topacity: 1;\n\tborder: 1px solid #1e1e1e;\n\tborder-radius: 4px;\n\tz-index: 7000;\n\ttransform: translate(-50%, -50%);\n\tbox-shadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tbackground-color: #1976d3;\n\t}\n\n\t& .header {\n\t\tmargin: 1px 10px 0 8px;\n\t\tfont-size: 20px;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t}\n\n\t& .header-content {\n\t\tmargin: 0 0 0 4px;\n\t\tline-height: 22px;\n\t}\n\n\t& .header .emoji {\n\t\tcolor: white;\n\t}\n\n\t& .content {\n\t\tmargin: 10px 0 20px 10px;\n\t}\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tpadding: 5px 5px 5px 0;\n\tfont-weight: 600;\n\n\tborder-top: 1px solid #2a2a2a;\n\n\n`;","import React, { VFC } from 'react';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ModalBackground, ModalContent, ButtonContainer } from './style';\n\ninterface Props {\n  content: string;\n  headerContent: string;\n  onClickIntroduceToggle: (e: any) => void;\n}\nconst IntroduceModal: VFC<Props> = ({ content, onClickIntroduceToggle, headerContent }) => {\n  return (\n    <>\n      <ModalBackground onClick={onClickIntroduceToggle}></ModalBackground>\n      <ModalContent>\n        <div className=\"container\">\n          <div className=\"header\">\n            <div className=\"header-content\">{headerContent}</div>\n          </div>\n          <div>\n            <IconButton className=\"emoji\" onClick={onClickIntroduceToggle}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div className=\"content\">{content}</div>\n        <ButtonContainer>\n          <Button onClick={onClickIntroduceToggle} variant=\"text\">\n            CLOSE\n          </Button>\n        </ButtonContainer>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default IntroduceModal;\n","import axios from 'axios';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport { Container } from './style';\nimport { useHistory } from 'react-router-dom';\nimport IntroduceModal from '@components/IntroduceModal';\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet';\nimport PlayCircleFilledWhiteIcon from '@mui/icons-material/PlayCircleFilledWhite';\n\nconst introduce =\n  '이사이트는 42SEOUL에서 진행한 웹소켓을 이용해 REAL-TIME, Multiplayer Online Pong game을 즐길수 있는 웹사이트를 구현하는 프로젝트 입니다.  \\\n   DM과 채널을 이용하여 실시간 채팅을 나눌수 있으며 접속중인 유저가 2명 이상 이라면 서로 Pong게임을 즐길수 있습니다.';\n\nconst Home = () => {\n  const [isIntroduceModal, setIsIntroduceModal] = useState(false);\n  const history = useHistory();\n\n  const onClickIntroduceToggle = useCallback((e) => {\n    e.preventDefault();\n    setIsIntroduceModal((prev) => !prev);\n  }, []);\n\n  const onClickQuickPlay = useCallback((e) => {\n    e.preventDefault();\n    history.push('/game');\n  }, []);\n\n  return (\n    <Container>\n      {isIntroduceModal && (\n        <IntroduceModal\n          headerContent=\"INTRODUCE\"\n          content={introduce}\n          onClickIntroduceToggle={onClickIntroduceToggle}\n        />\n      )}\n      <h1 className=\"header\">ft_transcendence</h1>\n      <h3 className=\"header-sub\">mighty pong contest</h3>\n      <div className=\"btn-wrapper\">\n        <button className=\"introduce-btn\" onClick={onClickIntroduceToggle}>\n          INTRODUCE &nbsp;\n          <TextSnippetIcon className=\"Intro-icon\" />\n        </button>\n        <button className=\"quick-play-btn\" onClick={onClickQuickPlay}>\n          QUICK-PLAY &nbsp;\n          <PlayCircleFilledWhiteIcon className=\"quick-icon\" />\n        </button>\n      </div>\n    </Container>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\n\n\nexport const MyProfileCardContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .card {\n\t\tbackground-color: #1e1e1e;\n\t\tcolor: white;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\twidth: 100%;\n\t\tpadding: 5px 10px 15px 10px;\n\t}\n\n\t& .card-content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t& .avatar {\n\n\t}\n\n\t& span {\n\t\tcolor: #52575d;\n\t\tfont-weight: 500;\n\t}\n\n\t& .card-actions {\n\t\tdisplay: flex;\n\t\tflexDirection: column;\n\t\tjustifyContent: center;\n\t\talignItems: center;\n\n\t}\n\n\t& .setting-link {\n\t\twidth: 100%;\n\t}\n\n\t& .setting-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t}\n\n\t& .admin-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\n\t\tfont-weight: bold;\n\t}\n\n\t& .admin-btn:hover {\n\t\tbackground-color: rgba(255, 212, 0, 1);\n\n\t}\n\n\t& .admin-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939 !important;\n\t\tborder-color: #393939 !important;\n\t\tfont-weight: bold;\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 180px;\n\theight: 180px;\n\tmargin-bottom: 20px;\n`;","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport { Link, useParams } from 'react-router-dom';\nimport { IUser } from '@typings/db';\nimport { MyProfileCardContainer, UserAvatar } from './style';\nimport { SocketContext } from '@store/socket';\n\nconst MyProfileCard = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: isAdmin } = useSWR<boolean>('/api/users/checkAdminOrModerator', fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState = 0;\n  if (onGameList && myData && onGameList[myData.userId]) isState = 2;\n  if (isState === 0 && onlineList && myData) {\n    onlineList.map((onlineUser) => {\n      if (onlineUser.userId === myData.userId) isState = 1;\n    });\n  }\n\n  return (\n    <MyProfileCardContainer>\n      <Card className=\"card\" variant=\"outlined\">\n        <CardContent className=\"card-content\">\n          <UserAvatar\n            isstate={`${\n              isState\n                ? isState === 1\n                  ? '2px solid #1ed14b'\n                  : '2px solid #FFD400'\n                : '2px solid #d63638'\n            }`}\n            src={myData?.profile}\n            alt=\"Avatar\"\n          />\n          <Typography variant=\"h5\" component=\"div\">\n            {myData?.userId}\n          </Typography>\n          <span>{myData?.username}</span>\n        </CardContent>\n        <CardActions className=\"card-actions\">\n          <Link to=\"/profile/setting\" className=\"setting-link\">\n            <Button className=\"setting-btn\" variant=\"contained\">\n              SETTING&nbsp;\n              <SettingsIcon />\n            </Button>\n          </Link>\n        </CardActions>\n        {isAdmin ? (\n          <CardActions className=\"card-actions\">\n            <Link to=\"/admin\" className=\"setting-link\">\n              <Button className=\"admin-btn\" variant=\"contained\">\n                ADMIN&nbsp;\n                <ManageAccountsIcon />\n              </Button>\n            </Link>\n          </CardActions>\n        ) : (\n          <CardActions className=\"card-actions\">\n            <Button className=\"admin-block-btn\" variant=\"contained\" disabled>\n              ADMIN&nbsp;\n              <ManageAccountsIcon />\n            </Button>\n          </CardActions>\n        )}\n      </Card>\n    </MyProfileCardContainer>\n  );\n};\n\nexport default MyProfileCard;\n","\nimport styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\n\nexport const UserProfileCardContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .card-container {\n\t\tbackground-color: #1e1e1e;\n\t\tcolor: white;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\twidth: 100%;\n\t\tpadding: 5px 10px 15px 10px;\n\t}\n\n\t& .card-content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t& .card-user-text {\n\t\tcolor: #52575d;\n\t\tfont-weight: 500;\n\t}\n\n\t& .card-action {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-betweens;\n\t}\n\n\t& .challenge-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t}\n\n\t& .watch-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\n\t\tfont-weight: bold;\n\t}\n\n\t& .watch-btn:hover {\n\t\tbackground-color: rgba(255, 212, 0, 1);\n\t}\n\n\t& .challenge-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(22, 120, 209, 0.8);\n\t\tfont-weight: bold;\n\t}\n\n\t& .challenge-btn:hover\t {\n\t\tbackground-color: rgba(22, 120, 209, 1);\n\t}\n\n\t& .friend-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .friend-unfriend-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(30, 30, 30, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t\tcolor: #ec3f31;\n\t}\n\n\t& .friend-unfriend-btn:hover {\n\t\tbackground-color: rgba(30, 30, 30, 1);\n\t}\n\n\n\t& .friend-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(94, 189, 255, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .friend-btn:hover {\n\t\tbackground-color: rgba(94, 189, 255, 1);\n\t}\n\n\t& .unblock-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: red;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 0, 0, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .block-btn:hover {\n\t\tbackground-color: rgba(255, 0, 0, 1);\n\t}\n\n\t& .message-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .message-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(156, 250, 36, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .message-btn:hover {\n\t\tbackground-color: rgba(156, 250, 36, 1);\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 180px;\n\theight: 180px;\n\tmargin-bottom: 20px;\n`;","import React, { useCallback, VFC, useState, useContext } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { IUser, IDmList } from '@typings/db';\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport GamepadIcon from '@mui/icons-material/Gamepad';\nimport axios from 'axios';\nimport BasicModal from '@components/BasicModal';\nimport config from '@utils/config';\nimport { UserProfileCardContainer, UserAvatar } from './style';\nimport { SocketContext } from '@store/socket';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  UserData: IUser;\n}\n\nconst UserProfileCard: VFC<Props> = ({ UserData }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: dmList, mutate: mutateDmList } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\n  const { data: isFriend, mutate: mutateisFriend } = useSWR<boolean>(\n    `/api/friend/checkfriend/${id}`,\n    fetcher,\n  );\n  const { data: isBlock, mutate: mutateIsBlock } = useSWR<boolean>(\n    `/api/friend/checkblock/${id}`,\n    fetcher,\n  );\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const history = useHistory();\n  const [isAddFriendModal, setIsAddFriendModal] = useState(false);\n  const [isRemoveFriendModal, setIsRemoveFriendModal] = useState(false);\n  const [isBlockModal, setIsBlockModal] = useState(false);\n  const [isRemoveBlockModal, setIsRemoveBlockModal] = useState(false);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState = 0;\n  if (onGameList && onGameList[UserData?.userId]) isState = 2;\n  if (isState === 0 && onlineList && UserData) {\n    onlineList.map((onlineUser) => {\n      if (onlineUser.userId === UserData.userId) isState = 1;\n    });\n  }\n\n  const removeAllModals = useCallback(() => {\n    setIsAddFriendModal(false);\n    setIsBlockModal(false);\n    setIsRemoveBlockModal(false);\n    setIsRemoveFriendModal(false);\n  }, []);\n\n  const onToggleAddFriendModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsAddFriendModal((prev) => !prev);\n    },\n    [isAddFriendModal, setIsAddFriendModal],\n  );\n\n  const onToggleRemoveFriendModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsRemoveFriendModal((prev) => !prev);\n    },\n    [isRemoveFriendModal, setIsRemoveFriendModal],\n  );\n\n  const onToggleBlockModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsBlockModal((prev) => !prev);\n    },\n    [isBlockModal, setIsBlockModal],\n  );\n\n  const onToggleRemoveBlockModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsRemoveBlockModal((prev) => !prev);\n    },\n    [isRemoveBlockModal, setIsRemoveBlockModal],\n  );\n\n  const onClickChallengeBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .post(`/api/dms/sendMessage/${UserData.userId}/3/0`, { message: '' }, config)\n      .then((res) => {\n        history.push(`/game/ping-pong/${res.data}`);\n      })\n      .catch((error) => {\n        if (error.response.data.data.message === 'Block 상태') {\n          toast.error(`You were blocked by ${UserData.username}`, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        } else {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n\n  const onClickWatchBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (onGameList) history.push(`/game/ping-pong/${onGameList[UserData.userId]}`);\n    },\n    [onGameList],\n  );\n\n  const onClickAddFriendBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/addfriend/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        removeAllModals();\n      })\n      .catch((error) => {\n        if (error.response.data.data.message === 'Block 상태') {\n          toast.error(`You were blocked by ${UserData.username}`, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        } else {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n\n  const onClickRemoveFriendBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/removefriend/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickAddBlockBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/addblock/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        mutateIsBlock();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickRemoveBlockBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/removeblock/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        mutateIsBlock();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickMessageBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .get(`/api/dms/create/${UserData.userId}`, config)\n        .then((res) => {\n          mutateDmList().then(() => {\n            history.push(`/social/dm/${res.data}`);\n          });\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [UserData, mutateDmList, dmList],\n  );\n\n  return (\n    <UserProfileCardContainer>\n      {isAddFriendModal && (\n        <BasicModal\n          headerContent={`Add ${id}`}\n          content={`Are you sure you want to add ${id} to your friends?`}\n          NoBtn={onToggleAddFriendModal}\n          YesBtn={onClickAddFriendBtn}\n        />\n      )}\n      {isRemoveFriendModal && (\n        <BasicModal\n          headerContent={`Remove ${id}`}\n          content={`Are you sure you want to permanently remove ${id} from your friends?`}\n          NoBtn={onToggleRemoveFriendModal}\n          YesBtn={onClickRemoveFriendBtn}\n        />\n      )}\n      {isBlockModal && (\n        <BasicModal\n          headerContent={`Block ${id}`}\n          content={`Are you sure you want to block ${id}? It will be removed from your friend list too.`}\n          NoBtn={onToggleBlockModal}\n          YesBtn={onClickAddBlockBtn}\n        />\n      )}\n      {isRemoveBlockModal && (\n        <BasicModal\n          headerContent={`UnBlock ${id}`}\n          content={`Are you sure you want to unblock ${id}?`}\n          NoBtn={onToggleRemoveBlockModal}\n          YesBtn={onClickRemoveBlockBtn}\n        />\n      )}\n\n      <Card className=\"card-container\" variant=\"outlined\">\n        <CardContent className=\"card-content\">\n          <UserAvatar\n            isstate={`${\n              isState\n                ? isState === 1\n                  ? '2px solid #1ed14b'\n                  : '2px solid #FFD400'\n                : '2px solid #d63638'\n            }`}\n            src={UserData?.profile}\n            alt=\"Avatar\"\n          />\n          <Typography variant=\"h5\" component=\"div\">\n            {UserData?.userId}\n          </Typography>\n          <span className=\"card-user-text\">{UserData?.username}</span>\n        </CardContent>\n        <CardActions className=\"card-action\">\n          {isBlock ? (\n            <Button className=\"challenge-block-btn\" variant=\"contained\" disabled>\n              BLOCKED&nbsp;\n              <GamepadIcon />\n            </Button>\n          ) : isState === 2 && onGameList && myData && onGameList[myData?.userId] === undefined ? (\n            <Button onClick={onClickWatchBtn} variant=\"contained\" className=\"watch-btn\">\n              WATCH&nbsp;\n              <VisibilityIcon />\n            </Button>\n          ) : onGameList && myData && onGameList[myData?.userId] ? (\n            <Button variant=\"contained\" className=\"challenge-block-btn\" disabled>\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          ) : (\n            <Button onClick={onClickChallengeBtn} variant=\"contained\" className=\"challenge-btn\">\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button variant=\"contained\" disabled className=\"friend-block-btn\">\n              BLOCKED&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : isFriend ? (\n            <Button\n              onClick={onToggleRemoveFriendModal}\n              variant=\"contained\"\n              className=\"friend-unfriend-btn\"\n            >\n              UNFRIEND&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : (\n            <Button className=\"friend-btn\" onClick={onToggleAddFriendModal} variant=\"contained\">\n              FRIEND&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button className=\"unblock-btn\" onClick={onToggleRemoveBlockModal} variant=\"contained\">\n              UNBLOCK&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : (\n            <Button className=\"block-btn\" onClick={onToggleBlockModal} variant=\"contained\">\n              BLOCK&nbsp;\n              <PersonOffIcon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button className=\"message-block-btn\" variant=\"contained\" disabled>\n              BLOCKED&nbsp;\n              <ChatIcon />\n            </Button>\n          ) : (\n            <Button className=\"message-btn\" onClick={onClickMessageBtn} variant=\"contained\">\n              MESSAGE&nbsp;\n              <ChatIcon />\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    </UserProfileCardContainer>\n  );\n};\n\nexport default UserProfileCard;\n","import styled from '@emotion/styled';\n\nexport const UserMatchesContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\n\t& .profile-matches-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .profile-pagination-wrapper {\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\n\t\tcolor: white;\n\n\t}\n\n\t& .profile-pagination-wrapper {\n\t\tcolor: white;\n\t}\n\t& .profile-pagination {\n\t\toverflow: hidden;\n\t}\n\n\t& .css-1mf6u8l-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: white;\n\t}\n\n\t& .css-pqjvzy-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: white;\n\t}\n\t\n`;\n\nexport const UserMatchesListWrapper = styled.div`\n\n  & .list-item-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\n\t\tpadding: 6px 15px;\n\t\tcolor: white;\n\t}\n\n\t& .list-item-wrapper:hover {\n\t\tbackground: #666666;\n\t}\n\n\t& .avatar {\n\t\twidth: 56px;\n\t\theight: 56px;\n\t}\n\n\t& .opponent-text {\n\t\tcolor: white;\n\t}\n\n\t& .user-text {\n\t\tcolor: white;\n\t}\n\n\t& .user-matches-icon-win {\n\t\tfont-size: 34px;\n\t\tcolor: #ffe937;\n\t}\n\t& .user-matches-icon-lose {\n\t\tfont-size: 34px;\n\t\tcolor: #ec443b;\n\t}\n\n\t& .matches-text {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\twidth: 63%;\n\t}\n`;\n\nexport const UserMatchesResult = styled.div<{ textColor: string }>`\n\tcolor: ${((props) => props.textColor)};\n`;","import React, { VFC, useState } from 'react';\nimport { IUser } from '@typings/db';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { UserMatchesContainer, UserMatchesListWrapper, UserMatchesResult } from './style';\nimport TablePagination from '@mui/material/TablePagination';\nimport SentimentVeryDissatisfiedSharpIcon from '@mui/icons-material/SentimentVeryDissatisfiedSharp';\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport { IUserGameHistory } from '@typings/db';\n\ninterface Props {\n  userData: IUser | null | undefined;\n}\n\nconst UserMatches: VFC<Props> = ({ userData }) => {\n  const { data: userGameHistory } = useSWR<IUserGameHistory[]>(\n    `/api/game/history/userGameHistory/${userData?.userId}`,\n    fetcher,\n  );\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (e: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e: any) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <UserMatchesContainer>\n      <div className=\"profile-matches-header\">Matches</div>\n      {userGameHistory?.map((history, index) => {\n        if (index >= rowsPerPage * (page + 1)) return;\n        if (page > 0) {\n          if (index < rowsPerPage * page) return;\n        }\n        return (\n          <UserMatchesListWrapper key={history.historyId}>\n            <Link to={`/game/history/${history.historyId}`}>\n              <List className=\"list-item-wrapper\">\n                <Avatar className=\"avatar\" src={userData?.profile} alt=\"Avatar\" />\n                <div className=\"matches-text\">\n                  <UserMatchesResult textColor={history?.isWinner ? '#ffe937' : '#ec443b'}>\n                    {history?.isWinner ? 'Won' : 'Lost'}\n                    <span className=\"opponent-text\"> against {history?.opponent}</span>\n                  </UserMatchesResult>\n                  <span className=\"\">{history?.myPoint + ' - ' + history?.opponentPoint}</span>\n                </div>\n\n                {history?.isWinner ? (\n                  <SentimentVerySatisfiedIcon className=\"user-matches-icon-win\" />\n                ) : (\n                  <SentimentVeryDissatisfiedSharpIcon className=\"user-matches-icon-lose\" />\n                )}\n              </List>\n            </Link>\n          </UserMatchesListWrapper>\n        );\n      })}\n      <div className=\"profile-pagination-wrapper\">\n        <TablePagination\n          className=\"profile-pagination\"\n          component=\"div\"\n          count={userGameHistory ? userGameHistory?.length : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          style={{ color: 'white' }}\n        />\n      </div>\n    </UserMatchesContainer>\n  );\n};\n\nexport default UserMatches;\n","import styled from '@emotion/styled';\n\nexport const UserStatisticsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor:white;\n\twidth: 100%;\n\theight: 270px;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\tpadding: 5px 10px 15px 10px;\n\tmargin-top: 15px;\n\tfont-size: 20px;\n\twhite-space: nowrap;\n\n\t& .statistics-header {\n\t\tfont-size: 22px;\n\t\tmargin: 10px 0 15px 10px;\n\t}\n\n\t& .statistics-count-wrapper {\n\t\tmargin: 10px;\n\t\tdisplay: flex;\n\n\t}\n\n\t& .statistics-match-icon {\n\t\tfont-size: 45px;\n\n\t}\n\n\t& .statistics-match-text {\n\t\twidth: 100%;\n\t\tmargin-left: 15px;\n\t\tline-height: 40px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;","import React, { VFC } from 'react';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport EventBusyIcon from '@mui/icons-material/EventBusy';\nimport { IUserMatches, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport { UserStatisticsContainer } from './style';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserStatistics: VFC<Props> = ({ userData }) => {\n  const { data: MatchesCount } = useSWR<IUserMatches>(\n    `/api/game/history/userWinLoseFight/${userData?.userId}`,\n    fetcher,\n  );\n\n  return (\n    <UserStatisticsContainer>\n      <div className=\"statistics-header\">Statistics</div>\n      <div className=\"statistics-count-wrapper \">\n        <GradeIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>RATING</span>\n          <span>\n            {MatchesCount &&\n              (2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14 < 0\n                ? 0\n                : 2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14)}\n          </span>\n        </div>\n      </div>\n      <div className=\"statistics-count-wrapper \">\n        <EmojiEventsIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>Win Count</span>\n          <span>{MatchesCount?.numOfWin}</span>\n        </div>\n      </div>\n      <div className=\"statistics-count-wrapper \">\n        <EventBusyIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>Loss Count</span>\n          <span>{MatchesCount?.numOfLose}</span>\n        </div>\n      </div>\n    </UserStatisticsContainer>\n  );\n};\n\nexport default UserStatistics;\n","import styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\n\n\nexport const UserFriendCardContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\theight: 300px;\n\n\t& .friends-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .list-item-wrapper {\n\t\tcolor: white;\n\t}\n\n\t& .list-item-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .user {\n\t\tmargin-left: 12px;\n\t}\n\n\t& .no-friend-wrapper {\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n`;\n\nexport const UserAvatar = styled(Avatar) < { isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { VFC, useContext } from 'react';\nimport { UserFriendCardContainer, UserAvatar, ScrollbarColor } from './style';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { IFriendList, IAllUser } from '@typings/db';\nimport Avatar from '@mui/material/Avatar';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { SocketContext } from '@store/socket';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserFriendCard: VFC<Props> = ({ userData }) => {\n  const { data: userFriendList } = useSWR<IFriendList[]>(\n    `/api/friend/friends/${userData?.userId}`,\n    fetcher,\n  );\n  const { data: allUser } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n  return (\n    <UserFriendCardContainer>\n      <div className=\"friends-header\">Friends</div>\n      {userFriendList?.length ? (\n        <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n          <div>\n            {userFriendList?.map((friend) => {\n              return allUser?.map((user: IAllUser) => {\n                if (friend.userId2 === user.userId) {\n                  isState = 0;\n                  if (onGameList && onGameList[user.userId]) isState = 2;\n\n                  if (isState === 0) {\n                    onlineList?.map((onlineUser) => {\n                      if (onlineUser.userId === user.userId) isState = 1;\n                    });\n                  }\n                  return (\n                    <Link to={`/users/${user?.userId}`} key={user.userId}>\n                      <ListItem className=\"list-item-wrapper\" button>\n                        <UserAvatar\n                          isstate={`${\n                            isState\n                              ? isState === 1\n                                ? '2px solid #1ed14b'\n                                : '2px solid #FFD400'\n                              : '2px solid #d63638'\n                          }`}\n                          src={user?.profile}\n                          alt=\"Avatar\"\n                        />\n                        <ListItemText className=\"user\" primary={user?.username} />\n                      </ListItem>\n                    </Link>\n                  );\n                }\n              });\n            })}\n          </div>\n        </Scrollbars>\n      ) : (\n        <div className=\"no-friend-wrapper\">\n          <span>no friend found</span>\n        </div>\n      )}\n    </UserFriendCardContainer>\n  );\n};\n\nexport default UserFriendCard;\n","import styled from '@emotion/styled';\n\nexport const UserProfileAchieveCardContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\tmargin-bottom: 15px;\n\theight: 320px;\n\n\t& .achievements-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .achievements-achievement {\n\t\tmargin: 15px;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t}\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\n\t& .achieve-header {\n\t\tfont-size: 18px;\n\t\tfont-weight: 700;\n\t\tpadding: 15px 15px;\n\t\tborder-radius: 3px 3px 0 0;\n\t\tbackground-color: #1e1e1e;\n\t}\n\n\t& .header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\n\t& .content {\n\t\tfont-size: 14px;\n\t\tcolor: #bebebe;\n\t\tfont-weight: 600\n\t}\n`;\n\nexport const AchieveBody = styled.div`\n\tposition: relative;\n\ttext-align: center;\n\n\t& .progress-text {\n\t\t\tz-index: 15;\n\t\t\tposition: absolute;\n\t\t\tright: 50%;\n\t\t\ttransform: translateX(50%);\n\t\t\tline-height: 22px;\n\t\t\tfont-size: 12px;\n\t\t\twhite-space: nowrap;\n\t}\n\n\t& .progress-background {\n\t\tbackground-color: #253161;\n\t\twidth: 100%;\n\t\tfont-weight: 500;\n\t\tborder-radius: 0 0 3px 3px;\n\t\theight: 23px;\n\t}\n`;\n\nexport const ProgressBar = styled.div<{ width: string }>`\n  width: ${(props) => props.width};\n\tposition: absolute;\n\tz-index: 10;\n\tbackground-color: #365dff;\n\tfont-weight: 500;\n\tborder-radius: 0 0 3px 3px;\n\theight: 23px;\n\ttext-align: center;\n\ttransition: all ease-out 0.5s;\n`;","import React, { useEffect, useState, VFC } from 'react';\nimport { IAchievement } from '@typings/db';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport { Container, AchieveBody, ProgressBar } from './style';\n\ninterface Props {\n  curValue: IAchievement | undefined;\n  maxCount: number;\n  Icon: any;\n  header: string;\n  condition: string;\n}\n\ndayjs.locale('ko');\n\nconst Achievement: VFC<Props> = ({ Icon, curValue, maxCount, header, condition }) => {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (curValue?.number) {\n        if (maxCount <= curValue?.number && curValue?.star >= maxCount / 5) {\n          return;\n        } else if (progress < curValue?.number) {\n          setProgress((prev) => prev + 1);\n        }\n      }\n    }, 40);\n    return () => clearTimeout(timeout);\n  }, [progress, curValue, maxCount]);\n  return (\n    <Container>\n      <div className=\"achieve-header\">\n        <div className=\"header\">\n          <span>{header}</span>\n          <div>\n            <Icon />\n          </div>\n        </div>\n        <span className=\"content\">{condition}</span>\n      </div>\n      <AchieveBody style={{ position: 'relative', textAlign: 'center' }}>\n        <div className=\"progress-text\">\n          {curValue && (curValue?.star >= maxCount / 5 || curValue.number >= maxCount)\n            ? dayjs(curValue.time).format('YYYY. MM. DD. A HH:mm:ss')\n            : progress + ' / ' + maxCount}\n        </div>\n        <ProgressBar\n          width={`${\n            curValue && (curValue?.star >= maxCount / 5 || curValue?.number >= maxCount)\n              ? '100'\n              : (progress / maxCount) * 100\n          }%`}\n        ></ProgressBar>\n        <div className=\"progress-background\"></div>\n      </AchieveBody>\n    </Container>\n  );\n};\n\nexport default Achievement;\n","import React, { VFC } from 'react';\nimport { UserProfileAchieveCardContainer, ScrollbarColor } from './style';\nimport { IAchievement } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport Achievement from '@components/Achievement';\nimport Scrollbars from 'react-custom-scrollbars';\nimport StarIcon from '@mui/icons-material/Star';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport SendIcon from '@mui/icons-material/Send';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport LocalDiningIcon from '@mui/icons-material/LocalDining';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport LocalPoliceIcon from '@mui/icons-material/LocalPolice';\nimport SchoolIcon from '@mui/icons-material/School';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport GavelIcon from '@mui/icons-material/Gavel';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserProfileAchieveCard: VFC<Props> = ({ userData }) => {\n  const { data: friendCount } = useSWR<IAchievement>(\n    `/api/friend/countFriends/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: DmListCount } = useSWR<IAchievement>(\n    `/api/dms/getDmListNumber/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: matchCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfFight/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: winCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfWin/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: loseCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfLose/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: channelCount } = useSWR<IAchievement>(\n    `/api/channels/achievement/numOfChannels/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  return (\n    <UserProfileAchieveCardContainer>\n      <div className=\"achievements-header\">Achievements</div>\n      <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ChatBubbleIcon}\n            maxCount={5}\n            curValue={channelCount}\n            header={'Channels member'}\n            condition={'Join 5 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={GroupsIcon}\n            maxCount={10}\n            curValue={friendCount}\n            header={'Small group'}\n            condition={'Have 10 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={RecordVoiceOverIcon}\n            maxCount={30}\n            curValue={DmListCount}\n            header={'Chatterbox '}\n            condition={'DM to 30 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalPoliceIcon}\n            maxCount={15}\n            curValue={loseCount}\n            header={'Captain America'}\n            condition={'Lose 15 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LightbulbIcon}\n            maxCount={5}\n            curValue={matchCount}\n            header={'Welcome newbie '}\n            condition={'Match 5 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SchoolIcon}\n            maxCount={30}\n            curValue={matchCount}\n            header={'Alumnus'}\n            condition={'Match 30 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalDiningIcon}\n            maxCount={5}\n            curValue={winCount}\n            header={'Warriors'}\n            condition={'Win 5 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalFireDepartmentIcon}\n            maxCount={15}\n            curValue={winCount}\n            header={'Fighter'}\n            condition={'Win 15 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={BusinessIcon}\n            maxCount={5}\n            curValue={friendCount}\n            header={'Businesses with 5 employees'}\n            condition={'Have 5 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ForumIcon}\n            maxCount={60}\n            curValue={channelCount}\n            header={'Community member'}\n            condition={'Join 60 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SendIcon}\n            maxCount={5}\n            curValue={DmListCount}\n            header={'Paper Airplane'}\n            condition={'DM to 5 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={FacebookIcon}\n            maxCount={150}\n            curValue={channelCount}\n            header={'Addicted to social media'}\n            condition={'Join 150 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={AirplanemodeActiveIcon}\n            maxCount={300}\n            curValue={matchCount}\n            header={'Air Force Medal of honor'}\n            condition={'Match 300 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ShieldIcon}\n            maxCount={5}\n            curValue={loseCount}\n            header={'Shield'}\n            condition={'Lose 5 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SecurityIcon}\n            maxCount={100}\n            curValue={loseCount}\n            header={'Aegis'}\n            condition={'Lose 100 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SportsBaseballIcon}\n            maxCount={100}\n            curValue={DmListCount}\n            header={'Chan Ho Park '}\n            condition={'DM to 100 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={StarIcon}\n            maxCount={100}\n            curValue={friendCount}\n            header={'Star'}\n            condition={'Have 100 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={GavelIcon}\n            maxCount={100}\n            curValue={winCount}\n            header={'Mjolnir'}\n            condition={'Win 100 games'}\n          />\n        </div>\n      </Scrollbars>\n    </UserProfileAchieveCardContainer>\n  );\n};\n\nexport default UserProfileAchieveCard;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const ProfileContainer = styled(Box)`\n\tflex-grow: 1;\n\tbackground-color: #121212;\n\tpadding: 20px;\n`;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport MyProfileCard from '@components/MyProfileCard';\nimport UserProfileCard from '@components/UserProfileCard';\nimport UserMatches from '@components/UserMatches';\nimport UserStatistics from '@components/UserStatistics';\nimport UserFriendCard from '@components/UserFriendCard';\nimport UserProfileAchieveCard from '@components/UserProfileAchieveCard';\nimport fetcher from '@utils/fetcher';\nimport { useParams } from 'react-router-dom';\nimport { IUser, IAllUser } from '@typings/db';\nimport useSWR from 'swr';\nimport { ProfileContainer } from './style';\n\nconst Profile = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  let UserData;\n  if (id && id !== myData?.userId) {\n    alluser?.map((user) => {\n      if (user.userId === id) UserData = user;\n    });\n  }\n\n  return (\n    <ProfileContainer>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={3}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <MyProfileCard />\n          ) : (\n            <UserProfileCard UserData={UserData} />\n          )}\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserStatistics userData={myData} />\n          ) : (\n            <UserStatistics userData={UserData} />\n          )}\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserMatches userData={myData} />\n          ) : (\n            <UserMatches userData={UserData} />\n          )}\n        </Grid>\n        <Grid item xs={12} sm={12} md={3}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserProfileAchieveCard userData={myData} />\n          ) : (\n            <UserProfileAchieveCard userData={UserData} />\n          )}\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserFriendCard userData={myData} />\n          ) : (\n            <UserFriendCard userData={UserData} />\n          )}\n        </Grid>\n      </Grid>\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\theight: 100vh;\n\tdisplay: flex;\n\twidth: 100%;\n\tborder-left: 1px solid #4f4f4f;\n\tmargin: 0;\n\tpadding: 0;\n\tbackground-color: #1e1e1e;\n\toverflow: hidden;\n\n`;","import styled from '@emotion/styled';\n\nexport const ProtectedRoomModalBack = styled.div`\n\tcolor: white;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 2000;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n`;\n\nexport const ProtectedRoomModalContainer = styled.div`\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 500px;\n\theight: 180px;\n\tbackground-color: #1e1e1e;\n\tcolor: #979797;\n\topacity: 1;\n\tborder: 1px solid #1e1e1e;\n\tborder-radius: 3px;\n\tpadding: 10px 20px 10px 20px;\n\tz-index: 3000;\n\ttransform: translate(-50%, -50%);\n\tboxShadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .header {\n\t\tdisplay: flex;\n\t\tcolor: white;\n\t\tjustify-content: space-between;\n\t}\n\n\t& .close-icon {\n\t\tcolor: white;\n\t}\n\n\t& .body {\n\t\tdisplay: flex;\n\t}\n\n\t& .form-control {\n\t\twidth: 100%;\n\t\tcolor: white;\n\t\tmargin-top: 15px;\n\t}\n\n\t& .input-label {\n\t\tcolor: white;\n\t}\n\n\t& .visibility-icon {\n\t\tcolor: white;\n\t}\n\n\t& .join-btn {\n\t\twidth: 120px;\n\t\theight: 45px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 10px;\n\t}\n\n\t& .password-error-text {\n\t\tcolor: red;\n\t\tfont-weight: 600;\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root {\n\t\tcolor: white;\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:before {\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 0.6);\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:hover:not(.Mui-disabled):before {\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 1);\n\n\t}\n`;","import React, { VFC, useCallback, useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport Button from '@mui/material/Button';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Visibility from '@mui/icons-material/Visibility';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { IChannelList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport config from '@utils/config';\nimport { ProtectedRoomModalBack, ProtectedRoomModalContainer } from './style';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  channelPasswordModal: boolean;\n  setChannelPasswordModal: any;\n  channelPasswordRoomNumber: string;\n  setChannelPasswordRoomNumber: any;\n}\n\nconst ProtectedRoomModal: VFC<Props> = ({\n  channelPasswordModal,\n  setChannelPasswordModal,\n  channelPasswordRoomNumber,\n  setChannelPasswordRoomNumber,\n}) => {\n  const { data: myChannelList, mutate: mutateChannelList } = useSWR<IChannelList[]>(\n    '/api/channels/myChannelList',\n    fetcher,\n  );\n  const { data: allChannelList, mutate: mutateAllChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/allChannelList`,\n    fetcher,\n  );\n  const [PasswordValues, setPasswordValues] = useState({\n    password: '',\n    showPassword: false,\n  });\n  const [passwordError, setPasswordError] = useState(false);\n\n  const history = useHistory();\n\n  const handleClickShowPassword = useCallback(() => {\n    setPasswordValues({\n      ...PasswordValues,\n      showPassword: !PasswordValues.showPassword,\n    });\n  }, [PasswordValues, setPasswordValues]);\n  const handleChange = useCallback(\n    (prop: any) => (event: any) => {\n      setPasswordValues({ ...PasswordValues, [prop]: event.target.value });\n      setPasswordError(false);\n    },\n    [PasswordValues, setPasswordValues, passwordError, setPasswordError],\n  );\n  const handleMouseDownPassword = useCallback((event: any) => {\n    event.preventDefault();\n  }, []);\n\n  const onClickModalClose = useCallback(\n    (e) => {\n      e.preventDefault();\n      setChannelPasswordModal(false);\n      setPasswordValues({\n        password: '',\n        showPassword: false,\n      });\n    },\n    [channelPasswordModal, setChannelPasswordModal],\n  );\n\n  const onSubmitPassword = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(\n          `/api/channels/join/${channelPasswordRoomNumber}`,\n          {\n            password: PasswordValues.password,\n          },\n          config,\n        )\n        .then((response) => {\n          setPasswordValues({\n            password: '',\n            showPassword: false,\n          });\n          setChannelPasswordModal(false);\n          mutateAllChannelList();\n          mutateChannelList().then(() => {\n            history.push(`/channels/${channelPasswordRoomNumber}`);\n          });\n          setChannelPasswordRoomNumber('');\n        })\n        .catch((error) => {\n          if (error.response.data.data.message === '아이디 혹은 비밀번호가 틀림')\n            setPasswordError(true);\n          else {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          }\n        });\n    },\n    [PasswordValues, channelPasswordModal, channelPasswordRoomNumber, passwordError],\n  );\n  return (\n    <>\n      <ProtectedRoomModalBack onClick={onClickModalClose}></ProtectedRoomModalBack>\n      <ProtectedRoomModalContainer>\n        <div className=\"header\">\n          <h2>Unlock channel access password</h2>\n          <IconButton className=\"close-icon\" aria-label=\"close\" onClick={onClickModalClose}>\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div className=\"body\">\n          <FormControl className=\"form-control\" variant=\"standard\">\n            <InputLabel htmlFor=\"standard-adornment-password\" className=\"input-label\">\n              What is the password?\n            </InputLabel>\n            <Input\n              id=\"standard-adornment-password\"\n              type={PasswordValues.showPassword ? 'text' : 'password'}\n              value={PasswordValues.password}\n              onChange={handleChange('password')}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    className=\"visibility-icon \"\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {PasswordValues.showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n          <Button className=\"join-btn\" onClick={onSubmitPassword} variant=\"contained\">\n            JOIN\n          </Button>\n        </div>\n        {passwordError && <span className=\"password-error-text\">Password is wrong</span>}\n      </ProtectedRoomModalContainer>\n    </>\n  );\n};\n\nexport default ProtectedRoomModal;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Typography from '@mui/material/Typography';\n\n\nexport const ChannelBodyContainer = styled(Box)`\n\tbackground-color: #121212;\n\tpadding: 15px 8px 15px 15px;\n\twidth: 100%;\n\theight: calc(100% - 64px);\n\n\t& .grid-container {\n\t\twidth: 100%;\n\t}\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;\n\nexport const ChannelCard = styled(Card) <{ ismobile: boolean }>`\n\tbackground-color: #1e1e1e;\n\twidth: ${(props) => { return props.ismobile ? '95%' : '100%' }};\n\tcolor: white;\n`;\n\nexport const ChannelName = styled(Typography)`\n\tdisplay:flex;\n\tjustify-content: space-between;\n`;\n\n","import React, { VFC, useCallback, useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Scrollbars from 'react-custom-scrollbars';\nimport useSWR from 'swr';\nimport { IChannelList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport LockIcon from '@mui/icons-material/Lock';\nimport axios from 'axios';\nimport ProtectedRoomModal from '@components/ProtectedRoomModal';\nimport config from '@utils/config';\nimport { ChannelBodyContainer, ScrollbarColor, ChannelCard, ChannelName } from './style';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ChannelBody = () => {\n  const { data: allChannelList, mutate: mutateAllChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/allChannelList`,\n    fetcher,\n  );\n  const { data: myChannelList, mutate: mutateMyChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/myChannelList`,\n    fetcher,\n  );\n  const [channelPasswordModal, setChannelPasswordModal] = useState(false);\n  const [channelPasswordRoomNumber, setChannelPasswordRoomNumber] = useState('');\n  const history = useHistory();\n  const isMobile = useMediaQuery({ maxWidth: 420 });\n  const onClickPublicRoom = useCallback((channelId, e) => {\n    e.preventDefault();\n    axios\n      .post(\n        `/api/channels/join/${channelId}`,\n        {\n          password: '',\n        },\n        config,\n      )\n      .then(() => {\n        mutateAllChannelList();\n        mutateMyChannelList().then(() => {\n          history.push(`/channels/${channelId}`);\n        });\n      })\n      .catch((error) => {\n        if (error.response.data.code === 403) {\n          toast.error('This room is not accessible', {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        } else {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n\n  const onClickProtectedRoom = useCallback(\n    (roomNumber, e) => {\n      e.preventDefault();\n      setChannelPasswordModal(true);\n      setChannelPasswordRoomNumber(roomNumber);\n    },\n    [\n      channelPasswordModal,\n      setChannelPasswordModal,\n      channelPasswordRoomNumber,\n      setChannelPasswordRoomNumber,\n    ],\n  );\n  return (\n    <ChannelBodyContainer sx={{ flexGrow: 1 }}>\n      <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n        <Grid className=\"grid-container\" container spacing={3}>\n          {channelPasswordModal ? (\n            <ProtectedRoomModal\n              channelPasswordModal={channelPasswordModal}\n              setChannelPasswordModal={setChannelPasswordModal}\n              channelPasswordRoomNumber={channelPasswordRoomNumber}\n              setChannelPasswordRoomNumber={setChannelPasswordRoomNumber}\n            />\n          ) : null}\n          {allChannelList?.map((Channel: IChannelList) => {\n            let flag = false;\n            myChannelList?.forEach((myChannel) => {\n              if (myChannel.id === Channel.id) {\n                flag = true;\n                return null;\n              }\n            });\n            if (flag) return null;\n            if (Channel.type === 2) {\n              return null;\n            } else if (Channel.type === 0) {\n              return (\n                <Grid item xs={12} sm={12} md={6} key={Channel.id}>\n                  <ChannelCard\n                    ismobile={isMobile}\n                    className=\"card\"\n                    onClick={(e) => {\n                      onClickPublicRoom(Channel.id, e);\n                    }}\n                  >\n                    <CardActionArea>\n                      <CardContent>\n                        <ChannelName>\n                          <span>{Channel.name}</span>\n                        </ChannelName>\n                        <Typography variant=\"body2\" color=\"hsla(0,0%,100%,.7)\">\n                          {Channel.authId}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </ChannelCard>\n                </Grid>\n              );\n            } else if (Channel.type === 1) {\n              return (\n                <Grid item xs={12} sm={12} md={6} key={Channel.id}>\n                  <ChannelCard\n                    ismobile={isMobile}\n                    className=\"card\"\n                    onClick={(e) => {\n                      onClickProtectedRoom(Channel.id, e);\n                    }}\n                  >\n                    <CardActionArea>\n                      <CardContent>\n                        <ChannelName>\n                          <span>{Channel.name}</span>\n                          <span>{<LockIcon />}</span>\n                        </ChannelName>\n                        <Typography variant=\"body2\" color=\"hsla(0,0%,100%,.7)\">\n                          {Channel.authId}\n                        </Typography>\n                      </CardContent>\n                    </CardActionArea>\n                  </ChannelCard>\n                </Grid>\n              );\n            }\n          })}\n        </Grid>\n      </Scrollbars>\n    </ChannelBodyContainer>\n  );\n};\n\nexport default ChannelBody;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const ChannelHeaderContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .app-bar {\n\t\tbackground-color: #272727;\n\t}\n\n\t& .header-text {\n\t\tflex-grow: 1;\n\t}\n`;","import React, { VFC } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { ChannelHeaderContainer } from './style';\n\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  content: string;\n}\n\nconst ChannelHeader: VFC<Props> = ({ content }) => {\n  const { id } = useParams<{ id: string }>();\n\n  return (\n    <>\n      <ChannelHeaderContainer>\n        <AppBar className=\"app-bar\" position=\"static\">\n          <Toolbar>\n            <Typography className=\"header-text\" variant=\"h6\" component=\"div\">\n              {content}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </ChannelHeaderContainer>\n    </>\n  );\n};\n\nexport default ChannelHeader;\n","import styled from '@emotion/styled';\n\nexport const ChannelDiscoverContainer = styled.div`\n\twidth: 100%;\n`;","import styled from '@emotion/styled';\n\nexport const ChannelLeftDrawBarContainer = styled.div`\n\twidth: 280px;\n\theight: 100%;\n\tpadding: 30px 15px;\n\tbackground-color: #353636;\n\tborder-right: 1px solid #4f4f4f;\n\toverflow: hidden;\n\n\t& .search-input {\n\t\twidth: 100%;\n\t\toutline: none;\n\t\tresize: none;\n\t\tborder-radius: 4px;\n\t\tbackground: #bdbdbd;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tfont-family: monospace;\n\t\tcolor: black;\n\t\tborder: none;\n\t\tpadding: 0 15px;\n\t\theight: 40px;\n\t}\n\n\n\t& .header-wrapper {\n\t\tborder-top: 1px solid #4f4f4f;\n\t\tborder-bottom: 1px solid #4f4f4f;\n\t\tmargin: 10px 0;\n\t\tpadding: 14px 0 0;\n\t\theight: 80px;\n\t}\n\n\t& .channel-discover-wrapper {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\n\t& .channel-discover-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.7);\n\t}\n\n\t& .fireicon {\n\t\tmargin-right: 15px;\n\t}\n\n\t& .channel-discover-btn {\n\t\tcolor: white;\n\t}\n\n\t& .channel-list-wrapper {\n\t\theight: 70%;\n\t}\n\n\t& .channel-list {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\n\t& .channel-list:hover {\n\t\tbackground-color: rgba(74,75,84,0.7);\n\t}\n\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\n\t\tbackground-color: #666666 !important;\n\t}\n\n\t& .channel-list-btn {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\n\t& .channel-list-text {\n\t\tcolor: white;\n\t\tmargin: 4px 0 4px 18px\n\t}\n\n\n\t\n\t& .footer {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\theight: 11%;\n\t}\n\n\t& .create-btn {\n\t\twidth: 180px;\n\t\theight: 35px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t}\n\t\n\t\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\n\t\tbackground-color: #666666;\n\t}\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useCallback, useState } from 'react';\nimport ListItemText from '@mui/material/ListItemText';\nimport Scrollbars from 'react-custom-scrollbars';\nimport List from '@mui/material/List';\nimport { IUser, IAllUser, IDmList, IChannelList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nimport ListItemButton from '@mui/material/ListItemButton';\nimport FlareIcon from '@mui/icons-material/Flare';\nimport { ChannelLeftDrawBarContainer, ScrollbarColor } from './style';\n\nlet channelList2: IChannelList[] | undefined;\n\nconst ChannelLeftDrawBar = () => {\n  const { data: users } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: channelList } = useSWR<IChannelList[]>('/api/channels/myChannelList', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [channelSearchInputValue, setChannelSearchInputValue] = useState('');\n\n  const handleListItemClick = useCallback(\n    (event: any, index: number) => {\n      setSelectedIndex(index);\n    },\n    [selectedIndex, setSelectedIndex],\n  );\n\n  const onChangeChannelSearchInput = useCallback((e) => {\n    setChannelSearchInputValue(e.target.value);\n  }, []);\n\n  if (channelSearchInputValue && channelSearchInputValue.indexOf('\\\\') === -1) {\n    channelList2 = channelList?.filter((channel) => {\n      const regex = new RegExp(channelSearchInputValue, 'gi');\n      return channel.name.match(regex);\n    });\n  }\n\n  const getChannelList = useCallback(\n    (inputValue: string) => {\n      if (!inputValue) return channelList;\n      else return channelList2;\n    },\n    [channelList],\n  );\n\n  return (\n    <ChannelLeftDrawBarContainer>\n      <input\n        className=\"search-input\"\n        autoComplete=\"off\"\n        onChange={onChangeChannelSearchInput}\n        value={channelSearchInputValue}\n      ></input>\n      <div className=\"header-wrapper\">\n        <Link to={`/channels`}>\n          <List\n            className=\"channel-discover-wrapper\"\n            component=\"nav\"\n            aria-label=\"main mailbox folders\"\n          >\n            <ListItemButton\n              className=\"channel-discover-btn\"\n              selected={selectedIndex === 0}\n              onClick={(event) => handleListItemClick(event, 0)}\n            >\n              <FlareIcon className=\"fireicon\" />\n              <ListItemText primary=\"Discover\" />\n            </ListItemButton>\n          </List>\n        </Link>\n      </div>\n      <div className=\"channel-list-wrapper\">\n        <Scrollbars\n          autoHide\n          renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\n        >\n          {getChannelList(channelSearchInputValue)?.map((channel: any, index) => {\n            let channelMode = '';\n            if (channel.type === 0) {\n              channelMode = 'Public';\n            } else if (channel.type === 1) {\n              channelMode = 'Protected';\n            } else if (channel.type === 2) {\n              channelMode = 'Private';\n            }\n            return (\n              <Link to={`/channels/${channel.id}`} key={channel.id}>\n                <List className=\"channel-list\" component=\"nav\" aria-label=\"main mailbox folders\">\n                  <ListItemButton\n                    className=\"channel-list-btn\"\n                    selected={selectedIndex === index + 1}\n                    onClick={(event) => handleListItemClick(event, index + 1)}\n                  >\n                    <ListItemText\n                      className=\"channel-list-text\"\n                      primary={channel.name}\n                      secondary={channelMode}\n                    />\n                  </ListItemButton>\n                </List>\n              </Link>\n            );\n          })}\n        </Scrollbars>\n      </div>\n      <div className=\"footer\">\n        <Link to={`/channels/create`}>\n          <Button className=\"create-btn\" variant=\"contained\">\n            CREATE&nbsp;&nbsp;+\n          </Button>\n        </Link>\n      </div>\n    </ChannelLeftDrawBarContainer>\n  );\n};\n\nexport default ChannelLeftDrawBar;\n","import ChannelBody from '@components/ChannelBody';\nimport ChannelHeader from '@components/ChannelHeader';\nimport React, { VFC } from 'react';\nimport { ChannelDiscoverContainer } from './style';\nimport ChannelLeftDrawBar from '@components/ChannelLeftDrawBar';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ChannelDiscover = () => {\n  return (\n    <>\n      <ChannelLeftDrawBar />\n      <ChannelDiscoverContainer>\n        <ChannelHeader content={'Discover some channels'} />\n        <ChannelBody />\n      </ChannelDiscoverContainer>\n    </>\n  );\n};\n\nexport default ChannelDiscover;\n","import styled from '@emotion/styled';\n\nexport const ChatBoxContainer = styled.div`\n\theight: 60px;\n\tbackground-color: #272727;\n\tpadding: 20px 6px 3px 16px;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\t& .chat-box-form {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t}\n\n\t& .chat-box-input {\n\t\twidth: 95%;\n\t\toutline: none;\n\t\tresize: none;\n\t\tborder-radius: 4px;\n\t\tbackground: #bdbdbd;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tfont-family: monospace;\n\t\theight: 37px;\n\t\tcolor: black;\n\t\tborder: none;\n\t\tpadding: 10px;\n\t}\n\n\t& .submit-btn {\n\t\tbackground: #272727;\n\t\tbox-shadow: none;\n\t\tborder: none;\n\t\tcolor: white;\n\t\tmargin-left: 10px;\n\t\tcursor: pointer;\n\t}\n`;","import React, { useCallback, useEffect, useState, VFC } from 'react';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport { ChatBoxContainer } from './style';\n\ninterface Props {\n  onSubmitChat: () => void;\n  setChat: (chat: string) => void;\n  chat: string;\n}\n\nconst ChatBox: VFC<Props> = ({ chat, onSubmitChat, setChat }) => {\n  const [chatBoxChat, setChatBoxChat] = useState('');\n  const onChangeChatBoxChat = useCallback((e) => {\n    setChatBoxChat(e.target.value);\n  }, []);\n\n  useEffect(() => {\n    if (chat) {\n      onSubmitChat();\n      setChatBoxChat('');\n    }\n  }, [chat, onSubmitChat]);\n\n  const onSubmitChatBoxChat = useCallback(\n    (e) => {\n      e.preventDefault();\n      setChat(chatBoxChat);\n    },\n    [chatBoxChat, onSubmitChat],\n  );\n\n  return (\n    <ChatBoxContainer>\n      <form className=\"chat-box-form\">\n        <input\n          className=\"chat-box-input\"\n          value={chatBoxChat}\n          onChange={onChangeChatBoxChat}\n        ></input>\n        <button className=\"submit-btn\" onClick={onSubmitChatBoxChat}>\n          <SendIcon />\n        </button>\n      </form>\n    </ChatBoxContainer>\n  );\n};\n\nexport default ChatBox;\n","import styled from '@emotion/styled';\nimport Toolbar from '@mui/material/Toolbar';\n\nexport const MyToolbar = styled(Toolbar)`\n\t.myFab {\n\t\twidth: 45px;\n\t\theight: 45px;\n\t\tbox-shadow: none;\n\t\tcolor: white;\n\t}\n\t.on {\n\t\tbackground-color: #4d4d4d;\n\t}\n\t.off {\n\t\tbackground-color: #272727;\n\t}\n\t.myFab:hover {\n\t\tbackground-color: #4a4b54;\n\t}\n\n`;\n\n","import React, { VFC } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport { IMemberList, IChannelList } from '@typings/db';\nimport { useParams } from 'react-router-dom';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport Fab from '@mui/material/Fab';\nimport { MyToolbar } from './style';\n\ninterface Props {\n  onClickMembersToggle: (e: any) => void;\n  membersToggle: boolean;\n}\n\nconst ChannelChatHeader: VFC<Props> = ({ onClickMembersToggle, membersToggle }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myChannelList, mutate: mutateMyChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/myChannelList`,\n    fetcher,\n  );\n  return (\n    <Box>\n      <AppBar position=\"static\" sx={{ bgcolor: '#272727' }}>\n        <MyToolbar>\n          <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1 }}>\n            {myChannelList?.map((channel: IChannelList) => {\n              if (channel.id === parseInt(id)) {\n                return channel.name;\n              }\n            })}\n          </Typography>\n          <Fab\n            aria-label=\"add\"\n            className={'myFab ' + (membersToggle ? 'on' : 'off')}\n            onClick={onClickMembersToggle}\n          >\n            <GroupsIcon />\n          </Fab>\n        </MyToolbar>\n      </AppBar>\n    </Box>\n  );\n};\n\nexport default ChannelChatHeader;\n","import styled from '@emotion/styled';\n\nexport const ChannelChatListContainer = styled.div`\n\tbackground: #1e1e1e;\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 8px 0 8px 15px;\n\n\t& .chat-container {\n\t\tdisplay: flex;\n\t\tcolor: white;\n\t}\n\n\t& .profile-container {\n\t\tmargin-right: 10px;\n\t}\n\n\t& .chat-avatar {\n\t\twidth: 40px;\n\t\theight: 40px;\n\t\tmargin-bottom: 25px;\n\t}\n\n\t& .chat-text {\n\t\tmargin-top: 0;\n\t}\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n\t\tcolor: white;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: #363636;\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n  &:hover {\n\t\tbackground-color: white;\n\t}\n`;","import { IChatList, IChannelChatList } from '@typings/db';\nimport customParseFormat from 'dayjs/plugin/customParseFormat'\nimport dayjs from 'dayjs';\ndayjs.extend(customParseFormat);\n\nconst days = ['일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일'];\n\nexport function makeSectionDM(chatList: IChatList[]) {\n\tconst sections: { [key: string]: IChatList[] } = {};\n\tchatList.forEach((chat) => {\n\t\tlet monthData = dayjs(chat.createdAt).format('YYYY-MM-DD');\n\t\tmonthData += ' ' + days[dayjs(chat.createdAt).day()];\n\t\tif (Array.isArray(sections[monthData]))\n\t\t\tsections[monthData].push(chat);\n\t\telse\n\t\t\tsections[monthData] = [chat];\n\t})\n\treturn sections;\n}\n\nexport function makeSectionChannel(chatList: IChannelChatList[]) {\n\tconst sections: { [key: string]: IChannelChatList[] } = {};\n\tchatList.forEach((chat) => {\n\t\tlet monthData = dayjs(chat.updatedAt).format('YYYY-MM-DD');\n\t\tmonthData += ' ' + days[dayjs(chat.updatedAt).day()];\n\t\tif (Array.isArray(sections[monthData]))\n\t\t\tsections[monthData].push(chat);\n\t\telse\n\t\t\tsections[monthData] = [chat];\n\t})\n\treturn sections;\n}","import Avatar from '@mui/material/Avatar';\nimport { IAllUser, IUser, IChannelChatList, IBlockList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport React, { RefObject, VFC, useCallback } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { useParams } from 'react-router';\nimport useSWR from 'swr';\nimport { ChannelChatListContainer, StickyHeader, ScrollbarColor } from './style';\nimport { makeSectionChannel } from '@utils/makeSection';\n\ninterface Props {\n  chatData: IChannelChatList[][] | undefined;\n  scrollbarRef: RefObject<Scrollbars>;\n  setSize: (f: (size: number) => number) => Promise<IChannelChatList[][] | undefined>;\n  isReachingEnd: boolean;\n}\n\nconst ChannelChatList: VFC<Props> = ({ chatData, scrollbarRef, setSize, isReachingEnd }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: blockList } = useSWR<IBlockList[]>('/api/friend/blocklist', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n\n  const onScroll = useCallback(\n    (values) => {\n      if (values.scrollTop === 0 && !isReachingEnd) {\n        setSize((prevSize) => {\n          return prevSize + 1;\n        }).then(() => {\n          if (scrollbarRef?.current) {\n            scrollbarRef.current?.scrollTop(\n              scrollbarRef.current?.getScrollHeight() - values.scrollHeight,\n            );\n          }\n        });\n      }\n    },\n    [scrollbarRef, setSize, isReachingEnd],\n  );\n\n  const chatSections = makeSectionChannel(chatData ? chatData.flat().reverse() : []);\n  let username = '';\n\n  return (\n    <ChannelChatListContainer>\n      <Scrollbars\n        ref={scrollbarRef}\n        onScrollFrame={onScroll}\n        renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\n      >\n        {Object.entries(chatSections).map(([date, chats], index) => {\n          return (\n            <div key={index}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats?.map((chat: IChannelChatList, index) => {\n                let isblock = false;\n                blockList?.map((blockUser) => {\n                  if (chat.userId === blockUser.userId2) isblock = true;\n                });\n                if (!isblock) {\n                  return (\n                    <div className=\"chat-container\" key={index}>\n                      <div className=\"profile-container \">\n                        {alluser?.map((user) => {\n                          if (user.userId === chat.userId) {\n                            username = user.username;\n                            return (\n                              <Avatar\n                                className=\"chat-avatar\"\n                                src={user.profile}\n                                alt=\"Avatar\"\n                                key={chat.message + index}\n                              />\n                            );\n                          }\n                        })}\n                      </div>\n                      <div>\n                        <div>{username}</div>\n                        <p className=\"chat-text\">{chat.message}</p>\n                      </div>\n                    </div>\n                  );\n                }\n              })}\n            </div>\n          );\n        })}\n      </Scrollbars>\n    </ChannelChatListContainer>\n  );\n};\n\nexport default ChannelChatList;\n","import styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\n\nexport const ModalBackground = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n\tz-index: 100;\n`;\n\nexport const Container = styled.div`\n\n\t&.MemberDrawBar {\n\t\tposition: absolute;\n\t\tright: 0;\n\t  background-color: #363636;\n\t\twidth: 230px;\n\t\theight: 100%;\n\t\tmargin: 0;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tz-index: 500;\n\t\tdisplay: flex;\n\t\tpadding-bottom: 3px;\n\t}\n\t&.hidden {\n\t\ttransform: translateX(100%);\n\t\tvisibility: none;\n\t\ttransition: all ease-in 0.2s;\n\t}\n  &.visible {\n\t\ttransform: translateX(0%);\n\t\ttransition: all ease-out 0.2s;\n\t\tborder-left: 1px solid #4f4f4f;\n\t}\n\n\t& .List-header {\n\t\tfont-size: 16px;\n\t\tmargin-top: 11px;\n\t\tcolor: gray;\n\t}\n\n\t& .member-text {\n\t\tmargin-left: 12px;\n\t\tcolor: white;\n\t}\n\n\t& .channel-room-btn {\n\t\twidth: 200px;\n\t\theight: 35px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t\tmargin: 10px 0;\n\t}\n\n\t& .unmute-icon {\n\t\tcolor: white;\n\t}\n\n\t& .mute-icon {\n\t\tcolor: red;\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 45px;\n\theight: 45px;\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import styled from '@emotion/styled';\nimport Button from '@mui/material/Button';\n\nexport const Container = styled.div`\n\tfont-size: 20px;\n\twidth: 300px;\n\theight: 360px;\n\tfont-Weight: 600;\n\tbackground-Color: #1e1e1e;\n\tcolor: white;\n\tposition: fixed;\n\tleft: -301px;\n\tbox-shadow: 0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .header {\n\t\tborder-bottom: 1px solid #3a3a3a;\n\t}\n\n\t& .header-wrapper {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: space-between;\n\t\tmargin: 12px 15px 20px 20px;\n\t}\n\n\t& .user-text {\n\t\tmargin-left: 14px;\n\t}\n\n\n\t& .avatar {\n\t\tmargin-top: 5px;\n\t\twidth: 50px;\n\t\theight: 50px;\n\t\t\n\t}\n\n\n\n`;\n\nexport const AdminBtn = styled(Button) <{ btncolor: string }>`\n\tcolor: ${(props) => props.btncolor};\n\tfont-weight: 600;\n\tmargin: 0 0 0 40px;\n`;\n\nexport const MatchDataContainer = styled.div`\n\tborder-bottom: 1px solid #3a3a3a;\n\n\t& .count-wrapper {\n\t\tmargin: 17px 15px 20px 20px;\n\t\tdisplay: flex;\n\t}\n\n\t& .match-icon {\n\t\tfont-size: 40px;\n\t}\n\n\t& .match-text {\n\t\twidth: 100%;\n\t\tmargin-left: 15px;\n\t\tline-height: 40px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;\n\nexport const ButtonGroupsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\n\t& .profile-message-wrapper {\n\t\tborder-bottom: 1px solid #3a3a3a;\n\t}\n\n\t& .profile-btn {\n\t\tcolor: #979797;\n\t\tfont-weight: 600;\n\t\tmargin: 17px 15px 20px 20px;\n\t}\n\n\t& .message-btn {\n\t\tcolor: #43a047;\n\t\tfont-weight: 600;\n\t\tmargin: 17px 15px 20px 20px;\n\t}\n\n\t& .mute-kick-ban-btn {\n\t\tcolor: #d50000;\n\t\tfont-weight: 600;\n\t\tmargin: 17px 15px 20px 20px;\n\t}\n`;\n","import React, { VFC, useCallback } from 'react';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport EventBusyIcon from '@mui/icons-material/EventBusy';\nimport { IAllUser, IMemberList, IUser, IDmList, IBlockList, IAchievement } from '@typings/db';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useParams, Link, useHistory } from 'react-router-dom';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport config from '@utils/config';\nimport { Container, AdminBtn, MatchDataContainer, ButtonGroupsContainer } from './style';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  user: IAllUser;\n  setSelectedIndex: (e: any) => void;\n}\n\nconst ChannelProfile: VFC<Props> = ({ user, setSelectedIndex }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: dmList, mutate: mutateDmList } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: MymuteMmbers, mutate: mutateMymuteMmbers } = useSWR<IMemberList[]>(\n    `/api/channels/mutedMembers/${id}`,\n    fetcher,\n  );\n  const { data: blockList } = useSWR<IBlockList[]>(`/api/friend/blocklist`, fetcher);\n  const { data: channelUserList, mutate: mutateChannelUserList } = useSWR<IMemberList[]>(\n    `/api/channels/userList/${id}`,\n    fetcher,\n  );\n\n  const { data: winCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfWin/${user.userId}`,\n    fetcher,\n  );\n  const { data: loseCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfLose/${user.userId}`,\n    fetcher,\n  );\n\n  let isBlcok = false;\n\n  const history = useHistory();\n  let myAuth = -1;\n  let userAuth = -1;\n\n  channelUserList?.map((channeluser) => {\n    if (channeluser.userId === user.userId) {\n      userAuth = channeluser.auth;\n    } else if (channeluser.userId === myData?.userId) {\n      myAuth = channeluser.auth;\n    }\n  });\n\n  const onClickMuteBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/channels/muteUser/${id}/${user.userId}/20`, config)\n      .then((res) => {\n        setSelectedIndex(-1);\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickKickBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/channels/kickUser/${id}/${user.userId}`, config)\n      .then((res) => {\n        setSelectedIndex(-1);\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickBanBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/channels/banUser/${id}/${user.userId}`, config)\n      .then((res) => {\n        setSelectedIndex(-1);\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickMessageBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .get(`/api/dms/create/${user.userId}`, config)\n        .then((res) => {\n          mutateDmList().then(() => {\n            history.push(`/social/dm/${res.data}`);\n          });\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [user, mutateDmList, dmList],\n  );\n\n  const onClickAppointAdmin = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (userAuth === 0) {\n        axios\n          .get(`/api/channels/giveAdmin/${id}/${user.userId}`, config)\n          .then(() => {\n            setSelectedIndex(-1);\n            // mutateChannelUserList();\n          })\n          .catch((error) => {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          });\n      } else if (userAuth === 1) {\n        axios\n          .get(`/api/channels/removeAdmin/${id}/${user.userId}`, config)\n          .then(() => {\n            setSelectedIndex(-1);\n            // mutateChannelUserList();\n          })\n          .catch((error) => {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          });\n      }\n    },\n    [myAuth],\n  );\n  return (\n    <Container>\n      <div className=\"header\">\n        <div className=\"header-wrapper\">\n          <Avatar className=\"avatar\" src={user.profile} alt=\"Avatar\" />\n          <div className=\"user-text\">{user.username}</div>\n          <div className=\"admin-btn\">\n            {myAuth === 2 && userAuth !== 2 && (\n              <AdminBtn\n                onClick={onClickAppointAdmin}\n                btncolor={`${userAuth === 1 ? '#f33c36' : '#002BC'}`}\n                variant=\"text\"\n              >\n                admin\n              </AdminBtn>\n            )}\n          </div>\n        </div>\n      </div>\n      <MatchDataContainer>\n        <div className=\"count-wrapper\">\n          <EmojiEventsIcon className=\"match-icon\" />\n          <div className=\"match-text\">\n            <span>Win Count</span>\n            <span>{winCount?.number}</span>\n          </div>\n        </div>\n        <div className=\"count-wrapper\">\n          <EventBusyIcon className=\"match-icon\" />\n          <div className=\"match-text\">\n            <span>Lose Count</span>\n            <span>{loseCount?.number}</span>\n          </div>\n        </div>\n      </MatchDataContainer>\n      <ButtonGroupsContainer>\n        <div className=\"profile-message-wrapper\">\n          <Link to={`/users/${user.userId}`}>\n            <Button className=\"profile-btn\" variant=\"text\">\n              profile\n            </Button>\n          </Link>\n          {blockList?.map((blockedUser: IBlockList) => {\n            if (blockedUser.userId2 === user.userId) isBlcok = true;\n          })}\n          {!isBlcok && (\n            <Button className=\"message-btn\" onClick={onClickMessageBtn} variant=\"text\">\n              message\n            </Button>\n          )}\n        </div>\n        {userAuth === 0 && (myAuth === 1 || myAuth === 2) && (\n          <div>\n            <Button onClick={onClickMuteBtn} className=\"mute-kick-ban-btn\" variant=\"text\">\n              mute\n            </Button>\n            <Button onClick={onClickKickBtn} className=\"mute-kick-ban-btn\" variant=\"text\">\n              kick\n            </Button>\n            <Button onClick={onClickBanBtn} className=\"mute-kick-ban-btn\" variant=\"text\">\n              ban\n            </Button>\n          </div>\n        )}\n      </ButtonGroupsContainer>\n    </Container>\n  );\n};\n\nexport default ChannelProfile;\n","import React, { VFC, useState, useCallback, useContext } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { IAllUser, IMemberList, IUser, IChannelList } from '@typings/db';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport Button from '@mui/material/Button';\nimport ExitToAppIcon from '@mui/icons-material/ExitToApp';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport PersonAddAlt1RoundedIcon from '@mui/icons-material/PersonAddAlt1Rounded';\nimport { Container } from './style';\nimport ChannelProfile from '@components/ChannelProfile';\nimport VoiceOverOffIcon from '@mui/icons-material/VoiceOverOff';\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\nimport { ModalBackground, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\ninterface Props {\n  onClickSettingBtn: (e: any) => void;\n  onClickMembersToggle: (e: any) => void;\n  onClickChannelLeaveModal: (e: any) => void;\n  onClickChannelInviteModal: (e: any) => void;\n  onClickMember: (e: any, index: number) => void;\n  selectedIndex: number;\n  setSelectedIndex: (e: any) => void;\n  membersToggle: boolean;\n}\nconst ChannelMemberDrawBar: VFC<Props> = ({\n  onClickMembersToggle,\n  onClickSettingBtn,\n  onClickChannelLeaveModal,\n  onClickChannelInviteModal,\n  onClickMember,\n  selectedIndex,\n  setSelectedIndex,\n  membersToggle,\n}) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: memberList } = useSWR<IMemberList[]>(`/api/channels/userList/${id}`, fetcher);\n  const { data: alluser } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const { data: isOwner } = useSWR<boolean>(`/api/channels/checkOwner/${id}`, fetcher);\n  const { data: isAdmin } = useSWR<boolean>(`/api/channels/checkAdmin/${id}`, fetcher);\n\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  // const { data: MymuteMmbers, mutate: mutateMymuteMmbers } = useSWR<IMemberList[]>(\n  //   `/api/channels/mutedMembers/${id}`,\n  //   fetcher,\n  // );\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n  const history = useHistory();\n\n  if (memberList?.length === 0) {\n    history.push('/channels');\n  }\n  return (\n    <>\n      {membersToggle && <ModalBackground onClick={onClickMembersToggle}></ModalBackground>}\n      <Container className={'MemberDrawBar ' + (membersToggle ? 'visible' : 'hidden')}>\n        <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n          <div>\n            <ListItem className=\"List-header\">Owner</ListItem>\n            {memberList &&\n              memberList?.map((member) => {\n                if (member.auth === 2) {\n                  return alluser?.map((user, index) => {\n                    if (user.userId == member.userId) {\n                      isState = 0;\n                      if (onGameList && onGameList[user.userId]) isState = 2;\n                      if (isState === 0) {\n                        onlineList?.map((onlineUser) => {\n                          if (onlineUser.userId === user.userId) isState = 1;\n                        });\n                      }\n\n                      return (\n                        <div key={user.userId}>\n                          {selectedIndex === index && user.userId !== myData?.userId && (\n                            <ChannelProfile user={user} setSelectedIndex={setSelectedIndex} />\n                          )}\n                          <ListItem button onClick={(e) => onClickMember(e, index)}>\n                            <UserAvatar\n                              isstate={`${\n                                isState\n                                  ? isState === 1\n                                    ? '2px solid #1ed14b'\n                                    : '2px solid #FFD400'\n                                  : '2px solid #d63638'\n                              }`}\n                              src={user.profile}\n                              alt=\"Avatar\"\n                            />\n                            <ListItemText className=\"member-text\" primary={user.username} />\n                            <RecordVoiceOverIcon className=\"unmute-icon\" />\n                          </ListItem>\n                        </div>\n                      );\n                    }\n                  });\n                }\n              })}\n            <ListItem className=\"List-header\">Admin</ListItem>\n            {memberList &&\n              memberList?.map((member) => {\n                if (member.auth === 1) {\n                  return alluser?.map((user, index) => {\n                    if (user.userId == member.userId) {\n                      isState = 0;\n                      if (onGameList && onGameList[user.userId]) isState = 2;\n                      if (isState === 0) {\n                        onlineList?.map((onlineUser) => {\n                          if (onlineUser.userId === user.userId) isState = 1;\n                        });\n                      }\n                      return (\n                        <div key={user.userId}>\n                          {selectedIndex === index && user.userId !== myData?.userId && (\n                            <ChannelProfile user={user} setSelectedIndex={setSelectedIndex} />\n                          )}\n                          <ListItem button onClick={(e) => onClickMember(e, index)}>\n                            <UserAvatar\n                              isstate={`${\n                                isState\n                                  ? isState === 1\n                                    ? '2px solid #1ed14b'\n                                    : '2px solid #FFD400'\n                                  : '2px solid #d63638'\n                              }`}\n                              src={user.profile}\n                              alt=\"Avatar\"\n                            />\n                            <ListItemText className=\"member-text\" primary={user.username} />\n                            <RecordVoiceOverIcon className=\"unmute-icon\" />\n                          </ListItem>\n                        </div>\n                      );\n                    }\n                  });\n                }\n              })}\n            <ListItem className=\"List-header\">Users</ListItem>\n            {memberList &&\n              memberList?.map((member) => {\n                if (member.auth === 0) {\n                  return alluser?.map((user, index) => {\n                    if (user.userId == member.userId) {\n                      isState = 0;\n                      if (onGameList && onGameList[user.userId]) isState = 2;\n                      if (isState === 0) {\n                        onlineList?.map((onlineUser) => {\n                          if (onlineUser.userId === user.userId) isState = 1;\n                        });\n                      }\n                      // let isMute = false;\n                      // MymuteMmbers?.map((muteMember: IMemberList) => {\n                      //   if (muteMember.userId === user.userId) {\n                      //     if (muteMember.mute) isMute = true;\n                      //   }\n                      // });\n                      return (\n                        <div key={user.userId}>\n                          {selectedIndex === index && user.userId !== myData?.userId && (\n                            <ChannelProfile user={user} setSelectedIndex={setSelectedIndex} />\n                          )}\n                          <ListItem button onClick={(e) => onClickMember(e, index)}>\n                            <UserAvatar\n                              isstate={`${\n                                isState\n                                  ? isState === 1\n                                    ? '2px solid #1ed14b'\n                                    : '2px solid #FFD400'\n                                  : '2px solid #d63638'\n                              }`}\n                              src={user.profile}\n                              alt=\"Avatar\"\n                            />\n                            <ListItemText className=\"member-text\" primary={user.username} />\n                            {member.mute ? (\n                              <VoiceOverOffIcon className=\"mute-icon\" />\n                            ) : (\n                              <RecordVoiceOverIcon className=\"unmute-icon\" />\n                            )}\n                          </ListItem>\n                        </div>\n                      );\n                    }\n                  });\n                }\n              })}\n            ;\n          </div>\n        </Scrollbars>\n        {isOwner && (\n          <Button className=\"channel-room-btn\" variant=\"contained\" onClick={onClickSettingBtn}>\n            SETTING &nbsp;\n            <SettingsIcon />\n          </Button>\n        )}\n        {isAdmin && (\n          <Button\n            className=\"channel-room-btn\"\n            variant=\"contained\"\n            onClick={onClickChannelInviteModal}\n          >\n            INVITE &nbsp;\n            <PersonAddAlt1RoundedIcon />\n          </Button>\n        )}\n        {isOwner === false && (\n          <Button\n            className=\"channel-room-btn\"\n            variant=\"contained\"\n            onClick={onClickChannelLeaveModal}\n          >\n            LEAVE &nbsp;\n            <ExitToAppIcon />\n          </Button>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default ChannelMemberDrawBar;\n","import styled from '@emotion/styled';\n\nexport const Toast = styled.div`\n\t.hidden {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\ttop: 0;\n\t\tbackground-color: #000000;\n\t\tz-Index: 501;\n\t\tflex-direction: column;\n\t\tpadding: 0 25px;\n\t\toverflowY: auto;\n\t\ttransform: translateY(100%);\n\t\ttransition: all ease-in 0.2s;\n\t\topacity: 0;\n\n\t}\n\n\t.visible {\n\t\tposition: fixed;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\ttop: 0;\n\t\tbackground-color: #000000;\n\t\tz-Index: 501;\n\t\tflex-direction: column;\n\t\tpadding: 0 25px;\n\t\toverflowY: auto;\n\t\ttransform: translateY(0%);\n\t\ttransition: all ease-out 0.2s;\n\t}\n\n\t& .setting-modal-header {\n\t\tdisplay: flex;\n\t\tcolor: white;\n\t\tjustify-content: space-between\n\t}\n\n\t& .close-icon {\n\t\tcolor: white;\n\t}\n\n\t& .setting-modal-body {\n\t\tbackground-color: #1e1e1e;\n\t\tborder-radius: 4px;\n\t}\n\n\t& .setting-modal-delete-wrapper {\n\t\twidth: 100%;\n\t\theight: 120px;\n\t\tbackground-color: #1e1e1e;\n\t\tcolor: #e24c34;\n\t\tborder: 1px solid #a6625f;\n\t\tborder-radius: 4px;\n\t\tpadding: 0 15px;\n\t}\n\n\t& .delete-btn {\n\t\tbackground-color: red;\n\t\tfont-weight: 600;\n\t}\n\n\n`;\n","import styled from '@emotion/styled';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nexport const InputCheck = styled.div<{ textColor: string }>`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tcolor: ${(props) => props.textColor};\n\tfont-size: 12px;\n\tmargin: 0 !important;\n\n\t& .name-length {\n\t\twhite-space: nowrap;\n\t}\n`;\n\nexport const NameErrorText = styled.span<{ visible: string }>`\n\tmargin-left: 8px;\n\tcolor: #dd2c00;\n\tvisibility: ${(props) => props.visible};\n`;\n\n\n\nexport const ChannelFormContainer = styled(FormControl)`\n\twidth: 100%;\n\n\t& .input {\n\t\tcolor: white;\n\t}\n\n\t& .MuiInput-root{\n\t\tcolor: white;\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:before {\n\t\tborder-bottom: 1px solid rgb(255, 255, 255, 0.6);\n\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:hover:not(.Mui-disabled):before {\n\t\t\tborder-bottom: 1px solid white;\n\t}\n\n`;\n\nexport const ChannelCreateBtn = styled(Button)`\n\twidth: 91px;\n\theight: 36px;\n\tmargin 5px 0 12px 8px;\n\tfont-weight:600;\n`;\n\n\n\nexport const ErrorText = styled.div`\n\tcolor: #dd2c00;\n\tfont-weight: 600;\n\tfont-size: 12px;\n`;\n\n","import React, { VFC, useState, useCallback, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Visibility from '@mui/icons-material/Visibility';\nimport {\n  InputCheck,\n  ChannelFormContainer,\n  ChannelCreateBtn,\n  NameErrorText,\n  ErrorText,\n} from './style';\n\ninterface Props {\n  onSubmitChannelCreate: () => void;\n  setVisibility: (e: any) => void;\n  setName: (e: any) => void;\n  name: string;\n  value: string;\n  setPasswordValues: any;\n  createError: number;\n  setCreateError: (e: any) => void;\n}\n\nconst ChannelForm: VFC<Props> = ({\n  onSubmitChannelCreate,\n  setVisibility,\n  setName,\n  name,\n  value,\n  setPasswordValues,\n  createError,\n  setCreateError,\n}) => {\n  const handleMouseDownPassword = useCallback((event: any) => {\n    event.preventDefault();\n  }, []);\n  const [channelFormName, setChannelFormName] = useState('');\n  const [channelFormVisibility, setChannelFormVisibility] = useState('0');\n  const [channelFormPasswordValues, setChannelFormPasswordValues] = useState({\n    password: '',\n    showPassword: false,\n  });\n  const [channelNameError, setChannelNameError] = useState(0);\n  const [channelPasswordError, setChannelPasswordError] = useState(0);\n\n  useEffect(() => {\n    if (name) {\n      onSubmitChannelCreate();\n      setChannelFormName('');\n      setChannelFormVisibility('0');\n      setChannelFormPasswordValues({ password: '', showPassword: false });\n    }\n  }, [name]);\n\n  const onChannelCreateFromBtn = useCallback(() => {\n    if (channelFormName.length > 10 || channelFormName.length < 1) {\n      setChannelNameError(1);\n      return;\n    }\n    if (\n      channelFormVisibility == '1' &&\n      (channelFormPasswordValues.password.length > 20 ||\n        channelFormPasswordValues.password.length < 1)\n    ) {\n      setChannelPasswordError(1);\n      return;\n    }\n    setName(channelFormName);\n    setVisibility(channelFormVisibility);\n    setPasswordValues(channelFormPasswordValues);\n  }, [channelFormName, channelFormVisibility, channelFormPasswordValues]);\n\n  const onChangeFormName = useCallback(\n    (e) => {\n      setChannelFormName(e.target.value);\n      if (channelNameError) setChannelNameError(0);\n      if (createError) setCreateError(0);\n    },\n    [createError, channelNameError],\n  );\n\n  const onChangeFormVisibility = useCallback((e) => {\n    e.preventDefault();\n    setChannelFormVisibility(e.target.value);\n    setChannelFormPasswordValues({ password: '', showPassword: false });\n    setCreateError(0);\n  }, []);\n\n  const handleClickShowPassword = useCallback(() => {\n    setChannelFormPasswordValues({\n      ...channelFormPasswordValues,\n      showPassword: !channelFormPasswordValues.showPassword,\n    });\n  }, [channelFormPasswordValues, setChannelFormPasswordValues]);\n  const handleChange = useCallback(\n    (prop: any) => (event: any) => {\n      setChannelPasswordError(0);\n      setChannelFormPasswordValues({ ...channelFormPasswordValues, [prop]: event.target.value });\n    },\n    [channelFormPasswordValues, setChannelFormPasswordValues],\n  );\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& > :not(style)': { m: 1 },\n        width: 'calc(100% - 15px)',\n        padding: '5px 10px',\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <ChannelFormContainer variant=\"standard\">\n        <InputLabel className=\"input\" htmlFor=\"component-simple\">\n          Name\n        </InputLabel>\n        <Input\n          className=\"input2\"\n          id=\"component-simple\"\n          autoComplete=\"off\"\n          value={channelFormName}\n          onChange={onChangeFormName}\n        />\n      </ChannelFormContainer>\n      <InputCheck textColor={channelFormName.length > 10 ? '#dd2c00' : 'hsla(0,0%,100%,.7)'}>\n        <NameErrorText visible={channelNameError == 0 ? 'hidden' : 'visible'}>\n          Name length must be between 1 and 10\n        </NameErrorText>\n        <span className=\"name-length\"> {channelFormName.length} / 10</span>\n      </InputCheck>\n      <ChannelFormContainer variant=\"standard\">\n        <InputLabel className=\"input\" id=\"demo-simple-select-standard-label\">\n          Visibility\n        </InputLabel>\n        <Select\n          className=\"input\"\n          labelId=\"demo-simple-select-standard-label\"\n          id=\"demo-simple-select-standard\"\n          value={channelFormVisibility}\n          onChange={onChangeFormVisibility}\n          label=\"Visibility\"\n        >\n          <MenuItem value={0}>Public</MenuItem>\n          <MenuItem value={1}>Protected</MenuItem>\n          <MenuItem value={2}>Private</MenuItem>\n        </Select>\n      </ChannelFormContainer>\n      {parseInt(channelFormVisibility) === 1 ? (\n        <ChannelFormContainer variant=\"standard\">\n          <InputLabel className=\"input\" htmlFor=\"standard-adornment-password\">\n            Password\n          </InputLabel>\n          <Input\n            id=\"standard-adornment-password\"\n            autoComplete=\"off\"\n            type={channelFormPasswordValues.showPassword ? 'text' : 'password'}\n            value={channelFormPasswordValues.password}\n            onChange={handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  className=\"input\"\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                >\n                  {channelFormPasswordValues.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </ChannelFormContainer>\n      ) : null}\n      {channelPasswordError ? <ErrorText>Password length must be between 1 and 20</ErrorText> : ''}\n      <ChannelCreateBtn variant=\"contained\" onClick={onChannelCreateFromBtn}>\n        {value}\n      </ChannelCreateBtn>\n      {createError ? (\n        createError === 1 ? (\n          <ErrorText>\n            Failed either the channel already exists or there is a problem with the server\n          </ErrorText>\n        ) : (\n          <ErrorText>Failed to create channel</ErrorText>\n        )\n      ) : (\n        ''\n      )}\n    </Box>\n  );\n};\n\nexport default ChannelForm;\n","import React, { VFC, useCallback, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport { useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { IMemberList, IChannelList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport { Toast } from './style';\nimport BasicModal from '@components/BasicModal';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport ChannelForm from '@components/ChannelForm';\nimport config from '@utils/config';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  settingToggle: boolean;\n  onClickSettingBtn: (e: any) => void;\n}\n\nconst ChannelRoomSettingMoDal: VFC<Props> = ({ settingToggle, onClickSettingBtn }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myChannelList, mutate: channelListMutate } = useSWR<IChannelList[]>(\n    '/api/channels/myChannelList',\n    fetcher,\n  );\n  const { data: allChannelList, mutate: MutateAllChannelList } = useSWR<IChannelList[]>(\n    '/api/channels/allChannelList',\n    fetcher,\n  );\n\n  const { data: memberList, mutate: muatememberList } = useSWR<IMemberList[]>(\n    `/api/channels/userList/${id}`,\n    fetcher,\n  );\n  const history = useHistory();\n\n  const [isChannelDeleteModal, setIsChannelDeleteModal] = useState(false);\n  const [name, setName] = useState('');\n  const [visibility, setVisibility] = useState('0');\n  const [createError, setCreateError] = useState(0);\n  const [PasswordValues, setPasswordValues] = useState({\n    password: '',\n    showPassword: false,\n  });\n\n  const onClickChannelDeleteModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsChannelDeleteModal((prev) => !prev);\n    },\n    [isChannelDeleteModal],\n  );\n\n  const onSubmitChannelCreate = useCallback(() => {\n    if (name) {\n      axios\n        .get(`/api/channels/updateChannelName/${id}/${name}`, config)\n        .then(() => {\n          toast.success('Successfully renamed a channel', {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          MutateAllChannelList();\n          channelListMutate();\n          setName('');\n        })\n        .catch((error) => {\n          setCreateError(1);\n          setName('');\n          setVisibility('0');\n          setPasswordValues({\n            password: '',\n            showPassword: false,\n          });\n        });\n    }\n    if (visibility !== '') {\n      axios\n        .get(`/api/channels/updateChannelType/${id}/${visibility}`, config)\n        .then(() => {\n          if (parseInt(visibility) === 1) {\n            axios\n              .post(\n                `/api/channels/updateChannelPassword/${id}`,\n                {\n                  password: PasswordValues.password,\n                },\n                config,\n              )\n              .then(() => {\n                toast.success('Successfully changed channel password', {\n                  autoClose: 4000,\n                  position: toast.POSITION.TOP_RIGHT,\n                  hideProgressBar: false,\n                  closeOnClick: true,\n                  pauseOnHover: true,\n                  theme: 'colored',\n                });\n                MutateAllChannelList();\n                channelListMutate();\n                setName('');\n                setVisibility('0');\n                setPasswordValues({\n                  password: '',\n                  showPassword: false,\n                });\n              })\n              .catch(() => {\n                setCreateError(1);\n              });\n          } else {\n            MutateAllChannelList();\n            channelListMutate();\n            setName('');\n            setVisibility('0');\n            setPasswordValues({\n              password: '',\n              showPassword: false,\n            });\n          }\n        })\n        .catch(() => {\n          setCreateError(1);\n        });\n    }\n  }, [name, visibility, PasswordValues]);\n\n  const DeleteClickChannelBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .get(`/api/channels/deleteChannel/${id}`, config)\n        .then(() => {\n          history.push('/channels');\n          channelListMutate();\n          MutateAllChannelList();\n          toast.success('Successfully deleted the channel', {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [id],\n  );\n\n  return (\n    <>\n      <Toast>\n        {isChannelDeleteModal ? (\n          <BasicModal\n            NoBtn={onClickChannelDeleteModal}\n            YesBtn={DeleteClickChannelBtn}\n            headerContent=\"Delete Channel\"\n            content=\"This will remove the channel as well as all of its messages\"\n          />\n        ) : (\n          ''\n        )}\n        <div className={settingToggle ? 'visible' : 'hidden'}>\n          <div className=\"setting-modal-header\">\n            <h1>\n              Settings of{' '}\n              {allChannelList?.map((channel: IChannelList) => {\n                if (channel.id === parseInt(id)) {\n                  return channel.name;\n                }\n              })}\n            </h1>\n            <IconButton className=\"close-icon\" aria-label=\"close\" onClick={onClickSettingBtn}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n          <div className=\"setting-modal-body\">\n            <ChannelForm\n              value=\"EDIT\"\n              onSubmitChannelCreate={onSubmitChannelCreate}\n              name={name}\n              setVisibility={setVisibility}\n              setName={setName}\n              setPasswordValues={setPasswordValues}\n              createError={createError}\n              setCreateError={setCreateError}\n            />\n          </div>\n          <div className=\"setting-modal-delete-wrapper\">\n            <h3>Danger Zone</h3>\n            <Button\n              className=\"delete-btn\"\n              variant=\"contained\"\n              startIcon={<DeleteIcon />}\n              onClick={onClickChannelDeleteModal}\n            >\n              DELETE CHANNEL\n            </Button>\n          </div>\n        </div>\n      </Toast>\n    </>\n  );\n};\n\nexport default ChannelRoomSettingMoDal;\n","import styled from '@emotion/styled';\n\nexport const ChannelInviteModalBackground = styled.div`\n\tcolor: white;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 2000;\n\tbackground-color: rgba(30; 30, 030, 0.5);\n`;\n\nexport const ChannelInviteModalContainer = styled.div`\n\tposition: fixed;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 500px;\n\theight: 180px;\n\tbackground-color: #1e1e1e;\n\tcolor: #979797;\n\topacity: 1;\n\tborder: 1px solid #1e1e1e;\n\tborder-radius: 3px;\n\tpadding: 10px 20px 10px 20px;\n\tz-index: 3000;\n\ttransform: translate(-50%, -50%);\n\tbox-shadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .invite-Modal-wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\n\t& .invite-Modal-wrapper h3 {\n\t\tcolor: red;\n\t\tmargin-top: 0;\n\t}\n\n\t& .invite-Modal-header {\n\t\tdisplay: flex;\n\t\tcolor: white;\n\t\tjustify-content: space-between;\n\t}\n\n\t& .invite-Modal-body {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\tjustify-content: space-between;\n\t}\n\n\t& .color-white {\n\t\tcolor: white;\n\t}\n\n\t& .invite-Modal-input {\n\t\twidth: calc(100% - 130px);\n\t\tcolor: white;\n\t}\n\n\t& .invite-Modal-button {\n\t\twidth: 110px;\n\t\theight: 42px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t\tmargin-top: 10px;\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root {\n\t\tcolor: white;\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:before {\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 0.6);\n\t}\n\n\t& .css-1480iag-MuiInputBase-root-MuiInput-root:hover:not(.Mui-disabled):before {\n\t\tborder-bottom: 1px solid rgba(255, 255, 255, 1);\n\t\t\n\t}\n\n`;","import React, { VFC, useCallback, useState } from 'react';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport TextField from '@mui/material/TextField';\nimport PersonRoundedIcon from '@mui/icons-material/PersonRounded';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { IMemberList, IAllUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport config from '@utils/config';\nimport { ChannelInviteModalBackground, ChannelInviteModalContainer } from './style';\nimport { toast } from 'react-toastify';\ninterface Props {\n  onClickModalClose: (e: any) => void;\n  setChannelInviteModal: (e: any) => void;\n}\n\nconst ChannelInviteModal: VFC<Props> = ({ setChannelInviteModal, onClickModalClose }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: memberList, mutate: memberListMutate } = useSWR<IMemberList[]>(\n    `/api/channels/userList/${id}`,\n    fetcher,\n  );\n  const [inviteValue, setInviteValue] = useState('');\n  const [inviteError, setInviteError] = useState(false);\n  const onClickInviteBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      let userId;\n      alluser?.map((user) => {\n        if (user.username === inviteValue) userId = user.userId;\n      });\n      if (!userId) {\n        setInviteError(true);\n        return;\n      }\n      axios\n        .get(`/api/channels/invite/${id}/${userId}`, config)\n        .then(() => {\n          memberListMutate();\n          setInviteValue('');\n          setChannelInviteModal(false);\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [inviteValue, setInviteValue],\n  );\n  const onChangeInviteInput = useCallback((e) => {\n    e.preventDefault();\n    setInviteError(false);\n    setInviteValue(e.target.value);\n  }, []);\n  return (\n    <>\n      <ChannelInviteModalBackground onClick={onClickModalClose}></ChannelInviteModalBackground>\n      <ChannelInviteModalContainer>\n        <div className=\"invite-Modal-wrapper\">\n          <div className=\"invite-Modal-header\">\n            <h2>Invite people to channel</h2>\n            <IconButton className=\"color-white\" aria-label=\"close\" onClick={onClickModalClose}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n          <div className=\"invite-Modal-body\">\n            <TextField\n              className=\"invite-Modal-input\"\n              value={inviteValue}\n              onChange={onChangeInviteInput}\n              id=\"input-with-icon-textfield\"\n              label=\"user\"\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment className=\"color-white\" position=\"start\">\n                    <PersonRoundedIcon />\n                  </InputAdornment>\n                ),\n              }}\n              variant=\"standard\"\n            />\n            <Button className=\"invite-Modal-button\" variant=\"contained\" onClick={onClickInviteBtn}>\n              INVITE\n            </Button>\n          </div>\n          {inviteError && <h3>invited the wrong user</h3>}\n        </div>\n      </ChannelInviteModalContainer>\n    </>\n  );\n};\n\nexport default ChannelInviteModal;\n","import styled from '@emotion/styled';\n\nexport const ChannelRoomContainer = styled.div`\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n\toverflow: hidden;\n`;","import ChatBox from '@components/ChatBox';\nimport { IChannelChatList, IChannelList, IMemberList, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState, VFC } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport { useParams, useHistory } from 'react-router-dom';\nimport getSocket from '@utils/useSocket';\nimport ChannelChatHeader from '@components/ChannelChatHeader';\nimport ChannelChatList from '@components/ChannelChatList';\nimport ChannelMemberDrawBar from '@components/ChannelMemberDrawBar';\nimport ChannelRoomSettingModal from '@components/ChannelRoomSettingModal';\nimport BasicModal from '@components/BasicModal';\nimport ChannelInviteModal from '@components/ChannelInviteModal';\nimport config from '@utils/config';\nimport { ChannelRoomContainer } from './style';\nimport { toast } from 'react-toastify';\nimport ChannelLeftDrawBar from '@components/ChannelLeftDrawBar';\nimport { useMediaQuery } from 'react-responsive';\n\nconst ChannelRoom = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: ChannelMembers, mutate: mutateChannelMembers } = useSWR<IMemberList[]>(\n    `/api/channels/userList/${id}`,\n    fetcher,\n  );\n  const { data: allChannelList, mutate: mutateAllChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/allChannelList`,\n    fetcher,\n  );\n  const { data: myChannelList, mutate: mutateMyChannelList } = useSWR<IChannelList[]>(\n    `/api/channels/myChannelList`,\n    fetcher,\n  );\n  const { data: myMute, mutate: mutateMyMute } = useSWR<boolean>(\n    `/api/channels/checkMyMute/${id}`,\n    fetcher,\n  );\n\n  // const { data: MymuteMmbers, mutate: mutateMymuteMmbers } = useSWR<IMemberList[]>(\n  //   `/api/channels/mutedMembers/${id}`,\n  //   fetcher,\n  // );\n\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IChannelChatList[]>(\n    (index) => `/api/channels/20MessageList/${id}/${index * 19}`,\n    fetcher,\n  );\n\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd =\n    isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const socket = getSocket();\n  const history = useHistory();\n  const [chat, setChat] = useState('');\n  const [settingToggle, setSettingToggle] = useState(false);\n  const [membersToggle, setMembersToggle] = useState(false);\n  const [channelLeaveModal, setChannelLeaveModal] = useState(false);\n  const [channelInviteModal, setChannelInviteModal] = useState(false);\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const [messageRevalidate, setMessageRevalidate] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 700 });\n\n  const onClickMember = useCallback(\n    (e, index) => {\n      e.preventDefault();\n      if (selectedIndex === index) {\n        setSelectedIndex(-1);\n      } else {\n        setSelectedIndex(index);\n      }\n    },\n    [selectedIndex],\n  );\n\n  const onClickChannelInviteModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setChannelInviteModal((prev) => !prev);\n    },\n    [channelInviteModal],\n  );\n\n  const onClickMembersToggle = useCallback(\n    (e) => {\n      e.preventDefault();\n      setSelectedIndex(-1);\n      setMembersToggle((prev) => !prev);\n    },\n    [membersToggle, setMembersToggle],\n  );\n\n  const onClickSettingBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      setSettingToggle((prev) => !prev);\n    },\n    [settingToggle, setSettingToggle],\n  );\n\n  const onSubmitChat = useCallback(() => {\n    if (chat?.trim() && chatData) {\n      mutateChat((prevChatData) => {\n        prevChatData?.[0].unshift({\n          userId: myData?.userId,\n          message: chat,\n          updatedAt: new Date(),\n        });\n        return prevChatData;\n      }, false);\n      axios\n        .post(\n          `/api/channels/send/${id}`,\n          {\n            msg: chat,\n          },\n          config,\n        )\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          mutateChat();\n        });\n      setChat('');\n      setTimeout(() => {\n        scrollbarRef.current?.scrollToBottom();\n      }, 50);\n    }\n  }, [chat]);\n  const onClickChannelLeaveModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setChannelLeaveModal((prev) => !prev);\n    },\n    [channelLeaveModal, setChannelLeaveModal],\n  );\n  const onClickChannelLeaveMdoalYes = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .get(`/api/channels/getout/${id}`, config)\n        .then(() => {\n          mutateAllChannelList();\n          mutateMyChannelList();\n          setChannelLeaveModal(false);\n          history.push('/channels');\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [channelLeaveModal],\n  );\n\n  const onMessage = useCallback(\n    (data) => {\n      if (data.userId != myData?.userId) {\n        mutateChat((prevchatData) => {\n          prevchatData?.[0].unshift({\n            userId: data.userId,\n            message: data.msg,\n            updatedAt: data.createdAt,\n          });\n\n          return prevchatData;\n        }, false).then(() => {\n          setMessageRevalidate((prev) => !prev);\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 50);\n            }\n          }\n        });\n      }\n    },\n    [myData, scrollbarRef],\n  );\n\n  useEffect(() => {\n    if (myChannelList) {\n      let isUnauthorized = true;\n      for (let channel of myChannelList) {\n        if (channel.id === parseInt(id)) {\n          isUnauthorized = false;\n          break;\n        }\n      }\n      if (isUnauthorized) {\n        history.push('/home');\n      }\n    }\n  }, [myChannelList]);\n\n  useEffect(() => {\n    socket?.on('join', mutateChannelMembers);\n    return () => {\n      socket?.off('join');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('leave', mutateChannelMembers);\n    return () => {\n      socket?.off('leave');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('channelType', () => {\n      mutateMyChannelList();\n    });\n    return () => {\n      socket?.off('channelType');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('channelDelete', () => {\n      mutateMyChannelList();\n      history.push('/channels');\n    });\n    return () => {\n      socket?.off('channelDelete');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('admin', mutateChannelMembers);\n    return () => {\n      socket?.off('admin');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('ban', mutateChannelMembers);\n    return () => {\n      socket?.off('ban');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('mute', () => {\n      mutateChannelMembers();\n      mutateMyMute();\n    });\n    return () => {\n      socket?.off('mute');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('ch', onMessage);\n    return () => {\n      socket?.off('ch', onMessage);\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      scrollbarRef.current?.scrollToBottom();\n    }, 50);\n  }, [socket]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      scrollbarRef.current?.scrollToBottom();\n    }\n  }, [chatData]);\n\n  return (\n    <>\n      {isMobile ? null : <ChannelLeftDrawBar />}\n      <>\n        <ChannelRoomSettingModal\n          settingToggle={settingToggle}\n          onClickSettingBtn={onClickSettingBtn}\n        />\n        <ChannelRoomContainer>\n          <ChannelChatHeader\n            membersToggle={membersToggle}\n            onClickMembersToggle={onClickMembersToggle}\n          />\n          <ChannelChatList\n            chatData={chatData}\n            scrollbarRef={scrollbarRef}\n            setSize={setSize}\n            isReachingEnd={isReachingEnd}\n          />\n          {!myMute && <ChatBox chat={chat} setChat={setChat} onSubmitChat={onSubmitChat} />}\n        </ChannelRoomContainer>\n        <ChannelMemberDrawBar\n          onClickMembersToggle={onClickMembersToggle}\n          onClickSettingBtn={onClickSettingBtn}\n          onClickChannelLeaveModal={onClickChannelLeaveModal}\n          onClickChannelInviteModal={onClickChannelInviteModal}\n          onClickMember={onClickMember}\n          selectedIndex={selectedIndex}\n          membersToggle={membersToggle}\n          setSelectedIndex={setSelectedIndex}\n        />\n        {channelInviteModal && (\n          <ChannelInviteModal\n            onClickModalClose={onClickChannelInviteModal}\n            setChannelInviteModal={setChannelInviteModal}\n          />\n        )}\n        {channelLeaveModal && (\n          <BasicModal\n            headerContent=\"Leave Channel\"\n            content={`Are you really leaving this channel?`}\n            NoBtn={onClickChannelLeaveModal}\n            YesBtn={onClickChannelLeaveMdoalYes}\n          />\n        )}\n      </>\n    </>\n  );\n};\n\nexport default ChannelRoom;\n","import styled from '@emotion/styled';\n\nexport const ChannelCreateContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\n\t& .wrapper {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #121212;\n\t}\n\n\t& .channel-form-wrapper {\n\t\tbackground-color: #1e1e1e;\n\t\tmargin: 15px 15px 15px;\n\t\twidth: calc(100% - 30px);\n\t\tborder-radius: 4px;\n\t}\n\n`;\n","import React, { useState, useCallback, VFC, useEffect } from 'react';\nimport ChannelHeader from '@components/ChannelHeader';\nimport ChannelForm from '@components/ChannelForm';\nimport { ChannelCreateContainer } from './style';\nimport ChannelLeftDrawBar from '@components/ChannelLeftDrawBar';\nimport { useMediaQuery } from 'react-responsive';\n\ninterface Props {\n  onSubmitChannelCreate: () => void;\n  setVisibility: (e: any) => void;\n  setName: (e: any) => void;\n  name: string;\n  setPasswordValues: any;\n  createError: number;\n  setCreateError: (e: any) => void;\n}\n\nconst ChannelCreate: VFC<Props> = ({\n  onSubmitChannelCreate,\n  setVisibility,\n  setName,\n  setPasswordValues,\n  name,\n  createError,\n  setCreateError,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 650 });\n  return (\n    <>\n      {isMobile ? null : <ChannelLeftDrawBar />}\n\n      <ChannelCreateContainer>\n        <ChannelHeader content={'Create a Channel'} />\n        <div className=\"wrapper\">\n          <div className=\"channel-form-wrapper\">\n            <ChannelForm\n              value=\"CREATE\"\n              onSubmitChannelCreate={onSubmitChannelCreate}\n              name={name}\n              setVisibility={setVisibility}\n              setName={setName}\n              setPasswordValues={setPasswordValues}\n              createError={createError}\n              setCreateError={setCreateError}\n            />\n          </div>\n        </div>\n      </ChannelCreateContainer>\n    </>\n  );\n};\n\nexport default ChannelCreate;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Container } from './style';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport Grid from '@mui/material/Grid';\nimport useSWR from 'swr';\nimport { IChannelList, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport config from '@utils/config';\nimport { toast } from 'react-toastify';\nimport loadable from '@loadable/component';\n\nimport ChannelDiscover from '@pages/ChannelDiscover';\nimport ChannelRoom from '@pages/ChannelRoom';\nimport ChannelCreate from '@pages/ChannelCreate';\n// const ChannelDiscover = loadable(() => import('@pages/ChannelDiscover'));\n// const ChannelRoom = loadable(() => import('@pages/ChannelRoom'));\n// const ChannelCreate = loadable(() => import('@pages/ChannelCreate'));\n\nconst Channel = () => {\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: mychannelList, mutate: mutateChannelList } = useSWR<IChannelList[]>(\n    '/api/channels/myChannelList',\n    fetcher,\n  );\n\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [visibility, setVisibility] = useState('0');\n  const [createError, setCreateError] = useState(0);\n  const [PasswordValues, setPasswordValues] = useState({\n    password: '',\n    showPassword: false,\n  });\n\n  const onSubmitChannelCreate = useCallback(() => {\n    axios\n      .post(\n        `/api/channels/create/${name}/${visibility}`,\n        {\n          password: PasswordValues.password,\n        },\n        config,\n      )\n      .then((response) => {\n        setName('');\n        setVisibility('0');\n        setPasswordValues({\n          password: '',\n          showPassword: false,\n        });\n        toast.success('Successfully created a channel', {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n        mutateChannelList().then(() => {\n          if (mychannelList) {\n            history.push(`/channels/${response.data}`);\n          }\n        });\n      })\n      .catch((error) => {\n        setCreateError(1);\n        setName('');\n        setVisibility('0');\n        setPasswordValues({\n          password: '',\n          showPassword: false,\n        });\n      });\n  }, [name, visibility, mychannelList, PasswordValues]);\n\n  return (\n    <Container>\n      <Switch>\n        <Route exact path=\"/channels\" component={ChannelDiscover} />\n        <Route\n          exact\n          path=\"/channels/create\"\n          render={() => (\n            <ChannelCreate\n              onSubmitChannelCreate={onSubmitChannelCreate}\n              name={name}\n              setVisibility={setVisibility}\n              setName={setName}\n              setPasswordValues={setPasswordValues}\n              createError={createError}\n              setCreateError={setCreateError}\n            />\n          )}\n        />\n        <Route exact path=\"/channels/:id\" component={ChannelRoom} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Channel;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\theight: 100vh;\n\tdisplay: flex;\n\twidth: 100%;\n\tborder-left: 1px solid #4f4f4f;\n\tmargin: 0;\n\tpadding: 0;\n\n`;","import styled from '@emotion/styled';\nimport List from '@mui/material/List';\nimport Avatar from '@mui/material/Avatar';\n\nexport const FriendListContainer = styled(List)`\n\twidth: 100%:\n\theight: 100%;\n\tbackground: #1e1e1e;\n\n\t& .friend-list-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .text {\n\t\tmargin-left: 12px;\n\t\tcolor: white;\n\t}\n\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useContext } from 'react';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Avatar from '@mui/material/Avatar';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { IAllUser, IFriendList } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { Link } from 'react-router-dom';\nimport { FriendListContainer, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\nconst FriendsList = () => {\n  const { data: users } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const { data: friends } = useSWR<IFriendList[]>(`/api/friend/friendlist`, fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n\n  return (\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n      <FriendListContainer aria-label=\"mailbox folders\">\n        {friends?.map((friend: any) => {\n          return users?.map((user) => {\n            if (user?.userId === friend?.userId2) {\n              isState = 0;\n              if (onGameList && onGameList[user.userId]) isState = 2;\n              if (isState === 0) {\n                onlineList?.map((onlineUser) => {\n                  if (onlineUser.userId === user.userId) isState = 1;\n                });\n              }\n              return (\n                <Link to={`/users/${user.userId}`} key={user.userId}>\n                  <ListItem className=\"friend-list-wrapper\" button>\n                    <UserAvatar\n                      isstate={`${\n                        isState\n                          ? isState === 1\n                            ? '2px solid #1ed14b'\n                            : '2px solid #FFD400'\n                          : '2px solid #d63638'\n                      }`}\n                      src={user.profile}\n                      alt=\"Avatar\"\n                    />\n                    <ListItemText className=\"text\" primary={user.username} />\n                  </ListItem>\n                </Link>\n              );\n            }\n          });\n        })}\n      </FriendListContainer>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsList;\n","import styled from '@emotion/styled';\nimport List from '@mui/material/List';\nimport Avatar from '@mui/material/Avatar';\n\nexport const FriendsOnlineListContainer = styled(List)`\n\twidth: 100%:\n\theight: 100%;\n\tbackground: #1e1e1e;\n\n\t& .friend-list-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .text {\n\t\tmargin-left: 12px;\n\t\tcolor: white;\n\t}\n\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useContext } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { IAllUser, IFriendList } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { Link } from 'react-router-dom';\nimport { FriendsOnlineListContainer, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\nconst FriendsOnlineList = () => {\n  const { data: users } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const { data: friends } = useSWR<IFriendList[]>(`/api/friend/friendlist`, fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n\n  return (\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n      <FriendsOnlineListContainer aria-label=\"mailbox folders\">\n        {friends?.map((friend: any) => {\n          return users?.map((user) => {\n            if (user?.userId === friend?.userId2) {\n              isState = 0;\n              if (onGameList && onGameList[user.userId]) isState = 2;\n\n              if (isState === 0) {\n                onlineList?.map((onlineUser) => {\n                  if (onlineUser.userId === user.userId) isState = 1;\n                });\n              }\n              if (isState === 0) return;\n              return (\n                <Link to={`/users/${user.userId}`} key={user.userId}>\n                  <ListItem className=\"friend-list-wrapper\" button>\n                    <UserAvatar\n                      isstate={`${\n                        isState\n                          ? isState === 1\n                            ? '2px solid #1ed14b'\n                            : '2px solid #FFD400'\n                          : '2px solid #d63638'\n                      }`}\n                      src={user.profile}\n                      alt=\"Avatar\"\n                    />\n                    <ListItemText className=\"text\" primary={user.username} />\n                  </ListItem>\n                </Link>\n              );\n            }\n          });\n        })}\n      </FriendsOnlineListContainer>\n    </Scrollbars>\n  );\n};\n\nexport default FriendsOnlineList;\n","import styled from '@emotion/styled';\nimport List from '@mui/material/List';\nimport Avatar from '@mui/material/Avatar';\n\n\nexport const MuiList = styled(List)`\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: #1e1e1e;\n\n\t& .block-list-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .list-text {\n\t\tmargin-left: 12px;\n\t\tcolor: white;\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useContext } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { IAllUser, IBlockList } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { Link } from 'react-router-dom';\nimport { MuiList, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\nconst BlockList = () => {\n  const { data: users } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: blockList } = useSWR<IBlockList[]>(`/api/friend/blocklist`, fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n\n  return (\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n      <MuiList>\n        {blockList?.map((blockUser: IBlockList) => {\n          return users?.map((user) => {\n            if (user?.userId === blockUser?.userId2) {\n              isState = 0;\n              if (onGameList && onGameList[user.userId]) isState = 2;\n              if (isState === 0) {\n                onlineList?.map((onlineUser) => {\n                  if (onlineUser.userId === user.userId) isState = 1;\n                });\n              }\n              return (\n                <Link to={`/users/${user.userId}`} key={blockUser.userId2}>\n                  <ListItem className=\"block-list-wrapper\" button>\n                    <UserAvatar\n                      isstate={`${\n                        isState\n                          ? isState === 1\n                            ? '2px solid #1ed14b'\n                            : '2px solid #FFD400'\n                          : '2px solid #d63638'\n                      }`}\n                      src={user.profile}\n                      alt=\"Avatar\"\n                    />\n                    <ListItemText className=\"list-text\" primary={user.username} />\n                  </ListItem>\n                </Link>\n              );\n            }\n          });\n        })}\n      </MuiList>\n    </Scrollbars>\n  );\n};\n\nexport default BlockList;\n","import styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\n\nexport const DMLeftDrawerContainer = styled.div`\n\twidth: 300px;\n\theight: 100%;\n\tpadding: 30px 15px;\n\tbackground-color: #363636;\n\tborder-right: 1px solid #4f4f4f;\n\toverflow: hidden;\n\n\t& .search-input {\n\t\twidth: 100%;\n\t\toutline: none;\n\t\tresize: none;\n\t\tborder-radius: 4px;\n\t\tbackground: #bdbdbd;\n\t\tfont-size: 16px;\n\t\tfont-weight: bold;\n\t\tfont-family: monospace;\n\t\theight: 40px;\n\t\tcolor: black;\n\t\tborder: none;\n\t\tpadding: 0 12px;\n\t}\n\n\t& .friend-icon-wrapper {\n\t\tborder-top: 1px solid #4f4f4f;\n\t\tborder-bottom: 1px solid #4f4f4f;\n\t\tmargin: 10px 0;\n\t\tpadding: 14px 0 0;\n\t\theight: 80px;\n\t}\n\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\n\t\tbackground-color: #666666 !important;\n\t}\n\n\t& .friend-list-wrapper {\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t}\n\n\t& .friend-list-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.7);\n\t}\n\n\t& .friend-list-btn {\n\t\tcolor: white;\n\t}\n\n\t& .friend-list-icon {\n\t\tmargin-right: 20px;\n\t}\n`;\n\nexport const DMListContainer = styled.div`\n\theight: 79%;\n\n\t& .list {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n\n\t& .css-cvhtoe-MuiButtonBase-root-MuiListItemButton-root.Mui-selected {\n\t\tbackground-color: #666666 !important;\n\t}\n\n\t& .list:hover {\n\t\tbackground-color: rgba(74,75,84,0.7);\n\t}\n\n\t& .list-item-button {\n\t\tpadding: 8px;\n\t}\n\n\t& .user-avatar-id-wrapper {\n\t\tdisplay: flex;\n\n\t\talign-items: center;\n\t}\n\n\n\t& .user-id {\n\t\tmargin-left: 12px;\n\t\tcolor: white;\n\t}\n\n\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\tmargin-left: 0;\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useCallback, useState, useContext } from 'react';\nimport ListItemText from '@mui/material/ListItemText';\nimport Scrollbars from 'react-custom-scrollbars';\nimport List from '@mui/material/List';\nimport { IUser, IAllUser, IDmList, IBlockList } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { Link } from 'react-router-dom';\nimport EmojiPeopleRoundedIcon from '@mui/icons-material/EmojiPeopleRounded';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport { DMLeftDrawerContainer, DMListContainer, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\nlet dmlist2: IDmList[] | undefined;\n\nconst DMLeftDrawerBar = () => {\n  const { data: dmlist } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\n  const { data: users } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: blockList } = useSWR<IBlockList[]>(`/api/friend/blocklist`, fetcher);\n  // const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [dmSearchInputValue, setDMSearchInputValue] = useState('');\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n\n  const handleListItemClick = useCallback(\n    (event: any, index: number) => {\n      setSelectedIndex(index);\n    },\n    [selectedIndex, setSelectedIndex],\n  );\n\n  const onChangeDMSearchInput = useCallback((e) => {\n    setDMSearchInputValue(e.target.value);\n  }, []);\n\n  if (dmSearchInputValue && dmSearchInputValue.indexOf('\\\\') === -1) {\n    dmlist2 = dmlist?.filter((dm) => {\n      const regex = new RegExp(dmSearchInputValue, 'gi');\n      return dm.username.match(regex);\n    });\n  }\n\n  const getDMList = useCallback(\n    (inputValue: string) => {\n      if (!inputValue) return dmlist;\n      else return dmlist2;\n    },\n    [dmlist],\n  );\n\n  return (\n    <DMLeftDrawerContainer>\n      <input\n        className=\"search-input\"\n        onChange={onChangeDMSearchInput}\n        value={dmSearchInputValue}\n        autoComplete=\"off\"\n      ></input>\n      <div className=\"friend-icon-wrapper\">\n        <Link to={`/social`}>\n          <List className=\"friend-list-wrapper\" component=\"nav\" aria-label=\"main mailbox folders\">\n            <ListItemButton\n              className=\"friend-list-btn\"\n              selected={selectedIndex === 0}\n              onClick={(event: any) => handleListItemClick(event, 0)}\n            >\n              <EmojiPeopleRoundedIcon className=\"friend-list-icon\" />\n              <ListItemText primary=\"Friends\" />\n            </ListItemButton>\n          </List>\n        </Link>\n      </div>\n      <DMListContainer>\n        <Scrollbars\n          autoHide\n          renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\n        >\n          <div>\n            {getDMList(dmSearchInputValue)?.map((dm: IDmList, index: number) => {\n              let isblock = false;\n              blockList?.map((blockedUser) => {\n                if (blockedUser.userId2 === dm.userId) isblock = true;\n              });\n              if (!isblock) {\n                return (\n                  <Link to={`/social/dm/${dm.id}`} key={dm.id}>\n                    <List className=\"list\" component=\"nav\" aria-label=\"main mailbox folders\">\n                      <ListItemButton\n                        className=\"list-item-button\"\n                        selected={selectedIndex === index + 1}\n                        onClick={(event: any) => handleListItemClick(event, index + 1)}\n                      >\n                        {users?.map((user: any) => {\n                          if (user.userId === dm.userId) {\n                            isState = 0;\n                            if (onGameList && onGameList[user.userId]) isState = 2;\n                            if (isState === 0) {\n                              onlineList?.map((onlineUser) => {\n                                if (onlineUser.userId === user.userId) isState = 1;\n                              });\n                            }\n                            return (\n                              <div className=\"user-avatar-id-wrapper\" key={dm.id}>\n                                <UserAvatar\n                                  isstate={`${\n                                    isState\n                                      ? isState === 1\n                                        ? '2px solid #1ed14b'\n                                        : '2px solid #FFD400'\n                                      : '2px solid #d63638'\n                                  }`}\n                                  src={user.profile}\n                                  alt=\"Avatar\"\n                                />\n                                <ListItemText className=\"user-id\" primary={user.username} />\n                              </div>\n                            );\n                          }\n                        })}\n                      </ListItemButton>\n                    </List>\n                  </Link>\n                );\n              }\n            })}\n          </div>\n        </Scrollbars>\n      </DMListContainer>\n    </DMLeftDrawerContainer>\n  );\n};\n\nexport default DMLeftDrawerBar;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const SocialSliderContainer = styled(Box)`\n\tbackground-color: #1e1e1e; \n\twidth: 100%;\n\theight: 100%;\n\n\t& .app-bar {\n\t\tbackground: #1e1e1e;\n\t\theight: 10vh;\n\t}\n\n\t& .swipeable-views {\n\t\tcolor: white;\n\t}\n`;\n\nexport const TabPannelBox = styled(Box)`\n\theight: 90vh;\n`;","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport FriendsList from '@components/FriendsList';\nimport FriendsOnlineList from '@components/FriendsOnlineList';\nimport BlockList from '@components/BlockList';\nimport DMLeftDrawer from '@components/DMLeftDrawer';\nimport { SocialSliderContainer, TabPannelBox } from './style';\nimport { useMediaQuery } from 'react-responsive';\n\nfunction TabPanel(props: any) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div>\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`full-width-tabpanel-${index}`}\n        aria-labelledby={`full-width-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <TabPannelBox>\n            <Typography component=\"span\">{children}</Typography>\n          </TabPannelBox>\n        )}\n      </div>\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index: number) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst SocialSlider = () => {\n  const theme = useTheme();\n  const [value, setValue] = useState(0);\n  const isMobile = useMediaQuery({ maxWidth: 700 });\n\n  const handleChange = useCallback((event: any, newValue: any) => {\n    setValue(newValue);\n  }, []);\n\n  const handleChangeIndex = useCallback((index: any) => {\n    setValue(index);\n  }, []);\n\n  return (\n    <>\n      <DMLeftDrawer />\n      {isMobile ? null : (\n        <SocialSliderContainer>\n          <AppBar position=\"static\" className=\"app-bar\">\n            <Tabs\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"secondary\"\n              textColor=\"inherit\"\n              variant=\"fullWidth\"\n              aria-label=\"full width tabs example\"\n            >\n              <Tab label=\"🌐 ONLINE\" {...a11yProps(0)}></Tab>\n              <Tab label=\"👥 FRIENDS\" {...a11yProps(1)} />\n              <Tab label=\"🚨 BLOCKED\" {...a11yProps(2)} />\n            </Tabs>\n          </AppBar>\n          <SwipeableViews\n            className=\"swipeable-views \"\n            axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n            index={value}\n            onChangeIndex={handleChangeIndex}\n          >\n            <TabPanel value={value} index={0}>\n              <FriendsOnlineList />\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n              <FriendsList />\n            </TabPanel>\n            <TabPanel value={value} index={2}>\n              <BlockList />\n            </TabPanel>\n          </SwipeableViews>\n        </SocialSliderContainer>\n      )}\n    </>\n  );\n};\n\nexport default SocialSlider;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const DMChatHeaderContainer = styled(Box)`\n\tflex-grow: 1;\n\n\t& .wrapper {\n\t\tposition: static;\n\t\tbackground-color: #272727;\n\t}\n\n\t& .user-profile-container {\n\t\tflex-grow: 1;\n\t}\n\n\t& .user-profile-wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\talign-items: center;\n\t\twhite-space: nowrap;\n\t}\n\n\t& .avatar {\n\t\twidth: 40px;\n\t\theight: 40px;\n\t\tleft: -10px;\n\t}\n\n\t& .challenge-btn {\n\t\tbackground-color: rgba(22, 120, 209, 0.8);\n\t\tcolor: white;\n\t\twidth: 160px;\n\t\theight: 35px;\n\t\tpadding: 0 16px;\n\t\tfont-weight: bold;\n\t}\n\n\t& .challenge-btn:hover\t {\n\t\tbackground-color: rgba(22, 120, 209, 1);\n\t}\n\n\n\t& .challenge-block-btn {\n\t\twidth: 160px;\n\t\theight: 35px;\n\t\tpadding: 0 16px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t}\n\t& .watch-btn {\n\t\twidth: 160px;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\n\t\tfont-weight: bold;\n\t}\n\n\t& .watch-btn:hover {\n\t\tbackground-color: rgba(255, 212, 0, 1);\n\n\t}\n\n`;","import React, { useCallback, useContext } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport Avatar from '@mui/material/Avatar';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { IAllUser, IUser } from '@typings/db';\nimport { useParams } from 'react-router-dom';\nimport GamepadIcon from '@mui/icons-material/Gamepad';\nimport axios from 'axios';\nimport config from '@utils/config';\nimport { useHistory } from 'react-router-dom';\nimport { DMChatHeaderContainer } from './style';\nimport { toast } from 'react-toastify';\nimport { SocketContext } from '@store/socket';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\nconst DMChatHeader = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: userId } = useSWR<string>(`/api/dms/findDmUser/${id}`, fetcher);\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  const history = useHistory();\n  let isState = 0;\n\n  if (onGameList && userId && onGameList[userId]) isState = 2;\n\n  const onClickChallengeBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .post(`/api/dms/sendMessage/${userId}/3/0`, { message: '' }, config)\n        .then((res) => {\n          history.push(`/game/ping-pong/${res.data}`);\n        })\n        .catch((error) => {\n          if (error.response.data.data.message === 'Block 상태') {\n            toast.error('Cant challenge because you are blocked', {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          } else {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          }\n        });\n    },\n    [userId, alluser],\n  );\n\n  const onClickWatchBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (onGameList && userId) history.push(`/game/ping-pong/${onGameList[userId]}`);\n    },\n    [onGameList],\n  );\n\n  return (\n    <DMChatHeaderContainer>\n      <AppBar className=\"wrapper\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"span\" className=\"user-profile-container\">\n            {alluser?.map((user) => {\n              if (user.userId == userId) {\n                return (\n                  <div className=\"user-profile-wrapper\" key={userId}>\n                    <Avatar className=\"avatar\" src={user.profile} alt=\"Avatar\" />\n                    <span>{user.username}</span>\n                  </div>\n                );\n              }\n            })}\n          </Typography>\n          {isState === 2 && onGameList && myData && onGameList[myData?.userId] === undefined ? (\n            <Button onClick={onClickWatchBtn} variant=\"contained\" className=\"watch-btn\">\n              WATCH&nbsp;\n              <VisibilityIcon />\n            </Button>\n          ) : onGameList && myData && onGameList[myData?.userId] ? (\n            <Button className=\"challenge-block-btn\" onClick={onClickChallengeBtn} disabled>\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          ) : (\n            <Button className=\"challenge-btn\" onClick={onClickChallengeBtn}>\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </DMChatHeaderContainer>\n  );\n};\n\nexport default DMChatHeader;\n","import styled from '@emotion/styled';\n\nexport const DMChatListContainer = styled.div`\n\tbackground: #1e1e1e;\n\twidth: 100%;\n\theight: 100%;\n\tpadding: 8px 0 8px 15px;\n\n\t& .chatList-wrapper {\n\t\tcolor: white; \n\t\tdisplay: flex;\n\t}\n\n\t& .chatList-profile-wrapper {\n\t\tmargin-right: 10px;\n\t}\n\n\t& .avatar {\n\t\twidth: 40px;\n\t\theight: 40px;\n\t\tmargin-bottom: 25px;\n\t}\n\n\t& .chat {\n\t\tmargin-top: 0;\n\t}\n\n  & .challenge-join-wrapper {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    width: 100%;\n  }\n\n  & .challenge-join-btn {\n    margin-right: 15px;\n    font-weight: 700;\n\n  }\n\n  & .challenge-join-block-btn {\n    margin-right: 15px;\n    font-weight: 700;\n\t\tbackground-color: #393939;\n  }\n`;\n\nexport const StickyHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  flex: 1;\n  width: 100%;\n  position: sticky;\n  top: 14px;\n\n  & button {\n    font-weight: bold;\n    font-size: 13px;\n    height: 28px;\n\t\tcolor: white;\n    line-height: 27px;\n    padding: 0 16px;\n    z-index: 2;\n    --saf-0: rgba(var(--sk_foreground_low, 29, 28, 29), 0.13);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 1px 3px 0 rgba(0, 0, 0, 0.08);\n    border-radius: 24px;\n    position: relative;\n    top: -13px;\n    background: #363636;\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useCallback, RefObject, VFC, useEffect, useContext } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport { IChatList, IAllUser, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport Scrollbars from 'react-custom-scrollbars';\nimport useSWR from 'swr';\nimport Button from '@mui/material/Button';\nimport { DMChatListContainer, StickyHeader, ScrollbarColor } from './style';\nimport { makeSectionDM } from '@utils/makeSection';\nimport { Link } from 'react-router-dom';\nimport { SocketContext } from '@store/socket';\n\ninterface Props {\n  chatData: IChatList[][] | undefined;\n  scrollbarRef: RefObject<Scrollbars>;\n  setSize: (f: (size: number) => number) => Promise<IChatList[][] | undefined>;\n  isReachingEnd: boolean;\n}\n\nconst DMChatList: VFC<Props> = ({ chatData, scrollbarRef, isReachingEnd, setSize }) => {\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { onGameList } = useContext(SocketContext);\n  const onScroll = useCallback(\n    (values) => {\n      if (values.scrollTop === 0 && !isReachingEnd) {\n        setSize((prevSize) => {\n          return prevSize + 1;\n        }).then(() => {\n          if (scrollbarRef?.current) {\n            scrollbarRef.current?.scrollTop(\n              scrollbarRef.current?.getScrollHeight() - values.scrollHeight,\n            );\n          }\n        });\n      }\n    },\n    [setSize, isReachingEnd, scrollbarRef],\n  );\n\n  const chatSections = makeSectionDM(chatData ? chatData.flat().reverse() : []);\n  let username;\n\n  return (\n    <DMChatListContainer>\n      <Scrollbars\n        ref={scrollbarRef}\n        onScrollFrame={onScroll}\n        renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\n      >\n        {Object.entries(chatSections).map(([date, chats]) => {\n          return (\n            <div key={date}>\n              <StickyHeader>\n                <button>{date}</button>\n              </StickyHeader>\n              {chats?.map((chat, index) => {\n                username = '';\n                return (\n                  <div className=\"chatList-wrapper\" key={chat.message + index}>\n                    <div className=\"chatList-profile-wrapper\">\n                      {alluser?.map((user) => {\n                        if (user.userId === chat.userId1) {\n                          username = user.username;\n                          return (\n                            <Avatar\n                              className=\"avatar\"\n                              src={user.profile}\n                              alt=\"Avatar\"\n                              key={chat.message + index}\n                            />\n                          );\n                        }\n                      })}\n                    </div>\n                    {chat.match === 0 && (\n                      <div>\n                        <div>{username}</div>\n                        <p className=\"chat\">{chat.message}</p>\n                      </div>\n                    )}\n                    {(chat.match === 1 || chat.match === 3) && (\n                      <div className=\"challenge-join-wrapper\">\n                        <div>\n                          <div>{username}</div>\n                          <p className=\"chat\">{chat.message}</p>\n                        </div>\n                        {onGameList && myData && onGameList[myData?.userId] ? (\n                          <Button className=\"challenge-join-block-btn\" variant=\"contained\" disabled>\n                            JOIN\n                          </Button>\n                        ) : (\n                          <Link to={`/game/ping-pong/${chat.historyId}`}>\n                            <Button className=\"challenge-join-btn\" variant=\"contained\">\n                              JOIN\n                            </Button>\n                          </Link>\n                        )}\n                      </div>\n                    )}\n                    {chat.match === 2 && (\n                      <div className=\"challenge-join-wrapper\">\n                        <div>\n                          <div>{username}</div>\n                          <p className=\"chat\">{chat.message}</p>\n                        </div>\n                        <Link to={`/game/history/${chat.historyId}`}>\n                          <Button className=\"challenge-join-btn\" variant=\"contained\">\n                            HISTORY\n                          </Button>\n                        </Link>\n                      </div>\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n          );\n        })}\n      </Scrollbars>\n    </DMChatListContainer>\n  );\n};\n\nexport default DMChatList;\n","import styled from '@emotion/styled';\n\nexport const DirectMessageContainer = styled.div`\n\twidth: 100%;\n\theight: 100vh;\n\tdisplay: flex;\n\tflex-direction: column;\n`;","import ChatBox from '@components/ChatBox';\nimport ChatHeader from '@components/DMChatHeader';\nimport DMChatList from '@components/DMChatList';\nimport { AutoFixOffSharp } from '@mui/icons-material';\nimport { IChatList, IDmList, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport axios from 'axios';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport Scrollbars from 'react-custom-scrollbars';\nimport useSWR from 'swr';\nimport useSWRInfinite from 'swr/infinite';\nimport { useParams, useHistory } from 'react-router-dom';\nimport getSocket from '@utils/useSocket';\nimport config from '@utils/config';\nimport { DirectMessageContainer } from './style';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport DMLeftDrawer from '@components/DMLeftDrawer';\n\nconst DirectMessage = () => {\n  const [chat, setChat] = useState('');\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: userId } = useSWR<string>(`/api/dms/findDmUser/${id}`, fetcher);\n  const { data: myDMList } = useSWR<IDmList[]>(`/api/dms/dmlist`, fetcher);\n  const [messageRevalidate, setMessageRevalidate] = useState(false);\n  const isMobile = useMediaQuery({ maxWidth: 700 });\n  const isMobileHeader = useMediaQuery({ maxWidth: 420 });\n\n  // const { data: chatData, mutate: mutateChat } = useSWR<IChatList[]>(\n  //   `/api/dms/getAllMessageUseDmId/${id}`,\n  //   fetcher,\n  // );\n  const {\n    data: chatData,\n    mutate: mutateChat,\n    setSize,\n  } = useSWRInfinite<IChatList[]>(\n    (index) => `/api/dms/get20MessageUseDmId/${id}/${index + 1}`,\n    fetcher,\n  );\n\n  const history = useHistory();\n  const isEmpty = chatData?.[0]?.length === 0;\n  const isReachingEnd =\n    isEmpty || (chatData && chatData[chatData.length - 1]?.length < 20) || false;\n  const scrollbarRef = useRef<Scrollbars>(null);\n  const socket = getSocket();\n\n  const onSubmitChat = useCallback(() => {\n    if (chat?.trim() && chatData) {\n      mutateChat((prevChatData) => {\n        prevChatData?.[0].unshift({\n          id: prevChatData[0][0].id + 1,\n          dmId: parseInt(id),\n          userId1: myData?.userId,\n          userId2: userId,\n          message: chat,\n          match: 0,\n          createdAt: new Date(),\n          updatedAt: new Date(),\n          historyId: 0,\n        });\n        return prevChatData;\n      }, false);\n      axios\n        .post(\n          `/api/dms/sendMessage/${userId}/0/0`,\n          {\n            message: chat,\n          },\n          config,\n        )\n        .catch((error) => {\n          if (error.response.data.data.message === 'Block 상태') {\n            toast.error(' Cant send message because it is blocked', {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          } else {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          }\n          mutateChat();\n        });\n      setChat('');\n      setTimeout(() => {\n        scrollbarRef.current?.scrollToBottom();\n      }, 50);\n    }\n  }, [chat]);\n\n  const onMessage = useCallback(\n    (data) => {\n      if (data.userId1 != myData?.userId) {\n        mutateChat((prevchatData) => {\n          prevchatData?.[0].unshift(data);\n\n          return prevchatData;\n        }, false).then(() => {\n          setMessageRevalidate((prev) => !prev);\n          if (scrollbarRef.current) {\n            if (\n              scrollbarRef.current.getScrollHeight() <\n              scrollbarRef.current.getClientHeight() + scrollbarRef.current.getScrollTop() + 150\n            ) {\n              setTimeout(() => {\n                scrollbarRef.current?.scrollToBottom();\n              }, 50);\n            }\n          }\n        });\n      }\n    },\n    [myData, scrollbarRef],\n  );\n\n  useEffect(() => {\n    if (myDMList) {\n      let isUnauthorized = true;\n      for (let item of myDMList) {\n        if (item.id === parseInt(id)) {\n          isUnauthorized = false;\n          break;\n        }\n      }\n      if (isUnauthorized) {\n        history.push('/home');\n      }\n    }\n  }, [myDMList]);\n\n  useEffect(() => {\n    socket?.on('dm', onMessage);\n    return () => {\n      socket?.off('dm');\n    };\n  }, [socket, onMessage]);\n\n  useEffect(() => {\n    if (chatData?.length === 1) {\n      scrollbarRef.current?.scrollToBottom();\n    }\n  }, [chatData]);\n\n  return (\n    <>\n      {isMobile ? null : <DMLeftDrawer />}\n      <DirectMessageContainer>\n        {isMobileHeader ? null : <ChatHeader />}\n\n        <DMChatList\n          chatData={chatData}\n          scrollbarRef={scrollbarRef}\n          isReachingEnd={isReachingEnd}\n          setSize={setSize}\n        />\n        <ChatBox chat={chat} setChat={setChat} onSubmitChat={onSubmitChat} />\n      </DirectMessageContainer>\n    </>\n  );\n};\n\nexport default DirectMessage;\n","import React from 'react';\nimport loadable from '@loadable/component';\nimport { Container } from './style';\nimport { Route, Switch } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nimport SocialSlider from '@pages/SocialSlider';\nimport DirectMessage from '@pages/DirectMessage';\n// const SocialSlider = loadable(() => import('@pages/SocialSlider'));\n// const DirectMessage = loadable(() => import('@pages/DirectMessage'));\n\nconst Social = () => {\n  const isMobile = useMediaQuery({ maxWidth: 700 });\n  return (\n    <Container style={{ borderLeft: '1px solid #4f4f4f', margin: '0', padding: '0' }}>\n      <Switch>\n        <Route exact path=\"/social\" component={SocialSlider} />\n        <Route exact path=\"/social/dm/:id\" component={DirectMessage} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Social;\n","import styled from '@emotion/styled';\nimport List from '@mui/material/List';\nimport Avatar from '@mui/material/Avatar';\n\nexport const UsersListContainer = styled(List)`\n\theight: 100%;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\n\t& .list-item-wrapper {\n\t\tcolor: white;\n\t}\n\n\t& .list-item-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .avatar {\n\t\tborder: 2px solid red;\n\t}\n\n\t& .user {\n\t\tmargin-left: 12px;\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 60px;\n\theight: 60px;\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { VFC, useContext } from 'react';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { IAllUser } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { Link } from 'react-router-dom';\nimport { UsersListContainer, UserAvatar, ScrollbarColor } from './style';\nimport { SocketContext } from '@store/socket';\n\ninterface Props {\n  userList: IAllUser[] | undefined;\n}\n\nconst UserList: VFC<Props> = ({ userList }) => {\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n  return (\n    <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n      <UsersListContainer>\n        {userList?.map((user: IAllUser) => {\n          if (!user.username) return;\n          isState = 0;\n          if (onGameList && onGameList[user.userId]) isState = 2;\n          if (isState === 0) {\n            onlineList?.map((onlineUser) => {\n              if (onlineUser.userId === user.userId) isState = 1;\n            });\n          }\n          return (\n            <Link to={`/users/${user.userId}`} key={user.userId}>\n              <ListItem className=\"list-item-wrapper\" button>\n                <UserAvatar\n                  isstate={`${\n                    isState\n                      ? isState === 1\n                        ? '2px solid #1ed14b'\n                        : '2px solid #FFD400'\n                      : '2px solid #d63638'\n                  }`}\n                  src={user.profile}\n                  alt=\"Avatar\"\n                />\n                <ListItemText className=\"user\" primary={user.username} />\n              </ListItem>\n            </Link>\n          );\n        })}\n      </UsersListContainer>\n    </Scrollbars>\n  );\n};\n\nexport default UserList;\n","import styled from '@emotion/styled';\nimport { styled as muiStyled, alpha } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport InputBase from '@mui/material/InputBase';\nimport SearchIcon from '@mui/icons-material/Search';\nimport UsersList from '@components/UsersList';\n\nexport const UsersContainer = styled.div`\n\theight: 100vh;\n\twidth: 100%;\n\n\t& .wrapper {\n\t\tflex-grow: 1;\n\t\tpadding: 20px 10px;\n\t\tbackground-color: #121212;\n\t\theight: calc(100vh - 40px);\n\t\tbox-sizing: content-box;\n\t}\n\n\t& .app-bar {\n\t\tbackground-color: #1e1e1e;\n\t\tbox-sizing: border-box;\n\t\theight: 100%;\n\t}\n\n`;\n\nexport const Search = muiStyled('div')(({ theme }) => ({\n\tposition: 'relative',\n\tborderRadius: theme.shape.borderRadius,\n\tbackgroundColor: alpha(theme.palette.common.white, 0.15),\n\t'&:hover': {\n\t\tbackgroundColor: alpha(theme.palette.common.white, 0.25),\n\t},\n\tmarginLeft: 0,\n\twidth: '100%',\n\t[theme.breakpoints.up('sm')]: {\n\t\tmarginLeft: theme.spacing(1),\n\t\twidth: 'auto',\n\t},\n}));\n\nexport const SearchIconWrapper = muiStyled('div')(({ theme }) => ({\n\tpadding: theme.spacing(0, 2),\n\theight: '100%',\n\tposition: 'absolute',\n\tpointerEvents: 'none',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tjustifyContent: 'center',\n}));\n\nexport const StyledInputBase = muiStyled(InputBase)(({ theme }) => ({\n\tcolor: 'inherit',\n\t'& .MuiInputBase-input': {\n\t\tpadding: theme.spacing(1, 1, 1, 0),\n\t\t// vertical padding + font size from searchIcon\n\t\tpaddingLeft: `calc(1em + ${theme.spacing(4)})`,\n\t\ttransition: theme.transitions.create('width'),\n\t\twidth: '100%',\n\t\t[theme.breakpoints.up('sm')]: {\n\t\t\twidth: '12ch',\n\t\t\t'&:focus': {\n\t\t\t\twidth: '20ch',\n\t\t\t},\n\t\t},\n\t},\n}));","import React, { useCallback, useState, useEffect } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport SearchIcon from '@mui/icons-material/Search';\nimport UsersList from '@components/UsersList';\nimport useSWR from 'swr';\nimport { IAllUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\n\nimport { UsersContainer, Search, SearchIconWrapper, StyledInputBase } from './style';\n\nlet searchedUserList: IAllUser[] | undefined;\n\nexport default function Users() {\n  const { data: allUserList } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const [userSearchInputValue, setUserSearchInputValue] = useState('');\n\n  const onChangeUserSearchInput = useCallback((e) => {\n    setUserSearchInputValue(e.target.value);\n  }, []);\n\n  if (userSearchInputValue && userSearchInputValue.indexOf('\\\\') === -1) {\n    searchedUserList = allUserList?.filter((user) => {\n      const regex = new RegExp(userSearchInputValue, 'gi');\n      return user.username.match(regex);\n    });\n  }\n\n  const getUserList = useCallback(\n    (inputValue: string) => {\n      if (!inputValue) return allUserList;\n      else return searchedUserList;\n    },\n    [allUserList],\n  );\n\n  return (\n    <UsersContainer>\n      <Box className=\"wrapper\">\n        <AppBar className=\"app-bar\" position=\"static\">\n          <Toolbar>\n            <Typography\n              variant=\"h6\"\n              noWrap\n              component=\"div\"\n              sx={{ flexGrow: 1, display: { xs: 'none', sm: 'block' } }}\n            >\n              Users\n            </Typography>\n            <Search>\n              <SearchIconWrapper>\n                <SearchIcon />\n              </SearchIconWrapper>\n              <StyledInputBase\n                placeholder=\"Search…\"\n                autoComplete=\"off\"\n                inputProps={{ 'aria-label': 'search' }}\n                onChange={onChangeUserSearchInput}\n              />\n            </Search>\n          </Toolbar>\n          <UsersList userList={getUserList(userSearchInputValue)} />\n        </AppBar>\n      </Box>\n    </UsersContainer>\n  );\n}\n","\nimport styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const AchievementsContainer = styled(Box)`\n\tflex-grow: 1;\n\tpadding: 20px 20px;\n`;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport StarIcon from '@mui/icons-material/Star';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport Achievement from '@components/Achievement';\nimport SendIcon from '@mui/icons-material/Send';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport LocalDiningIcon from '@mui/icons-material/LocalDining';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport LocalPoliceIcon from '@mui/icons-material/LocalPolice';\nimport SchoolIcon from '@mui/icons-material/School';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport GavelIcon from '@mui/icons-material/Gavel';\nimport { IAchievement } from '@typings/db';\nimport { AchievementsContainer } from './style';\n\nconst Achievements = () => {\n  const { data: friendCount } = useSWR<IAchievement>(`/api/friend/countFriend`, fetcher, {\n    dedupingInterval: 10000,\n  });\n  const { data: DmListCount } = useSWR<IAchievement>(`/api/dms/getDmListNum`, fetcher, {\n    dedupingInterval: 10000,\n  });\n  const { data: matchCount } = useSWR<IAchievement>(`/api/game/achievement/numOfFight`, fetcher, {\n    dedupingInterval: 10000,\n  });\n  const { data: winCount } = useSWR<IAchievement>(`/api/game/achievement/numOfWin`, fetcher, {\n    dedupingInterval: 10000,\n  });\n  const { data: loseCount } = useSWR<IAchievement>(`/api/game/achievement/numOfLose`, fetcher, {\n    dedupingInterval: 10000,\n  });\n  const { data: channelCount } = useSWR<IAchievement>(\n    `/api/channels/achievement/numOfChannels`,\n    fetcher,\n  );\n  return (\n    <AchievementsContainer>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={ChatBubbleIcon}\n            maxCount={5}\n            curValue={channelCount}\n            header={'Channels member'}\n            condition={'Join 5 channels'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={GroupsIcon}\n            maxCount={10}\n            curValue={friendCount}\n            header={'Small group'}\n            condition={'Have 10 friends'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={RecordVoiceOverIcon}\n            maxCount={30}\n            curValue={DmListCount}\n            header={'Chatterbox '}\n            condition={'DM to 30 people'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={LocalPoliceIcon}\n            maxCount={15}\n            curValue={loseCount}\n            header={'Captain America'}\n            condition={'Lose 15 games'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={LightbulbIcon}\n            maxCount={5}\n            curValue={matchCount}\n            header={'Welcome newbie '}\n            condition={'Match 5 times'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={SchoolIcon}\n            maxCount={30}\n            curValue={matchCount}\n            header={'Alumnus'}\n            condition={'Match 30 times'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={LocalDiningIcon}\n            maxCount={5}\n            curValue={winCount}\n            header={'Warriors'}\n            condition={'Win 5 games'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={LocalFireDepartmentIcon}\n            maxCount={15}\n            curValue={winCount}\n            header={'Fighter'}\n            condition={'Win 15 games'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={BusinessIcon}\n            maxCount={5}\n            curValue={friendCount}\n            header={'Businesses with 5 employees'}\n            condition={'Have 5 friends'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={ForumIcon}\n            maxCount={60}\n            curValue={channelCount}\n            header={'Community member'}\n            condition={'Join 60 channels'}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={SendIcon}\n            maxCount={5}\n            curValue={DmListCount}\n            header={'Paper Airplane'}\n            condition={'DM to 5 people'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={FacebookIcon}\n            maxCount={150}\n            curValue={channelCount}\n            header={'Addicted to social media'}\n            condition={'Join 150 channels'}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={AirplanemodeActiveIcon}\n            maxCount={300}\n            curValue={matchCount}\n            header={'Air Force Medal of honor'}\n            condition={'Match 300 times'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={ShieldIcon}\n            maxCount={5}\n            curValue={loseCount}\n            header={'Shield'}\n            condition={'Lose 5 games'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={SecurityIcon}\n            maxCount={100}\n            curValue={loseCount}\n            header={'Aegis'}\n            condition={'Lose 100 games'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={SportsBaseballIcon}\n            maxCount={100}\n            curValue={DmListCount}\n            header={'Chan Ho Park '}\n            condition={'DM to 100 people'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={StarIcon}\n            maxCount={100}\n            curValue={friendCount}\n            header={'Star'}\n            condition={'Have 100 friends'}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={4}>\n          <Achievement\n            Icon={GavelIcon}\n            maxCount={100}\n            curValue={winCount}\n            header={'Mjolnir'}\n            condition={'Win 100 games'}\n          />\n        </Grid>\n      </Grid>\n    </AchievementsContainer>\n  );\n};\n\nexport default Achievements;\n","import styled from '@emotion/styled';\n\nexport const MatchContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tflex-direction: column;\n\theight: 100vh;\n\n\tcolor: white;\n\n\t& .progress {\n\t\tcolor: white;\n\t}\n`;","import React, { useCallback, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport getSocket from '@utils/useSocket';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { MatchContainer } from './style';\nimport { toast } from 'react-toastify';\nimport { SocketContext } from '@store/socket';\n\nconst option = {\n  // headers: {\n  //   Authorization: `Bearer ${getCookie('ts_token', 1)}`,\n  // },\n  withCredentials: true,\n};\n\nconst Match = () => {\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { onGameList } = useContext(SocketContext);\n\n  const history = useHistory();\n  const socket = getSocket();\n\n  useEffect(() => {\n    if (onGameList && myData) {\n      if (onGameList[myData.userId]) {\n        history.push('/home');\n        toast.error('Already playing game', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      }\n    }\n  }, [onGameList, myData]);\n\n  useEffect(() => {\n    if (myData) {\n      socket.emit('matching', { userId: myData?.userId, gameId: 0 });\n    }\n\n    return () => {\n      if (myData) {\n        socket.emit('outMatching', {\n          userId: myData?.userId,\n        });\n      }\n    };\n  }, [myData, socket]);\n\n  const Matching = useCallback(\n    async (matched: any) => {\n      await axios\n        .post(`/api/dms/sendMessage/${matched.playerTwo}/1/0`, { message: '' }, option)\n        .then((res) => {\n          socket.emit('matching', { userId: myData?.userId, gameId: res.data });\n          history.push(`/game/ping-pong/${res.data}`);\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setTimeout(() => {\n            history.push('/home');\n          }, 4000);\n        });\n    },\n    [myData, socket],\n  );\n\n  useEffect(() => {\n    socket.on('matched', (matched: any) => {\n      if (myData?.userId === matched.playerOne && matched.gameId === 0) {\n        Matching(matched);\n      } else if (myData?.userId === matched.playerTwo && matched.gameId !== 0) {\n        history.push(`/game/ping-pong/${matched.gameId}`);\n      }\n    });\n    return () => {\n      socket.off('matched');\n    };\n  }, [socket, myData, Matching]);\n\n  return (\n    <MatchContainer>\n      <CircularProgress className=\"progress\" />\n      <h1>Waiting for opponent...</h1>\n    </MatchContainer>\n  );\n};\n\nexport default Match;\n","import styled from '@emotion/styled';\n\nexport const HistoryContainer = styled.div`\n\tcolor: white;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tfont-size: 30px;\n\theight: 100vh;\n\n\t& .wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: space-around;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t}\n\n\t& .result-wrapper {\n\t\tdisplay: flex;\n\t\tmargin-bottom: 18px;\n\t}\n\n\t& .result-icon {\n\t\tfont-size: 45px;\n\t}\n\n\t& .result-winnert-text {\n\t\tfont-size: 30px;\n\t}\n\n\n\n\n`;\n\nexport const UserProfileContainer1 = styled.div`\n\tmargin-bottom: 15px;\n\n\t\n\t& .profile1-wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 350px;\n\t\theight: 410px;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\tbackground-color: #1e1e1e;\n\t\twhite-space: overflow-wrap;\n\n\t}\n\n\t& .profile1-wrapper:hover {\n\t\tbackground: #666666;\n\t}\n\n\t& .avatar1 {\n\t\twidth: 250px;\n\t\theight: 250px;\n\t\tmargin-bottom: 8px;\n\t}\n\n\t& .profile1-text {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tcolor: white;\n\t}\n\t\n\n\n`;\n\nexport const UserProfileContainer2 = styled.div`\n\tmargin-bottom: 15px;\n\n\t& .profile2-wrapper {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: 350px;\n\t\theight: 410px;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\tbackground-color: #1e1e1e;\n\t\twhite-space: overflow-wrap;\n\t}\n\n\t& .profile2-wrapper:hover {\n\t\tbackground: #666666;\n\t}\n\n\t& .avatar2 {\n\t\twidth: 250px;\n\t\theight: 250px;\n\t\tmargin-bottom: 8px;\n\t}\n\n\t& .profile2-text {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tcolor: white;\n\t}\n\t\n`;\n\nexport const ProfileOneText = styled.div<{ winner: string }>`\n\tcolor: ${(props) => props.winner};\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport const ProfileTwoText = styled.div<{ winner: string }>`\n\tcolor: ${(props) => props.winner};\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Button from '@mui/material/Button';\nimport { Link, useParams } from 'react-router-dom';\nimport ListItem from '@mui/material/ListItem';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport Avatar from '@mui/material/Avatar';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { toast } from 'react-toastify';\nimport { IAllUser } from '@typings/db';\nimport {\n  HistoryContainer,\n  UserProfileContainer1,\n  UserProfileContainer2,\n  ProfileOneText,\n  ProfileTwoText,\n} from './style';\n\nconst option = {\n  withCredentials: true,\n};\n\nconst History = (data: any) => {\n  const { id } = useParams<{ id: string }>();\n  const [userId1, setUserId1] = useState('');\n  const [userId2, setUserId2] = useState('');\n  const [player1Point, setPlayer1Point] = useState(0);\n  const [player2Point, setPlayer2Point] = useState(0);\n  const [winner, setWinner] = useState(`${data.match.params.winner}`);\n  const [userId1Nickname, setUserId1Nickname] = useState('');\n  const [userId2Nickname, setUserId2Nickname] = useState('');\n  const [winnerNickname, setWinnerNickname] = useState('');\n  const [userId1Profile, setUserId1Profile] = useState('');\n  const [userId2Profile, setUserId2Profile] = useState('');\n  const { data: allUserList } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n\n  useEffect(() => {\n    if (userId1 && userId2) {\n      allUserList?.map((user) => {\n        if (user.userId === userId1) {\n          setUserId1Profile(user.profile);\n          setUserId1Nickname(user.username);\n          if (winner === userId1) {\n            setWinnerNickname(user.username);\n          }\n        } else if (user.userId === userId2) {\n          setUserId2Profile(user.profile);\n          setUserId2Nickname(user.username);\n          if (winner === userId2) {\n            setWinnerNickname(user.username);\n          }\n        }\n      });\n    }\n  }, [userId1, userId2, winner]);\n\n  useEffect(() => {\n    async function getGameInfo() {\n      await axios\n        .get(`/api/game/history/${id}`, option)\n        .then((res: any) => {\n          setUserId1(res.data.userId1);\n          setUserId2(res.data.userId2);\n          setPlayer1Point(res.data.user1Point);\n          setPlayer2Point(res.data.user2Point);\n          setWinner(res.data.winner);\n          // if (res.data.winner === null)\n          //   window.location.href = `http://34.82.79.134:3000/history/${gameId}`;\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    }\n    if (userId1 === '') getGameInfo();\n  }, [id, userId1]);\n\n  return (\n    <HistoryContainer>\n      <div className=\"wrapper\">\n        <UserProfileContainer1>\n          <Link to={`/users/${userId1Nickname}`}>\n            <ListItem className=\"profile1-wrapper\" button>\n              <Avatar className=\"avatar1\" src={userId1Profile} alt=\"Avatar\" />\n              <ProfileOneText winner={`${winner === userId1 ? 'white' : 'red'}`}>\n                <span>{userId1Nickname}</span>\n                <span>{player1Point} Point</span>\n              </ProfileOneText>\n            </ListItem>\n          </Link>\n        </UserProfileContainer1>\n        <div>VS</div>\n        <UserProfileContainer2>\n          <Link to={`/users/${userId2Nickname}`}>\n            <ListItem className=\"profile2-wrapper\" button>\n              <Avatar className=\"avatar2\" src={userId2Profile} alt=\"Avatar\" />\n              <ProfileTwoText winner={`${winner === userId2 ? 'white' : 'red'}`}>\n                <span>{userId2Nickname}</span>\n                <span>{player2Point} Point</span>\n              </ProfileTwoText>\n            </ListItem>\n          </Link>\n        </UserProfileContainer2>\n      </div>\n\n      <div className=\"result-wrapper\">\n        <EmojiEventsIcon className=\"result-icon\" />\n        <div className=\"\">승리자 : {winnerNickname ? winnerNickname : '무승부'}</div>\n      </div>\n      <div>\n        <Link to=\"/game\">\n          <Button variant=\"contained\"> 매치 페이지로 이동 </Button>\n        </Link>\n      </div>\n    </HistoryContainer>\n  );\n};\n\nexport default History;\n","import styled from '@emotion/styled';\n\nexport const PixiContainer = styled.div`\n\tborder: 5px solid #ffffff;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n","import * as PIXI from 'pixi.js';\nimport { Stage, PixiComponent } from '@inlet/react-pixi';\nimport React, { useState, useEffect, useCallback, VFC } from 'react';\nimport axios from 'axios';\nimport getSocket from '@utils/useSocket';\nimport 'regenerator-runtime';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { PixiContainer } from './style';\nimport { toast } from 'react-toastify';\n\nconst socket = getSocket();\n\ninterface RectangleProps {\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n  fill: number;\n}\n\ninterface CircleProps {\n  x: number;\n  y: number;\n  radius: number;\n  fill: number;\n}\n\nPIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\n//사각형\nconst Rectangle = PixiComponent<RectangleProps, PIXI.Graphics>('Rectangle', {\n  create: () => new PIXI.Graphics(),\n  applyProps: (g, _, props) => {\n    const { fill, x, y, width, height } = props;\n    g.clear();\n    g.beginFill(fill);\n    g.drawRect(x, y, width, height);\n    g.endFill();\n  },\n});\n// 원\nconst Circle = PixiComponent<CircleProps, PIXI.Graphics>('Circle', {\n  create: () => new PIXI.Graphics(),\n  applyProps: (g, _, props) => {\n    const { fill, x, y, radius } = props;\n    g.clear();\n    g.beginFill(fill);\n    g.drawCircle(x, y, radius);\n    g.endFill();\n  },\n});\n// axio 옵션\nconst option = {\n  // headers: {\n  //   Authorization: `Bearer ${getCookie('ts_token', 1)}`,\n  // },\n  withCredentials: true,\n};\n\ninterface Props {\n  mapSelect: number;\n  player: string;\n  setGameStartBtn: (e: any) => void;\n}\n\nconst GamePixiContainer: VFC<Props> = ({ mapSelect, player, setGameStartBtn }) => {\n  const { id } = useParams<{ id: string }>();\n  const [ball_x, setBallX] = useState(500);\n  const [ball_y, setBallY] = useState(250);\n  const [player_one_y, setPlayOneY] = useState(200);\n  const [player_two_y, setPlayTwoY] = useState(200);\n  const history = useHistory();\n\n  useEffect(() => {\n    setGameStartBtn(true);\n  }, []);\n\n  useEffect(() => {\n    socket.on('gameInfo', (gameInfo: any) => {\n      setBallX(gameInfo.ball_x);\n      setBallY(gameInfo.ball_y);\n      if (gameInfo.ball_x === 500 && gameInfo.ball_y === 250) setGameStartBtn(true);\n      else setGameStartBtn(false);\n    });\n    return () => {\n      socket.off('gameInfo');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on('player_one', (playerInfo: any) => {\n      setPlayOneY(playerInfo.player_one_y);\n    });\n    return () => {\n      socket.off('player_one');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket.on('player_two', (playerInfo: any) => {\n      setPlayTwoY(playerInfo.player_two_y);\n    });\n    return () => {\n      socket.off('player_two');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    const keyDownHandler = (e: any) => {\n      // 잠시 이걸 이용\n\n      if (e.keyCode === 87 && player !== '') {\n        if (player === 'playerOne') socket.emit('player_one_up', { game: id });\n        else if (player === 'playerTwo') socket.emit('player_two_up', { game: id });\n      } else if (e.keyCode === 83 && player !== '') {\n        if (player === 'playerOne') socket.emit('player_one_down', { game: id });\n        else if (player === 'playerTwo') socket.emit('player_two_down', { game: id });\n      }\n    };\n    document.addEventListener('keydown', keyDownHandler, false);\n  }, [player, id]);\n\n  return (\n    <PixiContainer>\n      <Stage width={1000} height={500} options={{ antialias: true, backgroundColor: 0x365dff }}>\n        <Rectangle x={0} y={player_one_y} width={15} height={100} fill={0xffffff} />\n        <Rectangle x={985} y={player_two_y} width={15} height={100} fill={0xffffff} />\n        {mapSelect === 1 ? (\n          <Rectangle x={350} y={100} width={300} height={50} fill={0x263238} />\n        ) : null}\n        {mapSelect === 1 ? (\n          <Rectangle x={350} y={350} width={300} height={50} fill={0x263238} />\n        ) : null}\n        <Circle x={ball_x} y={ball_y} radius={10} fill={0xffffff} />\n      </Stage>\n    </PixiContainer>\n  );\n};\n\nexport default GamePixiContainer;\n","import styled from '@emotion/styled';\n\nexport const GameSettingContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-top: 20px;\n\n\t& .css-1kty9di-MuiFormLabel-root-MuiInputLabel-root {\n\t\tcolor: white;\n\t}\n\n\t& .css-11u53oe-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.css-11u53oe-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input.css-11u53oe-MuiSelect-select-MuiInputBase-input-MuiOutlinedInput-input {\n\t\tcolor: white;\n\t}\n\n\t& .css-hfutr2-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: rgba(255, 255, 255, 0.54);\n\t}\n\n\t& .css-bpeome-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: rgba(255, 255, 255, 1);\n\t}\n\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 0.5);\n\t}\n\n\t& .css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root:hover\n\t\t.MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 1);\n\n\t}\n`;","import React, { useState, useEffect, useCallback, VFC } from 'react';\nimport getSocket from '@utils/useSocket';\nimport 'regenerator-runtime';\nimport { useParams } from 'react-router-dom';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport { GameSettingContainer } from './style';\nconst socket = getSocket();\n\nconst option = {\n  withCredentials: true,\n};\n\ninterface Props {\n  player1Ready: number;\n  player2Ready: number;\n  mapSelect: number;\n  player: string;\n  setMapSelect: (e: any) => void;\n}\n\nconst GameSetting: VFC<Props> = ({\n  player1Ready,\n  player2Ready,\n  player,\n  mapSelect,\n  setMapSelect,\n}) => {\n  const { id } = useParams<{ id: string }>();\n  const [gameSpeed, setGameSpeed] = useState(2);\n  const [gameCount, setGameCount] = useState(3);\n  const [ballRandom, setBallRandom] = useState(0);\n\n  const onChangeSpeed = useCallback(\n    (e: any) => {\n      if (player1Ready || player2Ready || !player) return;\n      if (id) {\n        socket.emit('changeGameSet', {\n          gameId: id,\n          speed: e.target.value,\n          set: gameCount,\n          map: mapSelect,\n          random: ballRandom,\n        });\n      }\n    },\n    [player1Ready, player2Ready, gameCount, ballRandom, mapSelect, player, id],\n  );\n\n  const onChangeMapSelect = useCallback(\n    (e: any) => {\n      if (player1Ready || player2Ready || !player) return;\n      if (id) {\n        socket.emit('changeGameSet', {\n          gameId: id,\n          speed: gameSpeed,\n          set: gameCount,\n          map: e.target.value,\n          random: ballRandom,\n        });\n      }\n    },\n    [player1Ready, player2Ready, gameCount, ballRandom, gameSpeed, id, player],\n  );\n\n  const onChangeGameCount = useCallback(\n    (e: any) => {\n      if (player1Ready || player2Ready || !player) return;\n      if (id) {\n        socket.emit('changeGameSet', {\n          gameId: id,\n          speed: gameSpeed,\n          set: e.target.value,\n          map: mapSelect,\n          random: ballRandom,\n        });\n      }\n    },\n\n    [player1Ready, player2Ready, ballRandom, mapSelect, gameSpeed, id, player],\n  );\n\n  const onChangeBallRandom = useCallback(\n    (e: any) => {\n      if (player1Ready || player2Ready || !player) return;\n      if (id) {\n        socket.emit('changeGameSet', {\n          gameId: id,\n          speed: gameSpeed,\n          set: gameCount,\n          map: mapSelect,\n          random: e.target.value,\n        });\n      }\n    },\n    [player1Ready, player2Ready, gameCount, mapSelect, gameSpeed, id, player],\n  );\n\n  // useEffect(() => {\n  //   if (player1Ready || player2Ready || !player)\n  //     if (id) {\n  //       socket.emit('changeGameSet', {\n  //         gameId: id,\n  //         speed: gameSpeed,\n  //         set: gameCount,\n  //         map: mapSelect,\n  //         random: ballRandom,\n  //       });\n  //     }\n  // }, [gameSpeed, gameCount, mapSelect, ballRandom, id, player, player1Ready, player2Ready]);\n\n  useEffect(() => {\n    socket.on('gameSet', (set: any) => {\n      setGameSpeed(set.length);\n      setGameCount(set.game_set);\n      setMapSelect(set.game_map);\n      setBallRandom(set.random_map);\n    });\n    return () => {\n      socket.off('gameSet');\n    };\n  }, []);\n\n  return (\n    <GameSettingContainer>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">게임판수</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={gameCount}\n          label=\"게임판수\"\n          onChange={onChangeGameCount}\n        >\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">맵선택</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={mapSelect}\n          label=\"맵선택\"\n          onChange={onChangeMapSelect}\n        >\n          <MenuItem value={0}>Normal</MenuItem>\n          <MenuItem value={1}>obstacle</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">Speed</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={gameSpeed}\n          label=\"Speed\"\n          onChange={onChangeSpeed}\n        >\n          <MenuItem value={2}>1단계</MenuItem>\n          <MenuItem value={3}>2단계</MenuItem>\n          <MenuItem value={4}>3단계</MenuItem>\n        </Select>\n      </FormControl>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">ballRandom</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={ballRandom}\n          label=\"ballRandom\"\n          onChange={onChangeBallRandom}\n        >\n          <MenuItem value={0}>Normal</MenuItem>\n          <MenuItem value={1}>Random</MenuItem>\n        </Select>\n      </FormControl>\n    </GameSettingContainer>\n  );\n};\n\nexport default GameSetting;\n","import styled from '@emotion/styled';\n\nexport const BackgroundHeight = styled.div`\n\theight: 100vh;\n\twidth: 100%;\n\tbackground-color: #424242;\n`;\n\nexport const PingPongContainer = styled.div`\n\tbackground-color: #424242;\n\tmargin: 0;\n\twidth: 100%;\n\theight: 100%;\n\tcolor: white;\n\n\t& .pixi-container {\n\t\tborder: 5px solid #ffffff;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n`;\n\nexport const GameReadyContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tmargin: 20px;\n\n\t& .player-one-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t& .player-one-avatar {\n\t\twidth: 300px;\n\t\theight: 300px;\n\t}\n\n\t& .player-one-text {\n\t\tmargin: 10px 0;\n\t}\n\n\n\t& .versus {\n\t\tfont-weight: 700;\n\t\tfont-size: 30px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t& .player-two-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t& .player-two-avatar {\n\t\twidth: 300px;\n\t\theight: 300px;\n\t}\n\n\t& .player-two-text {\n\t\tmargin: 10px 0;\n\t}\n\n\n\t& .css-sghohy-MuiButtonBase-root-MuiButton-root.Mui-disabled {\n\t\tcolor: white;\n\t}\n\n`;\n\nexport const UserPointContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\tpadding: 10px 15px;\n\n\t& .point-wrapper {\n\t\tdisplay: flex;\n\t}\n\n\t& .point-icon {\n\t\tfont-size: 27px;\n\t}\n\n`\n\nexport const GameInitBtnContainer = styled.div<{ width: string }>`\n\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\twidth: ${(props) => props.width};\n\n\t& .game-btn {\n\t\tcolor: white;\n\t}\n\n\t& .game-text {\n\t\tmargin-top: 5px;\n\t}\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport getSocket from '@utils/useSocket';\nimport 'regenerator-runtime';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useInput from '@hooks/useInput';\nimport { IUser, IAllUser } from '@typings/db';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport EventNoteIcon from '@mui/icons-material/EventNote';\nimport Scrollbars from 'react-custom-scrollbars';\nimport GamePixiContainer from '@components/GamePixiContainer';\nimport GameSetting from '@components/GameSetting';\nimport { toast } from 'react-toastify';\nimport {\n  PingPongContainer,\n  GameReadyContainer,\n  UserPointContainer,\n  GameInitBtnContainer,\n  BackgroundHeight,\n  ScrollbarColor,\n} from './style';\n\nconst socket = getSocket();\nconst option = {\n  withCredentials: true,\n};\n\nconst PingPong = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: allUserList } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const [player1Ready, setPlay1Ready] = useState(0);\n  const [player2Ready, setPlay2Ready] = useState(0);\n  const [user1Point, setUser1Point] = useState(0);\n  const [user2Point, setUser2Point] = useState(0);\n  const [player, setPlayer] = useState('');\n  const [isGameStart, setIsGameStart] = useState(false);\n  const [opponent, setOpponent] = useState('');\n  const [opponentName, setOpponentName] = useState('');\n  const [opponentProfile, setOpponentProfile] = useState('');\n  const [mapSelect, setMapSelect] = useState(0);\n  const [watchUserId1, setWatchUserId1] = useState('');\n  const [watchUserId2, setWatchUserId2] = useState('');\n  const [watchUserId1Profile, setWatchUserId1Profile] = useState('');\n  const [watchUserId2Profile, setWatchUserId2Profile] = useState('');\n  const [watchUserId1Name, setWatchUserId1Name] = useState('');\n  const [watchUserId2Name, setWatchUserId2Name] = useState('');\n  const [gameStartBtn, setGameStartBtn] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    socket.on('gameStart', (isGameStart: { gameStart: boolean }) => {\n      if (isGameStart.gameStart) {\n        setIsGameStart(true);\n        setPlay1Ready(1);\n        setPlay2Ready(1);\n      }\n      return () => {\n        socket.off('gameStart');\n      };\n    });\n  }, [socket]);\n\n  useEffect(() => {\n    if (id) {\n      socket.emit('gameCheck', {\n        gameId: id,\n      });\n    }\n  }, [id, socket]);\n\n  useEffect(() => {\n    if (myData && id) {\n      socket.emit('onGame', {\n        gameId: id,\n        player: myData.userId,\n      });\n    }\n    return () => {\n      if (myData) {\n        socket.emit('offGame', {\n          gameId: id,\n          player: myData.userId,\n        });\n      }\n    };\n  }, [socket, myData, id]);\n\n  useEffect(() => {\n    if (myData) {\n      allUserList?.map((user) => {\n        if (user.userId === opponent) {\n          setOpponentProfile(user.profile);\n          setOpponentName(user.username);\n        }\n        if (user.userId === watchUserId1) {\n          setWatchUserId1Profile(user.profile);\n          setWatchUserId1Name(user.username);\n        }\n        if (user.userId === watchUserId2) {\n          setWatchUserId2Profile(user.profile);\n          setWatchUserId2Name(user.username);\n        }\n      });\n    }\n  }, [myData, opponent, allUserList, watchUserId1, watchUserId2]);\n\n  // 내정보 받아오고 => 게임 기록 가져오고 => 내정보와 userId 매칭후 player one인지 two인지 확인\n  // playerOne인 경우 게임 리셋하고 게임포인트 집어 넣기\n  useEffect(() => {\n    async function getGameInfo() {\n      await axios\n        .get(`/api/game/history/${id}`, option)\n        .then((res: any) => {\n          if (res.data.state === 2) history.push(`/game/history/${id}`);\n          if (myData?.userId === res.data.userId1) {\n            setPlayer('playerOne');\n            setOpponent(res.data.userId2);\n            setPlay2Ready(res.data.playerTwoJoin);\n\n            socket.emit('game', {\n              gameId: id,\n              player: 'playerOne',\n              player1Ready: 0,\n              player2Ready: res.data.playerTwoJoin,\n            });\n          } else if (myData?.userId === res.data.userId2) {\n            setPlayer('playerTwo');\n            setPlay1Ready(res.data.playerOneJoin);\n            setOpponent(res.data.userId1);\n            socket.emit('game', {\n              gameId: id,\n              player: 'playerTwo',\n              player1Ready: res.data.playerOneJoin,\n              player2Ready: 0,\n            });\n          } else {\n            socket.emit('game', {\n              gameId: id,\n              player: '',\n              player1Ready: res.data.playerOneJoin,\n              player2Ready: res.data.playerTwoJoin,\n            });\n          }\n\n          setWatchUserId1(res.data.userId1);\n          setWatchUserId2(res.data.userId2);\n          socket.emit('changeGameSet', { gameId: id, check: 'check' });\n          socket.emit('gamePoint', {\n            gameId: id,\n            user1Point: res.data.user1Point,\n            user2Point: res.data.user2Point,\n          });\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setTimeout(() => {\n            history.push('/home');\n          }, 4000);\n        });\n    }\n    if (myData?.userId) getGameInfo();\n  }, [id, myData]);\n\n  useEffect(() => {\n    socket.on('point', (point: any) => {\n      setUser1Point(point.player1);\n      setUser2Point(point.player2);\n    });\n    return () => {\n      socket.off('point');\n    };\n  }, []);\n\n  useEffect(() => {\n    socket.on('end', () => {\n      history.push(`/game/history/${id}`);\n    });\n    return () => {\n      socket.off('end');\n    };\n  }, [id]);\n\n  useEffect(() => {\n    socket.on('ready', (ready: any) => {\n      setPlay1Ready(ready.player1);\n      setPlay2Ready(ready.player2);\n\n      if (ready.player1 === 1 && ready.player2 === 1) setGameStartBtn(true);\n    });\n    return () => {\n      socket.off('ready');\n    };\n  }, []);\n\n  const readyPlayer1 = useCallback(() => {\n    if (player === 'playerOne' && player1Ready === 0) {\n      socket.emit('gameReady', {\n        gameId: id,\n        player: 1,\n        userId: myData?.userId,\n      });\n    }\n  }, [socket, id, myData, player, player1Ready]);\n  const readyPlayer2 = useCallback(() => {\n    if (player === 'playerTwo' && player2Ready === 0) {\n      socket.emit('gameReady', {\n        gameId: id,\n        player: 2,\n        userId: myData?.userId,\n      });\n    }\n  }, [socket, id, myData, player, player2Ready]);\n\n  const changeGameSet = useCallback(() => {\n    if (player !== '')\n      axios.get(`/api/game/start/${id}`, option).catch((error) => {\n        history.push('./home');\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, [id, player, option]);\n\n  return (\n    <BackgroundHeight className=\"bg\">\n      <Scrollbars\n        autoHide\n        renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}\n      >\n        <PingPongContainer>\n          {isGameStart && (\n            <GamePixiContainer\n              mapSelect={mapSelect}\n              player={player}\n              setGameStartBtn={setGameStartBtn}\n            />\n          )}\n          {!isGameStart && (\n            <GameSetting\n              player1Ready={player1Ready}\n              player2Ready={player2Ready}\n              player={player}\n              mapSelect={mapSelect}\n              setMapSelect={setMapSelect}\n            />\n          )}\n          {!isGameStart && (\n            <GameReadyContainer>\n              <div className=\"player-one-container\">\n                <div>\n                  <Avatar className=\"player-one-avatar\" src={watchUserId1Profile} alt=\"Avatar\" />\n                </div>\n                <div className=\"player-one-text\">\n                  {player === 'playerOne'\n                    ? myData?.username + ' (나)'\n                    : player !== ''\n                    ? opponentName + ' (상대편)'\n                    : watchUserId1Name}\n                </div>\n                <div>\n                  {player === 'playerOne' ? (\n                    player1Ready === 0 ? (\n                      <Button variant=\"contained\" onClick={readyPlayer1}>\n                        ready\n                      </Button>\n                    ) : (\n                      <Button variant=\"contained\" disabled>\n                        완료\n                      </Button>\n                    )\n                  ) : player1Ready === 0 ? (\n                    <Button variant=\"contained\" disabled>\n                      준비중..\n                    </Button>\n                  ) : (\n                    <Button variant=\"contained\" disabled>\n                      완료\n                    </Button>\n                  )}\n                </div>\n              </div>\n              <div className=\"versus\">\n                <div>VS</div>\n              </div>\n              <div className=\"player-two-container\">\n                <div>\n                  <Avatar className=\"player-two-avatar\" src={watchUserId2Profile} alt=\"Avatar\" />\n                </div>\n                <div className=\"player-two-text\">\n                  {player === 'playerTwo'\n                    ? myData?.username + ' (나)'\n                    : player !== ''\n                    ? opponentName + ' (상대편)'\n                    : watchUserId2Name}\n                </div>\n                <div>\n                  {player === 'playerTwo' ? (\n                    player2Ready === 0 ? (\n                      <Button variant=\"contained\" onClick={readyPlayer2}>\n                        ready\n                      </Button>\n                    ) : (\n                      <Button variant=\"contained\" disabled>\n                        완료\n                      </Button>\n                    )\n                  ) : player2Ready === 0 ? (\n                    <Button variant=\"contained\" disabled>\n                      준비중..\n                    </Button>\n                  ) : (\n                    <Button variant=\"contained\" disabled>\n                      완료\n                    </Button>\n                  )}\n                </div>\n              </div>\n            </GameReadyContainer>\n          )}\n\n          <UserPointContainer>\n            {isGameStart && (\n              <div className=\"point-wrapper\">\n                {watchUserId1Name + ' Point'}\n                <EventNoteIcon className=\"point-icon\" /> {': [ ' + user1Point + ' ] '}\n              </div>\n            )}\n            {isGameStart && (\n              <div className=\"point-wrapper\">\n                {watchUserId2Name + ' Point'}\n                <EventNoteIcon className=\"point-icon\" /> {': [ ' + user2Point + ' ] '}\n              </div>\n            )}\n          </UserPointContainer>\n          <GameInitBtnContainer width={`${isGameStart ? '' : '100%'}`}>\n            {player === '' ? null : gameStartBtn ? (\n              <Button className=\"game-btn\" variant=\"contained\" onClick={changeGameSet}>\n                게임시작\n              </Button>\n            ) : (\n              <Button className=\"game-btn\" variant=\"contained\" disabled>\n                게임시작\n              </Button>\n            )}\n            {player === '' ? null : isGameStart ? null : (\n              <div className=\"game-text\"> (모두 레디 시 시작됨)</div>\n            )}\n            {player === '' ? <h2>관전중...</h2> : <div>(up: w / down: s)</div>}\n          </GameInitBtnContainer>\n        </PingPongContainer>\n      </Scrollbars>\n    </BackgroundHeight>\n  );\n};\n\nexport default PingPong;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n// import Match from '@pages/Match';\n// import PingPong from '@pages/PingPong';\n// import History from '@pages/History';\nimport loadable from '@loadable/component';\n\nimport Match from '@pages/Match';\nimport History from '@pages/History';\nimport PingPong from '@pages/PingPong';\n\n// const Match = loadable(() => import('@pages/Match'));\n// const History = loadable(() => import('@pages/History'));\n// const PingPong = loadable(() => import('@pages/PingPong'));\n\nconst Game = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/game\" component={Match} />\n      <Route exact path=\"/game/ping-pong/:id\" component={PingPong} />\n      <Route exact path=\"/game/history/:id\" component={History} />\n    </Switch>\n  );\n};\n\nexport default Game;\n","import styled from '@emotion/styled';\n\nexport const TwoFactorSwitchBack = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 1000;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n`;\n\nexport const TwoFactorSwitchContainer = styled.div`\n\tposition: absolute;\n\twidth: 500px;\n\theight: 550px;\n\tleft: 50%;\n\ttop: 50%;\n\ttransform: translate(-50%, -50%);\n\tz-index: 2000;\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: #1e1e1e;\n\tbox-shadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\t\n\t& .close-icon {\n\t\tcolor: white;\n\t\tmargin-left: 430px;\n\t}\n\n\t& .qr-img {\n\t\twidth: 400px;\n\t\theight: 400px;\n\t\tmargin: 10px 45px 0 45px;\n\t}\n\n\t& .text-field {\n\t\tmargin: 20px;\n\n\t}\n\n\t& .css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root {\n\t\tcolor: white;\n\t}\n\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\n\t\tcolor: white;\n\t}\n\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 0.6);\n\t}\n\n\t& .css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 1);\n\n\t}\n\n\n\n\n\n\n\t\t`;","import React, { useCallback, useState, useEffect } from 'react';\nimport Switch from '@mui/material/Switch';\nimport axios from 'axios';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport TextField from '@mui/material/TextField';\nimport config from '@utils/config';\nimport { TwoFactorSwitchBack, TwoFactorSwitchContainer } from './style';\nimport { toast } from 'react-toastify';\n\nconst TwoFactorSwitch = () => {\n  const { data: isTwoFactor } = useSWR<boolean>('/api/users/two-factor-status', fetcher);\n  const [checked, setChecked] = useState(false);\n  const [imgsrc, setImgsrc] = useState('');\n  const [isQRModal, setisQRModal] = useState(false);\n  const [OTPvalue, setOTPvalue] = useState('');\n\n  useEffect(() => {\n    if (isTwoFactor) {\n      setChecked(isTwoFactor);\n    }\n  }, [isTwoFactor]);\n\n  const onSubmitOTPvalue = useCallback(\n    (e) => {\n      if (e.key === 'Enter') {\n        axios\n          .get(`/api/auth/otpCodeCheck/${OTPvalue}`, config)\n          .then((e) => {\n            if (e.data === true) {\n              setOTPvalue('');\n              axios\n                .get('/api/users/turn-on', config)\n                .then(() => {\n                  toast.success('Successfully authenticated', {\n                    autoClose: 4000,\n                    position: toast.POSITION.TOP_RIGHT,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    theme: 'colored',\n                  });\n                  setChecked(true);\n                  setisQRModal(false);\n                })\n                .catch((error) => {\n                  toast.error(error.message, {\n                    autoClose: 4000,\n                    position: toast.POSITION.TOP_RIGHT,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    theme: 'colored',\n                  });\n                });\n            } else {\n              toast.error('Authenticate failed', {\n                autoClose: 4000,\n                position: toast.POSITION.TOP_RIGHT,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                theme: 'colored',\n              });\n            }\n          })\n          .catch((error) => {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          });\n      }\n    },\n    [OTPvalue],\n  );\n\n  const onChangeOTPinput = useCallback(\n    (e) => {\n      setOTPvalue(e.target.value);\n    },\n    [OTPvalue],\n  );\n\n  const handleChange = useCallback((event: any) => {\n    if (event.target.checked === false) {\n      axios\n        .get('/api/users/turn-off', config)\n        .then(() => {\n          toast.success('Successfully turned off authentication', {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setChecked(false);\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setChecked(true);\n        });\n    }\n    if (event.target.checked === true) {\n      axios\n        .get(`/api/auth/make-qrcode`, {\n          withCredentials: true,\n          responseType: 'blob',\n          // headers: {\n          //   Authorization: `Bearer ${getToken()}`,\n          // },\n        })\n        .then((res) => {\n          setImgsrc(\n            window.URL.createObjectURL(new Blob([res.data], { type: res.headers['content-type'] })),\n          );\n          setChecked(true);\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setChecked(false);\n        });\n    }\n  }, []);\n\n  const onClickQRModal = useCallback(() => {\n    if (checked) {\n      setChecked(false);\n      setisQRModal(false);\n    } else setisQRModal(true);\n  }, [isQRModal, checked]);\n\n  return (\n    <>\n      {isQRModal && checked && (\n        <>\n          <TwoFactorSwitchBack onClick={onClickQRModal}></TwoFactorSwitchBack>\n          <TwoFactorSwitchContainer>\n            <IconButton className=\"close-icon\" onClick={onClickQRModal}>\n              <CloseIcon />\n            </IconButton>\n            <img className=\"qr-img\" src={imgsrc} />\n            <TextField\n              className=\"text-field\"\n              onKeyPress={onSubmitOTPvalue}\n              onChange={onChangeOTPinput}\n              value={OTPvalue}\n              id=\"outlined-basic\"\n              label=\"OTP\"\n              variant=\"outlined\"\n              autoComplete=\"off\"\n            />\n          </TwoFactorSwitchContainer>\n        </>\n      )}\n      <Switch\n        onClick={onClickQRModal}\n        checked={checked ? true : false}\n        onChange={handleChange}\n        inputProps={{ 'aria-label': 'controlled' }}\n      />\n    </>\n  );\n};\n\nexport default TwoFactorSwitch;\n","import styled from '@emotion/styled';\n\nexport const ProfileSettingContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tmargin: 20px;\n\twidth: 100%;\n\tfont-size: 22px;\n\n\t& .security-wrapper {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tpadding: 20px;\n\t\tbackground-color: #1e1e1e;\n\t}\n\n\t& .two-factor-wrapper {\n\t\tdisplay: flex;\n\t}\n\n\t& .user-avatar-container {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tbackground-color: #1e1e1e;\n\t\tmargin-top: 25px;\n\t}\n\n\t& .user-avatar-wrapper {\n\t\tpadding: 20px 20px 20px 20px;\n\t}\n\n\t& .header-avatar {\n\t\theight: 70px;\n\t}\n\n\t& .user-avatar-upload-section {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t}\n\n\t& .avatar-upload-wrapper {\n\t\tposition: relative;\n\t}\n\n\t& .upload-input {\n\t\tdisplay: none;\n\t}\n\n\t& .avatar {\n\t\twidth: 180px;\n\t\theight: 180px;\n\t}\n\n\t& .remove-btn {\n\t\tposition: absolute;\n\t\ttop: -5px;\n\t\tright: -20px;\n\t\tz-index: 10;\n\t}\n\n\t& .remove-icon {\n\t\tcolor: white;\n\t}\n\n\t& .user-nickname {\n\t\tcolor: #52575d;\n\t\tfont-weight: 500;\n\t}\n\n\t& .upload-btn-wrapper {\n\t\twidth: 100%;\n\t\tmargin-top: 12px;\n\t}\n\n\t& .upload-btn {\n\t\twidth: 100%;\n\t}\n\t\n`;\n\nexport const EditNickNameWrapper = styled.div`\n\tbackground-color: #1e1e1e;\n\tmargin-top: 25px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 20px;\n\n\n\t& .nick-input-label {\n\t\tmargin-bottom: 10px;\n\t}\n\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 0.6);\n\t}\n\n\t& .css-md26zr-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 1);\n\t}\n\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\n\t\tcolor: white;\n\t}\n\n`;\n\nexport const NickNameErrorContainer = styled.div<{ visibility: string }>`\n\tcolor: red; \n\tfont-size: 14px; \n\tmargin-top: 5px;\n\tvisibility: ${(props) => props.visibility};\n`;","import styled from '@emotion/styled';\n\nexport const EditNickNameWrapper = styled.div`\n\tbackground-color: #1e1e1e;\n\tmargin-top: 25px;\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding: 20px;\n\n\n\t& .nick-input-label {\n\t\tmargin-bottom: 10px;\n\t}\n\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 0.6);\n\t}\n\n\t& .css-md26zr-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\n\t\tborder-color: rgba(255, 255, 255, 1);\n\t}\n\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\n\t\tcolor: white;\n\t}\n\n`;\n\n\nexport const NickNameErrorContainer = styled.div<{ visibility: string }>`\n\tcolor: red; \n\tfont-size: 14px; \n\tmargin-top: 5px;\n\tvisibility: ${(props) => props.visibility};\n`;","import React, { useCallback, useState } from 'react';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport TextField from '@mui/material/TextField';\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { EditNickNameWrapper, NickNameErrorContainer } from './style';\n\nconst NickNameChangeField = () => {\n  const { data: myData, mutate: mutateMyData } = useSWR<IUser | null>('/api/users', fetcher);\n  const [changeNickname, setChangeNickname] = useState('');\n  const [isNickError, setIsNickError] = useState(0);\n\n  const onChangeNickname = useCallback((e) => {\n    e.preventDefault();\n    setChangeNickname(e.target.value);\n    setIsNickError(0);\n  }, []);\n\n  const onKeyDownNickname = useCallback(\n    (e) => {\n      if (!changeNickname) return;\n\n      if (changeNickname.length > 10) {\n        setIsNickError(2);\n        return;\n      }\n      if (e.key === 'Enter') {\n        e.preventDefault();\n        axios\n          .get(`/api/users/update-username/${changeNickname}`, {\n            withCredentials: true,\n          })\n          .then((res) => {\n            if (res.data === false) {\n              setIsNickError(1);\n              return;\n            } else {\n              toast.success('Successfully changed your nickname', {\n                autoClose: 4000,\n                position: toast.POSITION.TOP_RIGHT,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                theme: 'colored',\n              });\n              mutateMyData();\n              setChangeNickname('');\n            }\n          })\n          .catch((error) => {\n            toast.error(error.message, {\n              autoClose: 4000,\n              position: toast.POSITION.TOP_RIGHT,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              theme: 'colored',\n            });\n          });\n      }\n    },\n    [mutateMyData, changeNickname],\n  );\n\n  return (\n    <EditNickNameWrapper>\n      <span className=\"nick-input-label\">Edit nickname</span>\n      <TextField\n        value={changeNickname}\n        onChange={onChangeNickname}\n        onKeyUp={onKeyDownNickname}\n        fullWidth\n        label=\"nickname\"\n        id=\"fullWidth\"\n        autoComplete=\"off\"\n      />\n      <NickNameErrorContainer visibility={isNickError === 0 ? 'hidden' : 'visiblle'}>\n        {isNickError && isNickError === 1 ? (\n          <span>This nickname is already in use by another user</span>\n        ) : (\n          <span>Nickname length limit is 10 characters</span>\n        )}\n      </NickNameErrorContainer>\n    </EditNickNameWrapper>\n  );\n};\n\nexport default NickNameChangeField;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport TwoFactorSwitch from '@components/TwoFactorSwitch';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport axios from 'axios';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { ProfileSettingContainer } from './style';\nimport NickNameChangeField from '@components/NickNameChangeField';\nimport { toast } from 'react-toastify';\n\nconst ProfileSetting = () => {\n  const { data: myData, mutate: mutateMyData } = useSWR<IUser | null>('/api/users', fetcher);\n  const [selectedFile, setSelectedFile] = useState<any>(null);\n  const [imgUrl, setImgUrl] = useState('');\n\n  const onChangeFile = (event: any) => {\n    setSelectedFile(event.target.files);\n  };\n\n  const onClickClearImg = () => {\n    setImgUrl('');\n    setSelectedFile(null);\n  };\n\n  const onClickUploadBtn = useCallback(() => {\n    if (!selectedFile || !selectedFile[0]) return;\n    const formData = new FormData();\n\n    formData.append(\n      'image',\n      selectedFile[0],\n      `${myData?.userId}` + selectedFile[0].name.slice(selectedFile[0]?.name?.indexOf('.')),\n    );\n    const config = {\n      withCredentials: true,\n      headers: {\n        'content-type': 'multipart/form-data',\n      },\n    };\n\n    axios\n      .post('/api/users/upload', formData, config)\n      .then((res) => {\n        toast.success('Successfully changed your profile picture', {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n        mutateMyData();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 4000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, [myData, selectedFile]);\n\n  useEffect(() => {\n    preview();\n  });\n\n  const preview = () => {\n    if (!selectedFile || !selectedFile[0]) return false;\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      setImgUrl(`${reader.result}`);\n    };\n    reader.readAsDataURL(selectedFile[0]);\n  };\n  return (\n    <ProfileSettingContainer>\n      <div className=\"security-wrapper\">\n        <div>Security</div>\n        <div className=\"two-factor-wrapper\">\n          <TwoFactorSwitch />\n          <span>2-Factor Authentication</span>\n        </div>\n      </div>\n      <div className=\"user-avatar-container\">\n        <div className=\"user-avatar-wrapper\">\n          <div className=\"header-avatar\">Avatar</div>\n          <div className=\"user-avatar-upload-section\">\n            <div className=\"avatar-upload-wrapper\">\n              <label htmlFor=\"contained-button-file\">\n                <input\n                  className=\"upload-input\"\n                  accept=\"image/*\"\n                  id=\"contained-button-file\"\n                  multiple\n                  type=\"file\"\n                  onChange={onChangeFile}\n                />\n                <Avatar className=\"avatar\" src={imgUrl ? imgUrl : myData?.profile} alt=\"Avatar\" />\n              </label>\n              <div className=\"remove-btn \" onClick={onClickClearImg}>\n                <IconButton className=\"remove-icon\">\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n            <span>{myData?.userId}</span>\n            <span className=\"user-nickname\">{myData?.username}</span>\n            <div className=\"upload-btn-wrapper\">\n              <Button\n                className=\"upload-btn\"\n                variant=\"contained\"\n                startIcon={<PhotoCamera />}\n                component=\"span\"\n                onClick={onClickUploadBtn}\n              >\n                Upload\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <NickNameChangeField />\n    </ProfileSettingContainer>\n  );\n};\n\nexport default ProfileSetting;\n","import React, { useEffect, useContext } from 'react';\nimport LeftSideBar from '@components/LeftSideBar';\nimport loadable from '@loadable/component';\nimport { IUser, IAllUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport { Route, Switch, useHistory, Link } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { Container } from './style';\nimport getSocket from '@utils/useSocket';\nimport { SocketContext } from '@store/socket';\nimport { toast } from 'react-toastify';\n\n// const Home = loadable(() => import('@pages/Home'));\n// const Social = loadable(() => import('@pages/Social'));\n// const Channels = loadable(() => import('@pages/Channels'));\n// const Profile = loadable(() => import('@pages/Profile'));\n// const Users = loadable(() => import('@pages/Users'));\n// const Achievements = loadable(() => import('@pages/Achievements'));\n// const Game = loadable(() => import('@pages/Game'));\n// const ProfileSetting = loadable(() => import('@pages/ProfileSetting'));\n\nimport Home from '@pages/Home';\nimport Profile from '@pages/Profile';\nimport Channels from '@pages/Channels';\nimport Social from '@pages/Social';\nimport Users from '@pages/Users';\nimport Achievements from '@pages/Achievements';\nimport Game from '@pages/Game';\nimport ProfileSetting from '@pages/ProfileSetting';\n\n\nconst Content = () => {\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: DMList } = useSWR<number[]>('/api/dms/dmlistOnlyIdJustArray', fetcher);\n  const { data: ChannelList } = useSWR<number[]>('/api/channels/myChannelListOnlyId', fetcher);\n  const { data: allUser } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n\n  const { setOnlineList, setOnGameList } = useContext(SocketContext);\n\n  const history = useHistory();\n\n  if (myData && myData.username === '') {\n    history.push('/login/first-step');\n  }\n\n  const socket = getSocket();\n\n  useEffect(() => {\n    socket?.on('onGameList', (data: any) => {\n      setOnGameList(data);\n      console.log(data);\n      console.log('onGameList !!!');\n    });\n    return () => {\n      socket.off('onGameList');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on('onlineList', (data: any) => {\n      setOnlineList(data);\n    });\n\n    return () => {\n      socket.off('onlineList');\n    };\n  }, [socket]);\n\n  useEffect(() => {\n    if (DMList && ChannelList && myData) {\n      socket.emit('login', {\n        userId: myData.userId,\n        username: myData.username,\n        Dms: DMList,\n        channels: ChannelList,\n      });\n    }\n  }, [socket, DMList, ChannelList, myData]);\n\n  useEffect(() => {\n    socket?.on('notice', (data: any) => {\n      if (data.match === 3) {\n        toast.info(`${data.username}가 게임을 신청 했습니다 DM을 확인해주세요..!`, {\n          autoClose: 7000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'dark',\n        });\n      } else if (data.match === 1) {\n        toast.info(`${data.username}과의 매치가 성사 되었습니다..!`, {\n          autoClose: 3000,\n          position: toast.POSITION.TOP_CENTER,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'dark',\n        });\n      }\n    });\n\n    return () => {\n      socket.off('notice');\n    };\n  }, [socket, allUser]);\n\n  if (!myData) return null;\n\n  return (\n    <Container>\n      <LeftSideBar />\n      <Switch>\n        <Route exact path=\"/home\" component={Home} />\n        <Route path=\"/social\" component={Social} />\n        <Route path=\"/channels\" component={Channels} />\n        <Route exact path=\"/users/:id\" component={Profile} />\n        <Route exact path=\"/users\" component={Users} />\n        <Route exact path=\"/achievements\" component={Achievements} />\n        <Route path=\"/game\" component={Game} />\n        <Route exact path=\"/profile/setting\" component={ProfileSetting} />\n        <Route exact path=\"/profile\" component={Profile} />\n      </Switch>\n    </Container>\n  );\n};\n\nexport default Content;\n","import getToken from '@utils/getToken';\n\nconst config = {\n\twithCredentials: true,\n\t// headers: {\n\t// \tAuthorization: `Bearer ${getToken()}`,\n\t// }\n}\n\nexport default config","import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router-dom';\n\n\nconst fetcher = (url: string): any => axios.get(url, {\n\twithCredentials: true,\n\t// headers: {\n\t// \tAuthorization: `Bearer ${getToken()}`,\n\t// }\n}).then((response) => response.data).catch((error) => {\n\n\ttoast.error(error.message, {\n\t\tautoClose: 4000,\n\t\tposition: toast.POSITION.TOP_RIGHT,\n\t\thideProgressBar: false,\n\t\tcloseOnClick: true,\n\t\tpauseOnHover: true,\n\t\ttheme: \"colored\"\n\t});\n\tif (error.response.data.code === 401) {\n\t\tsetTimeout(() => {\n\t\t\twindow.location.href = '/login';\n\t\t}, 4000);\n\n\t\t// const history = useHistory();\n\t\t// history.push('/login');\n\t} else if (error.response.data.data.message === \"ban 유저\") {\n\t\tsetTimeout(() => {\n\t\t\twindow.location.href = '/login';\n\t\t}, 4000);\n\t} else {\n\n\t\tsetTimeout(() => {\n\t\t\twindow.location.href = '/home';\n\t\t}, 4000);\n\t}\n\treturn false;\n\n})\n\nexport default fetcher;","import io from 'socket.io-client';\nimport { useCallback } from 'react';\n\nlet socket: any = undefined;\n\nconst getSocket = (() => {\n\n\tif (!socket) {\n\t\tsocket = io.connect('http://13.209.169.93:8081');\n\t}\n\n\treturn socket;\n})\n\nexport default getSocket;"],"names":["ModalBackground","styled","ModalContent","ButtonContainer","content","NoBtn","YesBtn","headerContent","onClick","className","Error","IconButton","Close","Button","variant","LeftSideBarContainer","Toolbar","NavIcons","StyledBadge","muiStyled","Badge","theme","marginBottom","cursor","backgroundColor","color","boxShadow","palette","background","paper","position","top","left","borderRadius","animation","border","transform","opacity","MyFab","Fab","props","selected","useSWR","fetcher","data","mutate","useState","selectedIndex","setSelectedIndex","history","useHistory","handleListItemClick","event","index","onClickLogOut","useCallback","axios","config","then","getSocket","disconnect","push","catch","error","response","code","toast","message","autoClose","hideProgressBar","closeOnClick","pauseOnHover","to","Tooltip","title","placement","arrow","e","overlap","anchorOrigin","vertical","horizontal","Avatar","src","profile","alt","DashboardSharp","ConnectWithoutContact","Forum","Group","MilitaryTech","VideogameAsset","Logout","Container","onClickIntroduceToggle","isIntroduceModal","setIsIntroduceModal","preventDefault","prev","onClickQuickPlay","TextSnippet","PlayCircleFilledWhite","MyProfileCardContainer","Box","UserAvatar","isstate","useParams","id","myData","isAdmin","useContext","SocketContext","onlineList","onGameList","isState","userId","map","onlineUser","Card","CardContent","Typography","component","username","CardActions","Settings","ManageAccounts","disabled","UserProfileCardContainer","UserData","dmList","mutateDmList","isFriend","mutateisFriend","isBlock","mutateIsBlock","isAddFriendModal","setIsAddFriendModal","isRemoveFriendModal","setIsRemoveFriendModal","isBlockModal","setIsBlockModal","isRemoveBlockModal","setIsRemoveBlockModal","removeAllModals","onToggleAddFriendModal","onToggleRemoveFriendModal","onToggleBlockModal","onToggleRemoveBlockModal","onClickChallengeBtn","res","onClickWatchBtn","onClickAddFriendBtn","onClickRemoveFriendBtn","onClickAddBlockBtn","onClickRemoveBlockBtn","onClickMessageBtn","BasicModal","Gamepad","undefined","Visibility","PersonAddAlt1","PersonOff","Chat","UserMatchesContainer","UserMatchesListWrapper","UserMatchesResult","textColor","userData","userGameHistory","page","setPage","rowsPerPage","setRowsPerPage","key","historyId","List","isWinner","opponent","myPoint","opponentPoint","SentimentVerySatisfied","SentimentVeryDissatisfiedSharp","TablePagination","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","style","UserStatisticsContainer","MatchesCount","Grade","numOfWin","numOfLose","EmojiEvents","EventBusy","UserFriendCardContainer","ScrollbarColor","userFriendList","allUser","renderThumbVertical","friend","user","userId2","ListItem","button","ListItemText","primary","UserProfileAchieveCardContainer","AchieveBody","ProgressBar","width","dayjs","Icon","curValue","maxCount","header","condition","progress","setProgress","useEffect","timeout","setTimeout","number","star","clearTimeout","textAlign","time","format","friendCount","dedupingInterval","DmListCount","matchCount","winCount","loseCount","channelCount","ChatBubbleIcon","GroupsIcon","RecordVoiceOverIcon","LocalPoliceIcon","LightbulbIcon","SchoolIcon","LocalDiningIcon","LocalFireDepartmentIcon","BusinessIcon","ForumIcon","SendIcon","FacebookIcon","AirplanemodeActiveIcon","ShieldIcon","SecurityIcon","SportsBaseballIcon","StarIcon","GavelIcon","ProfileContainer","alluser","Grid","container","spacing","item","xs","sm","md","ProtectedRoomModalBack","ProtectedRoomModalContainer","channelPasswordModal","setChannelPasswordModal","channelPasswordRoomNumber","setChannelPasswordRoomNumber","mutateChannelList","mutateAllChannelList","password","showPassword","PasswordValues","setPasswordValues","passwordError","setPasswordError","handleClickShowPassword","handleChange","prop","handleMouseDownPassword","onClickModalClose","onSubmitPassword","FormControl","InputLabel","htmlFor","Input","type","onChange","endAdornment","InputAdornment","onMouseDown","VisibilityOff","ChannelBodyContainer","ChannelCard","ismobile","ChannelName","allChannelList","myChannelList","mutateMyChannelList","isMobile","useMediaQuery","maxWidth","onClickPublicRoom","channelId","onClickProtectedRoom","roomNumber","sx","flexGrow","Channel","flag","forEach","myChannel","CardActionArea","name","authId","Lock","ChannelHeaderContainer","AppBar","ChannelDiscoverContainer","channelList2","ChannelLeftDrawBarContainer","channelList","channelSearchInputValue","setChannelSearchInputValue","onChangeChannelSearchInput","indexOf","filter","channel","regex","RegExp","match","getChannelList","inputValue","autoComplete","ListItemButton","Flare","autoHide","channelMode","secondary","ChatBoxContainer","chat","onSubmitChat","setChat","chatBoxChat","setChatBoxChat","onChangeChatBoxChat","onSubmitChatBoxChat","Send","MyToolbar","onClickMembersToggle","membersToggle","bgcolor","Groups","ChannelChatListContainer","StickyHeader","customParseFormat","days","chatList","sections","chatData","scrollbarRef","setSize","isReachingEnd","blockList","onScroll","values","scrollTop","prevSize","current","getScrollHeight","scrollHeight","chatSections","flat","reverse","monthData","updatedAt","day","Array","isArray","ref","onScrollFrame","Object","entries","date","chats","isblock","blockUser","AdminBtn","btncolor","MatchDataContainer","ButtonGroupsContainer","channelUserList","isBlcok","myAuth","userAuth","channeluser","auth","onClickMuteBtn","onClickKickBtn","onClickBanBtn","onClickAppointAdmin","blockedUser","onClickSettingBtn","onClickChannelLeaveModal","onClickChannelInviteModal","onClickMember","memberList","isOwner","member","RecordVoiceOver","mute","VoiceOverOff","PersonAddAlt1Rounded","ExitToApp","Toast","InputCheck","NameErrorText","visible","ChannelFormContainer","ChannelCreateBtn","ErrorText","onSubmitChannelCreate","setVisibility","setName","createError","setCreateError","channelFormName","setChannelFormName","channelFormVisibility","setChannelFormVisibility","channelFormPasswordValues","setChannelFormPasswordValues","channelNameError","setChannelNameError","channelPasswordError","setChannelPasswordError","onChannelCreateFromBtn","onChangeFormName","onChangeFormVisibility","m","padding","noValidate","Select","labelId","label","MenuItem","settingToggle","channelListMutate","MutateAllChannelList","isChannelDeleteModal","setIsChannelDeleteModal","visibility","onClickChannelDeleteModal","DeleteClickChannelBtn","startIcon","Delete","ChannelInviteModalBackground","ChannelInviteModalContainer","setChannelInviteModal","memberListMutate","inviteValue","setInviteValue","inviteError","setInviteError","onClickInviteBtn","onChangeInviteInput","TextField","InputProps","startAdornment","PersonRounded","ChannelRoomContainer","mutateChannelMembers","myMute","mutateMyMute","useSWRInfinite","mutateChat","useRef","socket","setSettingToggle","setMembersToggle","channelLeaveModal","setChannelLeaveModal","channelInviteModal","setMessageRevalidate","trim","prevChatData","unshift","Date","msg","scrollToBottom","onClickChannelLeaveMdoalYes","onMessage","prevchatData","createdAt","getClientHeight","getScrollTop","isUnauthorized","on","off","ChannelRoomSettingModal","ChannelCreateContainer","mychannelList","exact","path","ChannelDiscover","render","ChannelRoom","FriendListContainer","users","friends","FriendsOnlineListContainer","MuiList","dmlist2","DMLeftDrawerContainer","DMListContainer","dmlist","dmSearchInputValue","setDMSearchInputValue","onChangeDMSearchInput","dm","getDMList","EmojiPeopleRounded","SocialSliderContainer","TabPannelBox","TabPanel","children","other","role","hidden","a11yProps","propTypes","PropTypes","useTheme","setValue","newValue","handleChangeIndex","DMLeftDrawer","Tabs","indicatorColor","Tab","axis","direction","onChangeIndex","DMChatHeaderContainer","DMChatListContainer","userId1","DirectMessageContainer","myDMList","isMobileHeader","dmId","borderLeft","margin","SocialSlider","DirectMessage","UsersListContainer","userList","searchedUserList","UsersContainer","Search","shape","alpha","common","white","marginLeft","breakpoints","up","SearchIconWrapper","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","Users","allUserList","userSearchInputValue","setUserSearchInputValue","onChangeUserSearchInput","getUserList","noWrap","placeholder","inputProps","UsersList","AchievementsContainer","MatchContainer","option","withCredentials","emit","gameId","Matching","matched","playerTwo","playerOne","CircularProgress","HistoryContainer","UserProfileContainer1","UserProfileContainer2","ProfileOneText","winner","ProfileTwoText","setUserId1","setUserId2","player1Point","setPlayer1Point","player2Point","setPlayer2Point","params","setWinner","userId1Nickname","setUserId1Nickname","userId2Nickname","setUserId2Nickname","winnerNickname","setWinnerNickname","userId1Profile","setUserId1Profile","userId2Profile","setUserId2Profile","user1Point","user2Point","getGameInfo","PixiContainer","PIXI","Rectangle","PixiComponent","applyProps","g","_","fill","x","y","clear","beginFill","drawRect","endFill","Circle","radius","drawCircle","mapSelect","player","setGameStartBtn","ball_x","setBallX","ball_y","setBallY","player_one_y","setPlayOneY","player_two_y","setPlayTwoY","gameInfo","playerInfo","document","addEventListener","keyCode","game","Stage","options","antialias","GameSettingContainer","player1Ready","player2Ready","setMapSelect","gameSpeed","setGameSpeed","gameCount","setGameCount","ballRandom","setBallRandom","onChangeSpeed","speed","set","random","onChangeMapSelect","onChangeGameCount","onChangeBallRandom","game_set","game_map","random_map","fullWidth","BackgroundHeight","PingPongContainer","GameReadyContainer","UserPointContainer","GameInitBtnContainer","setPlay1Ready","setPlay2Ready","setUser1Point","setUser2Point","setPlayer","isGameStart","setIsGameStart","setOpponent","opponentName","setOpponentName","setOpponentProfile","watchUserId1","setWatchUserId1","watchUserId2","setWatchUserId2","watchUserId1Profile","setWatchUserId1Profile","watchUserId2Profile","setWatchUserId2Profile","watchUserId1Name","setWatchUserId1Name","watchUserId2Name","setWatchUserId2Name","gameStartBtn","gameStart","state","playerTwoJoin","playerOneJoin","check","point","player1","player2","ready","readyPlayer1","readyPlayer2","changeGameSet","EventNote","Match","PingPong","History","TwoFactorSwitchBack","TwoFactorSwitchContainer","isTwoFactor","checked","setChecked","imgsrc","setImgsrc","isQRModal","setisQRModal","OTPvalue","setOTPvalue","onSubmitOTPvalue","onChangeOTPinput","responseType","window","URL","createObjectURL","Blob","headers","onClickQRModal","onKeyPress","Switch","ProfileSettingContainer","EditNickNameWrapper","NickNameErrorContainer","mutateMyData","changeNickname","setChangeNickname","isNickError","setIsNickError","onChangeNickname","onKeyDownNickname","onKeyUp","selectedFile","setSelectedFile","imgUrl","setImgUrl","onClickUploadBtn","formData","FormData","append","slice","preview","reader","FileReader","onload","result","readAsDataURL","accept","multiple","files","PhotoCamera","DMList","ChannelList","setOnlineList","setOnGameList","console","log","Dms","channels","Home","Social","Channels","Profile","Achievements","Game","ProfileSetting","url","location","href","io"],"sourceRoot":""}