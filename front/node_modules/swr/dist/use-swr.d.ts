import { defaultConfig } from './utils/config';
import { Fetcher, Key, SWRResponse, FullConfiguration, SWRConfiguration, SWRHook } from './types';
export declare const useSWRHandler: <Data = any, Error_1 = any>(_key: Key, fn: Fetcher<Data> | null, config: import("./types").InternalConfiguration & import("./types").PublicConfiguration<any, any, Fetcher<any>> & Partial<import("./types").PublicConfiguration<Data, Error_1, Fetcher<Data>>>) => SWRResponse<Data, Error_1>;
export declare const SWRConfig: import("react").FC<{
    value?: (Partial<import("./types").PublicConfiguration<any, any, Fetcher<any>>> & Partial<import("./types").ConfigOptions> & {
        provider?: ((cache: Readonly<import("./types").Cache<any>>) => import("./types").Cache<any>) | undefined;
    }) | undefined;
}> & {
    default: FullConfiguration;
};
export declare const unstable_serialize: (key: Key) => string;
declare const _default: SWRHook;
export default _default;
