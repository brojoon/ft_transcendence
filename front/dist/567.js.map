{"version":3,"file":"567.js","mappings":"6OAEaA,E,QAAiBC,EAAAA,IAAH,I,EAAA,wM,kBAAA,E,wNCU3B,IAAMC,EAAS,CAIbC,iBAAiB,GAsFnB,EAnFc,WACZ,IAAcC,GAAWC,EAAAA,EAAAA,IAAqB,aAAcC,EAAAA,GAApDC,KACAC,GAAeC,EAAAA,EAAAA,YAAWC,EAAAA,GAA1BF,WAEFG,GAAUC,EAAAA,EAAAA,MACVC,GAASC,EAAAA,EAAAA,MAEfC,EAAAA,EAAAA,YAAU,WACJP,GAAcJ,GACZI,EAAWJ,EAAOY,UACpBL,EAAQM,KAAK,SACbC,EAAAA,GAAAA,MAAY,uBAAwB,CAClCC,UAAW,IACXC,SAAUF,EAAAA,GAAAA,SAAAA,UACVG,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,eAIZ,CAAChB,EAAYJ,KAEhBW,EAAAA,EAAAA,YAAU,WAKR,OAJIX,GACFS,EAAOY,KAAK,WAAY,CAAET,OAAQZ,MAAAA,OAAF,EAAEA,EAAQY,OAAQU,OAAQ,IAGrD,WACDtB,GACFS,EAAOY,KAAK,cAAe,CACzBT,OAAQZ,MAAAA,OAAF,EAAEA,EAAQY,YAIrB,CAACZ,EAAQS,IAEZ,IAAMc,GAAWC,EAAAA,EAAAA,aAAW,e,EAAA,G,EAAA,yBAC1B,WAAOC,GAAP,gGACQC,IAAAA,KAAA,+BAC0BD,EAAQE,UADlC,QACmD,CAAEC,QAAS,IAAM9B,GACvE+B,MAAK,SAACC,GACLrB,EAAOY,KAAK,WAAY,CAAET,OAAQZ,MAAAA,OAAF,EAAEA,EAAQY,OAAQU,OAAQQ,EAAI3B,OAC9DI,EAAQM,KAAR,0BAAgCiB,EAAI3B,UAErC4B,OAAM,SAACC,GACNlB,EAAAA,GAAAA,MAAYkB,EAAMJ,QAAS,CACzBb,UAAW,IACXC,SAAUF,EAAAA,GAAAA,SAAAA,UACVG,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,MAAO,YAETa,YAAW,WACT1B,EAAQM,KAAK,WACZ,QAlBT,0C,+KAD0B,sDAsB1B,CAACb,EAAQS,IAgBX,OAbAE,EAAAA,EAAAA,YAAU,WAQR,OAPAF,EAAOyB,GAAG,WAAW,SAACT,IAChBzB,MAAAA,OAAA,EAAAA,EAAQY,UAAWa,EAAQU,WAAgC,IAAnBV,EAAQH,OAClDC,EAASE,IACAzB,MAAAA,OAAA,EAAAA,EAAQY,UAAWa,EAAQE,WAAgC,IAAnBF,EAAQH,QACzDf,EAAQM,KAAR,0BAAgCY,EAAQH,YAGrC,WACLb,EAAO2B,IAAI,cAEZ,CAAC3B,EAAQT,EAAQuB,IAGlB,gBAAC3B,EAAD,KACE,gBAACyC,EAAA,EAAD,CAAkBC,UAAU,aAC5B","sources":["webpack://brojoon/./pages/Match/style.ts","webpack://brojoon/./pages/Match/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MatchContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100%;\n\tflex-direction: column;\n\theight: 100vh;\n\n\tcolor: white;\n\n\t& .progress {\n\t\tcolor: white;\n\t}\n`;","import React, { useCallback, useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport getSocket from '@utils/useSocket';\nimport { useHistory } from 'react-router-dom';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { MatchContainer } from './style';\nimport { toast } from 'react-toastify';\nimport { SocketContext } from '@store/socket';\n\nconst option = {\n  // headers: {\n  //   Authorization: `Bearer ${getCookie('ts_token', 1)}`,\n  // },\n  withCredentials: true,\n};\n\nconst Match = () => {\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { onGameList } = useContext(SocketContext);\n\n  const history = useHistory();\n  const socket = getSocket();\n\n  useEffect(() => {\n    if (onGameList && myData) {\n      if (onGameList[myData.userId]) {\n        history.push('/home');\n        toast.error('Already playing game', {\n          autoClose: 2000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      }\n    }\n  }, [onGameList, myData]);\n\n  useEffect(() => {\n    if (myData) {\n      socket.emit('matching', { userId: myData?.userId, gameId: 0 });\n    }\n\n    return () => {\n      if (myData) {\n        socket.emit('outMatching', {\n          userId: myData?.userId,\n        });\n      }\n    };\n  }, [myData, socket]);\n\n  const Matching = useCallback(\n    async (matched: any) => {\n      await axios\n        .post(`/api/dms/sendMessage/${matched.playerTwo}/1/0`, { message: '' }, option)\n        .then((res) => {\n          socket.emit('matching', { userId: myData?.userId, gameId: res.data });\n          history.push(`/game/ping-pong/${res.data}`);\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 4000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n          setTimeout(() => {\n            history.push('/home');\n          }, 4000);\n        });\n    },\n    [myData, socket],\n  );\n\n  useEffect(() => {\n    socket.on('matched', (matched: any) => {\n      if (myData?.userId === matched.playerOne && matched.gameId === 0) {\n        Matching(matched);\n      } else if (myData?.userId === matched.playerTwo && matched.gameId !== 0) {\n        history.push(`/game/ping-pong/${matched.gameId}`);\n      }\n    });\n    return () => {\n      socket.off('matched');\n    };\n  }, [socket, myData, Matching]);\n\n  return (\n    <MatchContainer>\n      <CircularProgress className=\"progress\" />\n      <h1>Waiting for opponent...</h1>\n    </MatchContainer>\n  );\n};\n\nexport default Match;\n"],"names":["MatchContainer","styled","option","withCredentials","myData","useSWR","fetcher","data","onGameList","useContext","SocketContext","history","useHistory","socket","getSocket","useEffect","userId","push","toast","autoClose","position","hideProgressBar","closeOnClick","pauseOnHover","theme","emit","gameId","Matching","useCallback","matched","axios","playerTwo","message","then","res","catch","error","setTimeout","on","playerOne","off","CircularProgress","className"],"sourceRoot":""}