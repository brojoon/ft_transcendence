{"version":3,"file":"4355.js","mappings":"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","sources":["webpack://brojoon/./components/TwoFactorSwitch/style.ts","webpack://brojoon/./components/TwoFactorSwitch/index.tsx","webpack://brojoon/./pages/ProfileSetting/style.ts","webpack://brojoon/./components/NickNameChangeField/style.ts","webpack://brojoon/./components/NickNameChangeField/index.tsx","webpack://brojoon/./pages/ProfileSetting/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const TwoFactorSwitchBack = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tz-index: 1000;\r\n\tbackground-color: rgba(30, 30, 030, 0.5);\r\n`;\r\n\r\nexport const TwoFactorSwitchContainer = styled.div`\r\n\tposition: absolute;\r\n\twidth: 500px;\r\n\theight: 550px;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tz-index: 2000;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tbackground-color: #1e1e1e;\r\n\tbox-shadow:\r\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n\t\r\n\t& .close-icon {\r\n\t\tcolor: white;\r\n\t\tmargin-left: 430px;\r\n\t}\r\n\r\n\t& .qr-img {\r\n\t\twidth: 400px;\r\n\t\theight: 400px;\r\n\t\tmargin: 10px 45px 0 45px;\r\n\t}\r\n\r\n\t& .text-field {\r\n\t\tmargin: 20px;\r\n\r\n\t}\r\n\r\n\t& .css-14s5rfu-MuiFormLabel-root-MuiInputLabel-root {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 0.6);\r\n\t}\r\n\r\n\t& .css-9ddj71-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 1);\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t`;","import React, { useCallback, useState, useEffect } from 'react';\r\nimport Switch from '@mui/material/Switch';\r\nimport axios from 'axios';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport TextField from '@mui/material/TextField';\r\nimport config from '@utils/config';\r\nimport { TwoFactorSwitchBack, TwoFactorSwitchContainer } from './style';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst TwoFactorSwitch = () => {\r\n  const { data: isTwoFactor } = useSWR<boolean>('/api/users/two-factor-status', fetcher);\r\n  const [checked, setChecked] = useState(false);\r\n  const [imgsrc, setImgsrc] = useState('');\r\n  const [isQRModal, setisQRModal] = useState(false);\r\n  const [OTPvalue, setOTPvalue] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (isTwoFactor) {\r\n      setChecked(isTwoFactor);\r\n    }\r\n  }, [isTwoFactor]);\r\n\r\n  const onSubmitOTPvalue = useCallback(\r\n    (e) => {\r\n      if (e.key === 'Enter') {\r\n        axios\r\n          .get(`/api/auth/otpCodeCheck/${OTPvalue}`, config)\r\n          .then((e) => {\r\n            if (e.data === true) {\r\n              setOTPvalue('');\r\n              axios\r\n                .get('/api/users/turn-on', config)\r\n                .then(() => {\r\n                  toast.success('Successfully authenticated', {\r\n                    autoClose: 4000,\r\n                    position: toast.POSITION.TOP_RIGHT,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    theme: 'colored',\r\n                  });\r\n                  setChecked(true);\r\n                  setisQRModal(false);\r\n                })\r\n                .catch((error) => {\r\n                  toast.error(error.message, {\r\n                    autoClose: 4000,\r\n                    position: toast.POSITION.TOP_RIGHT,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    theme: 'colored',\r\n                  });\r\n                });\r\n            } else {\r\n              toast.error('Authenticate failed', {\r\n                autoClose: 4000,\r\n                position: toast.POSITION.TOP_RIGHT,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                theme: 'colored',\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message, {\r\n              autoClose: 4000,\r\n              position: toast.POSITION.TOP_RIGHT,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              theme: 'colored',\r\n            });\r\n          });\r\n      }\r\n    },\r\n    [OTPvalue],\r\n  );\r\n\r\n  const onChangeOTPinput = useCallback(\r\n    (e) => {\r\n      setOTPvalue(e.target.value);\r\n    },\r\n    [OTPvalue],\r\n  );\r\n\r\n  const handleChange = useCallback((event: any) => {\r\n    if (event.target.checked === false) {\r\n      axios\r\n        .get('/api/users/turn-off', config)\r\n        .then(() => {\r\n          toast.success('Successfully turned off authentication', {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n          setChecked(false);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n          setChecked(true);\r\n        });\r\n    }\r\n    if (event.target.checked === true) {\r\n      axios\r\n        .get(`/api/auth/make-qrcode`, {\r\n          withCredentials: true,\r\n          responseType: 'blob',\r\n          // headers: {\r\n          //   Authorization: `Bearer ${getToken()}`,\r\n          // },\r\n        })\r\n        .then((res) => {\r\n          setImgsrc(\r\n            window.URL.createObjectURL(new Blob([res.data], { type: res.headers['content-type'] })),\r\n          );\r\n          setChecked(true);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.message, {\r\n            autoClose: 4000,\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            theme: 'colored',\r\n          });\r\n          setChecked(false);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const onClickQRModal = useCallback(() => {\r\n    if (checked) {\r\n      setChecked(false);\r\n      setisQRModal(false);\r\n    } else setisQRModal(true);\r\n  }, [isQRModal, checked]);\r\n\r\n  return (\r\n    <>\r\n      {isQRModal && checked && (\r\n        <>\r\n          <TwoFactorSwitchBack onClick={onClickQRModal}></TwoFactorSwitchBack>\r\n          <TwoFactorSwitchContainer>\r\n            <IconButton className=\"close-icon\" onClick={onClickQRModal}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <img className=\"qr-img\" src={imgsrc} />\r\n            <TextField\r\n              className=\"text-field\"\r\n              onKeyPress={onSubmitOTPvalue}\r\n              onChange={onChangeOTPinput}\r\n              value={OTPvalue}\r\n              id=\"outlined-basic\"\r\n              label=\"OTP\"\r\n              variant=\"outlined\"\r\n              autoComplete=\"off\"\r\n            />\r\n          </TwoFactorSwitchContainer>\r\n        </>\r\n      )}\r\n      <Switch\r\n        onClick={onClickQRModal}\r\n        checked={checked ? true : false}\r\n        onChange={handleChange}\r\n        inputProps={{ 'aria-label': 'controlled' }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TwoFactorSwitch;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ProfileSettingContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tcolor: white;\r\n\tmargin: 20px;\r\n\twidth: 100%;\r\n\tfont-size: 22px;\r\n\r\n\t& .security-wrapper {\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tpadding: 20px;\r\n\t\tbackground-color: #1e1e1e;\r\n\t}\r\n\r\n\t& .two-factor-wrapper {\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t& .user-avatar-container {\r\n\t\twidth: 100%;\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\tbackground-color: #1e1e1e;\r\n\t\tmargin-top: 25px;\r\n\t}\r\n\r\n\t& .user-avatar-wrapper {\r\n\t\tpadding: 20px 20px 20px 20px;\r\n\t}\r\n\r\n\t& .header-avatar {\r\n\t\theight: 70px;\r\n\t}\r\n\r\n\t& .user-avatar-upload-section {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t& .avatar-upload-wrapper {\r\n\t\tposition: relative;\r\n\t}\r\n\r\n\t& .upload-input {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t& .avatar {\r\n\t\twidth: 180px;\r\n\t\theight: 180px;\r\n\t}\r\n\r\n\t& .remove-btn {\r\n\t\tposition: absolute;\r\n\t\ttop: -5px;\r\n\t\tright: -20px;\r\n\t\tz-index: 10;\r\n\t}\r\n\r\n\t& .remove-icon {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .user-nickname {\r\n\t\tcolor: #52575d;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\r\n\t& .upload-btn-wrapper {\r\n\t\twidth: 100%;\r\n\t\tmargin-top: 12px;\r\n\t}\r\n\r\n\t& .upload-btn {\r\n\t\twidth: 100%;\r\n\t}\r\n\t\r\n`;\r\n\r\nexport const EditNickNameWrapper = styled.div`\r\n\tbackground-color: #1e1e1e;\r\n\tmargin-top: 25px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 20px;\r\n\r\n\r\n\t& .nick-input-label {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 0.6);\r\n\t}\r\n\r\n\t& .css-md26zr-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 1);\r\n\t}\r\n\r\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n`;\r\n\r\nexport const NickNameErrorContainer = styled.div<{ visibility: string }>`\r\n\tcolor: red; \r\n\tfont-size: 14px; \r\n\tmargin-top: 5px;\r\n\tvisibility: ${(props) => props.visibility};\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const EditNickNameWrapper = styled.div`\r\n\tbackground-color: #1e1e1e;\r\n\tmargin-top: 25px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tpadding: 20px;\r\n\r\n\r\n\t& .nick-input-label {\r\n\t\tmargin-bottom: 10px;\r\n\t}\r\n\r\n\t& .css-1d3z3hw-MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 0.6);\r\n\t}\r\n\r\n\t& .css-md26zr-MuiInputBase-root-MuiOutlinedInput-root:hover .MuiOutlinedInput-notchedOutline {\r\n\t\tborder-color: rgba(255, 255, 255, 1);\r\n\t}\r\n\r\n\t& .css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n`;\r\n\r\n\r\nexport const NickNameErrorContainer = styled.div<{ visibility: string }>`\r\n\tcolor: red; \r\n\tfont-size: 14px; \r\n\tmargin-top: 5px;\r\n\tvisibility: ${(props) => props.visibility};\r\n`;","import React, { useCallback, useState } from 'react';\r\nimport useSWR from 'swr';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport TextField from '@mui/material/TextField';\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { EditNickNameWrapper, NickNameErrorContainer } from './style';\r\n\r\nconst NickNameChangeField = () => {\r\n  const { data: myData, mutate: mutateMyData } = useSWR<IUser | null>('/api/users', fetcher);\r\n  const [changeNickname, setChangeNickname] = useState('');\r\n  const [isNickError, setIsNickError] = useState(0);\r\n\r\n  const onChangeNickname = useCallback((e) => {\r\n    e.preventDefault();\r\n    setChangeNickname(e.target.value);\r\n    setIsNickError(0);\r\n  }, []);\r\n\r\n  const onKeyDownNickname = useCallback(\r\n    (e) => {\r\n      if (!changeNickname) return;\r\n\r\n      if (changeNickname.length > 10) {\r\n        setIsNickError(2);\r\n        return;\r\n      }\r\n      if (e.key === 'Enter') {\r\n        e.preventDefault();\r\n        axios\r\n          .get(`/api/users/update-username/${changeNickname}`, {\r\n            withCredentials: true,\r\n          })\r\n          .then((res) => {\r\n            if (res.data === false) {\r\n              setIsNickError(1);\r\n              return;\r\n            } else {\r\n              toast.success('Successfully changed your nickname', {\r\n                autoClose: 4000,\r\n                position: toast.POSITION.TOP_RIGHT,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                theme: 'colored',\r\n              });\r\n              mutateMyData();\r\n              setChangeNickname('');\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message, {\r\n              autoClose: 4000,\r\n              position: toast.POSITION.TOP_RIGHT,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              theme: 'colored',\r\n            });\r\n          });\r\n      }\r\n    },\r\n    [mutateMyData, changeNickname],\r\n  );\r\n\r\n  return (\r\n    <EditNickNameWrapper>\r\n      <span className=\"nick-input-label\">Edit nickname</span>\r\n      <TextField\r\n        value={changeNickname}\r\n        onChange={onChangeNickname}\r\n        onKeyUp={onKeyDownNickname}\r\n        fullWidth\r\n        label=\"nickname\"\r\n        id=\"fullWidth\"\r\n        autoComplete=\"off\"\r\n      />\r\n      <NickNameErrorContainer visibility={isNickError === 0 ? 'hidden' : 'visiblle'}>\r\n        {isNickError && isNickError === 1 ? (\r\n          <span>This nickname is already in use by another user</span>\r\n        ) : (\r\n          <span>Nickname length limit is 10 characters</span>\r\n        )}\r\n      </NickNameErrorContainer>\r\n    </EditNickNameWrapper>\r\n  );\r\n};\r\n\r\nexport default NickNameChangeField;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TwoFactorSwitch from '@components/TwoFactorSwitch';\r\nimport useSWR from 'swr';\r\nimport { IUser } from '@typings/db';\r\nimport fetcher from '@utils/fetcher';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport axios from 'axios';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { ProfileSettingContainer } from './style';\r\nimport NickNameChangeField from '@components/NickNameChangeField';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst ProfileSetting = () => {\r\n  const { data: myData, mutate: mutateMyData } = useSWR<IUser | null>('/api/users', fetcher);\r\n  const [selectedFile, setSelectedFile] = useState<any>(null);\r\n  const [imgUrl, setImgUrl] = useState('');\r\n\r\n  const onChangeFile = (event: any) => {\r\n    setSelectedFile(event.target.files);\r\n  };\r\n\r\n  const onClickClearImg = () => {\r\n    setImgUrl('');\r\n    setSelectedFile(null);\r\n  };\r\n\r\n  const onClickUploadBtn = useCallback(() => {\r\n    if (!selectedFile || !selectedFile[0]) return;\r\n    const formData = new FormData();\r\n\r\n    formData.append(\r\n      'image',\r\n      selectedFile[0],\r\n      `${myData?.userId}` + selectedFile[0].name.slice(selectedFile[0]?.name?.indexOf('.')),\r\n    );\r\n    const config = {\r\n      withCredentials: true,\r\n      headers: {\r\n        'content-type': 'multipart/form-data',\r\n      },\r\n    };\r\n\r\n    axios\r\n      .post('/api/users/upload', formData, config)\r\n      .then((res) => {\r\n        toast.success('Successfully changed your profile picture', {\r\n          autoClose: 4000,\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          theme: 'colored',\r\n        });\r\n        mutateMyData();\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.message, {\r\n          autoClose: 4000,\r\n          position: toast.POSITION.TOP_RIGHT,\r\n          hideProgressBar: false,\r\n          closeOnClick: true,\r\n          pauseOnHover: true,\r\n          theme: 'colored',\r\n        });\r\n      });\r\n  }, [myData, selectedFile]);\r\n\r\n  useEffect(() => {\r\n    preview();\r\n  });\r\n\r\n  const preview = () => {\r\n    if (!selectedFile || !selectedFile[0]) return false;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = () => {\r\n      setImgUrl(`${reader.result}`);\r\n    };\r\n    reader.readAsDataURL(selectedFile[0]);\r\n  };\r\n  return (\r\n    <ProfileSettingContainer>\r\n      <div className=\"security-wrapper\">\r\n        <div>Security</div>\r\n        <div className=\"two-factor-wrapper\">\r\n          <TwoFactorSwitch />\r\n          <span>2-Factor Authentication</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"user-avatar-container\">\r\n        <div className=\"user-avatar-wrapper\">\r\n          <div className=\"header-avatar\">Avatar</div>\r\n          <div className=\"user-avatar-upload-section\">\r\n            <div className=\"avatar-upload-wrapper\">\r\n              <label htmlFor=\"contained-button-file\">\r\n                <input\r\n                  className=\"upload-input\"\r\n                  accept=\"image/*\"\r\n                  id=\"contained-button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={onChangeFile}\r\n                />\r\n                <Avatar className=\"avatar\" src={imgUrl ? imgUrl : myData?.profile} alt=\"Avatar\" />\r\n              </label>\r\n              <div className=\"remove-btn \" onClick={onClickClearImg}>\r\n                <IconButton className=\"remove-icon\">\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n            <span>{myData?.userId}</span>\r\n            <span className=\"user-nickname\">{myData?.username}</span>\r\n            <div className=\"upload-btn-wrapper\">\r\n              <Button\r\n                className=\"upload-btn\"\r\n                variant=\"contained\"\r\n                startIcon={<PhotoCamera />}\r\n                component=\"span\"\r\n                onClick={onClickUploadBtn}\r\n              >\r\n                Upload\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <NickNameChangeField />\r\n    </ProfileSettingContainer>\r\n  );\r\n};\r\n\r\nexport default ProfileSetting;\r\n"],"names":["TwoFactorSwitchBack","styled","TwoFactorSwitchContainer","isTwoFactor","useSWR","fetcher","data","useState","checked","setChecked","imgsrc","setImgsrc","isQRModal","setisQRModal","OTPvalue","setOTPvalue","useEffect","onSubmitOTPvalue","useCallback","e","key","axios","config","then","toast","autoClose","position","hideProgressBar","closeOnClick","pauseOnHover","theme","catch","error","message","onChangeOTPinput","target","value","handleChange","event","withCredentials","responseType","res","window","URL","createObjectURL","Blob","type","headers","onClickQRModal","onClick","IconButton","className","Close","src","TextField","onKeyPress","onChange","id","label","variant","autoComplete","Switch","inputProps","ProfileSettingContainer","props","visibility","EditNickNameWrapper","NickNameErrorContainer","mutateMyData","mutate","changeNickname","setChangeNickname","isNickError","setIsNickError","onChangeNickname","preventDefault","onKeyDownNickname","length","onKeyUp","fullWidth","myData","selectedFile","setSelectedFile","imgUrl","setImgUrl","onClickUploadBtn","formData","FormData","append","userId","name","slice","indexOf","preview","reader","FileReader","onload","result","readAsDataURL","htmlFor","accept","multiple","files","Avatar","profile","alt","username","Button","startIcon","PhotoCamera","component"],"sourceRoot":""}