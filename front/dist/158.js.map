{"version":3,"file":"158.js","mappings":"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","sources":["webpack://brojoon/./components/Achievement/style.ts","webpack://brojoon/./components/Achievement/index.tsx","webpack://brojoon/./components/BasicModal/style.ts","webpack://brojoon/./components/BasicModal/index.tsx","webpack://brojoon/./components/MyProfileCard/style.ts","webpack://brojoon/./components/MyProfileCard/index.tsx","webpack://brojoon/./components/UserProfileCard/style.ts","webpack://brojoon/./components/UserProfileCard/index.tsx","webpack://brojoon/./components/UserMatches/style.ts","webpack://brojoon/./components/UserMatches/index.tsx","webpack://brojoon/./components/UserStatistics/style.ts","webpack://brojoon/./components/UserStatistics/index.tsx","webpack://brojoon/./components/UserFriendCard/style.ts","webpack://brojoon/./components/UserFriendCard/index.tsx","webpack://brojoon/./components/UserProfileAchieveCard/style.ts","webpack://brojoon/./components/UserProfileAchieveCard/index.tsx","webpack://brojoon/./pages/Profile/style.ts","webpack://brojoon/./pages/Profile/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\n\t& .achieve-header {\n\t\tfont-size: 18px;\n\t\tfont-weight: 700;\n\t\tpadding: 15px 15px;\n\t\tborder-radius: 3px 3px 0 0;\n\t\tbackground-color: #1e1e1e;\n\t}\n\n\t& .header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\n\t& .content {\n\t\tfont-size: 14px;\n\t\tcolor: #bebebe;\n\t\tfont-weight: 600\n\t}\n`;\n\nexport const AchieveBody = styled.div`\n\tposition: relative;\n\ttext-align: center;\n\n\t& .progress-text {\n\t\t\tz-index: 15;\n\t\t\tposition: absolute;\n\t\t\tright: 50%;\n\t\t\ttransform: translateX(50%);\n\t\t\tline-height: 22px;\n\t\t\tfont-size: 12px;\n\t\t\twhite-space: nowrap;\n\t}\n\n\t& .progress-background {\n\t\tbackground-color: #253161;\n\t\twidth: 100%;\n\t\tfont-weight: 500;\n\t\tborder-radius: 0 0 3px 3px;\n\t\theight: 23px;\n\t}\n`;\n\nexport const ProgressBar = styled.div<{ width: string }>`\n  width: ${(props) => props.width};\n\tposition: absolute;\n\tz-index: 10;\n\tbackground-color: #365dff;\n\tfont-weight: 500;\n\tborder-radius: 0 0 3px 3px;\n\theight: 23px;\n\ttext-align: center;\n\ttransition: all ease-out 0.5s;\n`;","import React, { useEffect, useState, VFC } from 'react';\nimport { IAchievement } from '@typings/db';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/ko';\nimport { Container, AchieveBody, ProgressBar } from './style';\n\ninterface Props {\n  curValue: IAchievement | undefined;\n  maxCount: number;\n  Icon: any;\n  header: string;\n  condition: string;\n}\n\ndayjs.locale('ko');\n\nconst Achievement: VFC<Props> = ({ Icon, curValue, maxCount, header, condition }) => {\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      if (curValue?.number) {\n        if (maxCount <= curValue?.number && curValue?.star >= maxCount / 5) {\n          return;\n        } else if (progress < curValue?.number) {\n          setProgress((prev) => prev + 1);\n        }\n      }\n    }, 40);\n    return () => clearTimeout(timeout);\n  }, [progress, curValue, maxCount]);\n  return (\n    <Container>\n      <div className=\"achieve-header\">\n        <div className=\"header\">\n          <span>{header}</span>\n          <div>\n            <Icon />\n          </div>\n        </div>\n        <span className=\"content\">{condition}</span>\n      </div>\n      <AchieveBody style={{ position: 'relative', textAlign: 'center' }}>\n        <div className=\"progress-text\">\n          {curValue && (curValue?.star >= maxCount / 5 || curValue.number >= maxCount)\n            ? dayjs(curValue.time).format('YYYY. MM. DD. A HH:mm:ss')\n            : progress + ' / ' + maxCount}\n        </div>\n        <ProgressBar\n          width={`${\n            curValue && (curValue?.star >= maxCount / 5 || curValue?.number >= maxCount)\n              ? '100'\n              : (progress / maxCount) * 100\n          }%`}\n        ></ProgressBar>\n        <div className=\"progress-background\"></div>\n      </AchieveBody>\n    </Container>\n  );\n};\n\nexport default Achievement;\n","import styled from '@emotion/styled';\n\nexport const ModalBackground = styled.div`\n\tcolor: white;\n\tposition: fixed;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tz-index: 6000;\n\tbackground-color: rgba(30, 30, 030, 0.5);\n\n`;\n\nexport const ModalContent = styled.div`\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 400px;\n\tbackground-color: #1e1e1e;\n\tcolor: #979797;\n\topacity: 1;\n\tborder: 1px solid #1e1e1e;\n\tborder-radius: 4px;\n\tz-index: 7000;\n\ttransform: translate(-50%, -50%);\n\tbox-shadow:\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\n\n\t& .container {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tbackground-color: #fec107;\n\t}\n\n\t& .header {\n\t\tmargin: 1px 10px 0 8px;\n\t\tfont-size: 20px;\n\t\tcolor: white;\n\t\tdisplay: flex;\n\t}\n\n\t& .header-content {\n\t\tmargin: 0 0 0 4px;\n\t\tline-height: 22px;\n\t}\n\n\t& .header .emoji {\n\t\tcolor: white;\n\t}\n\n\t& .content {\n\t\tmargin: 10px;\n\t}\n`\n\nexport const ButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 15px;\n\tfont-weight: 600;\n\n\t& .noBtn {\n\t\tcolor: #979797;\n\t}\n`;","import React, { VFC } from 'react';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport { ModalBackground, ModalContent, ButtonContainer } from './style';\n\ninterface Props {\n  content: string;\n  headerContent: string;\n  NoBtn: (e: any) => void;\n  YesBtn: (e: any) => void;\n}\nconst BasicModal: VFC<Props> = ({ content, NoBtn, YesBtn, headerContent }) => {\n  return (\n    <>\n      <ModalBackground onClick={NoBtn}></ModalBackground>\n      <ModalContent>\n        <div className=\"container\">\n          <div className=\"header\">\n            <ErrorIcon className=\"emoji\" />\n            <div className=\"header-content\">{headerContent}</div>\n          </div>\n          <div>\n            <IconButton className=\"emoji\" onClick={NoBtn}>\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div className=\"content\">{content}</div>\n        <ButtonContainer>\n          <Button className=\"noBtn\" onClick={NoBtn} variant=\"text\">\n            NO\n          </Button>\n          <Button onClick={YesBtn} variant=\"text\">\n            YES\n          </Button>\n        </ButtonContainer>\n      </ModalContent>\n    </>\n  );\n};\n\nexport default BasicModal;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\n\n\nexport const MyProfileCardContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .card {\n\t\tbackground-color: #1e1e1e;\n\t\tcolor: white;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\twidth: 100%;\n\t\tpadding: 5px 10px 15px 10px;\n\t}\n\n\t& .card-content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t& .avatar {\n\n\t}\n\n\t& span {\n\t\tcolor: #52575d;\n\t\tfont-weight: 500;\n\t}\n\n\t& .card-actions {\n\t\tdisplay: flex;\n\t\tflexDirection: column;\n\t\tjustifyContent: center;\n\t\talignItems: center;\n\n\t}\n\n\t& .setting-link {\n\t\twidth: 100%;\n\t}\n\n\t& .setting-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #597aff;\n\t\tborder-color: #597aff;\n\t\tfont-weight: bold;\n\t}\n\n\t& .admin-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\n\t\tfont-weight: bold;\n\t}\n\n\t& .admin-btn:hover {\n\t\tbackground-color: rgba(255, 212, 0, 1);\n\n\t}\n\n\t& .admin-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939 !important;\n\t\tborder-color: #393939 !important;\n\t\tfont-weight: bold;\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 180px;\n\theight: 180px;\n\tmargin-bottom: 20px;\n`;","import React, { useContext, useEffect, useState } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport { Link, useParams } from 'react-router-dom';\nimport { IUser } from '@typings/db';\nimport { MyProfileCardContainer, UserAvatar } from './style';\nimport { SocketContext } from '@store/socket';\n\nconst MyProfileCard = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const { data: isAdmin } = useSWR<boolean>('/api/users/checkAdminOrModerator', fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState = 0;\n  if (onGameList && myData && onGameList[myData.userId]) isState = 2;\n  if (isState === 0 && onlineList && myData) {\n    onlineList.map((onlineUser) => {\n      if (onlineUser.userId === myData.userId) isState = 1;\n    });\n  }\n\n  return (\n    <MyProfileCardContainer>\n      <Card className=\"card\" variant=\"outlined\">\n        <CardContent className=\"card-content\">\n          <UserAvatar\n            isstate={`${\n              isState\n                ? isState === 1\n                  ? '2px solid #1ed14b'\n                  : '2px solid #FFD400'\n                : '2px solid #d63638'\n            }`}\n            src={myData?.profile}\n            alt=\"Avatar\"\n          />\n          <Typography variant=\"h5\" component=\"div\">\n            {myData?.userId}\n          </Typography>\n          <span>{myData?.username}</span>\n        </CardContent>\n        <CardActions className=\"card-actions\">\n          <Link to=\"/profile/setting\" className=\"setting-link\">\n            <Button className=\"setting-btn\" variant=\"contained\">\n              SETTING&nbsp;\n              <SettingsIcon />\n            </Button>\n          </Link>\n        </CardActions>\n        {isAdmin ? (\n          <CardActions className=\"card-actions\">\n            <Link to=\"/admin\" className=\"setting-link\">\n              <Button className=\"admin-btn\" variant=\"contained\">\n                ADMIN&nbsp;\n                <ManageAccountsIcon />\n              </Button>\n            </Link>\n          </CardActions>\n        ) : (\n          <CardActions className=\"card-actions\">\n            <Button className=\"admin-block-btn\" variant=\"contained\" disabled>\n              ADMIN&nbsp;\n              <ManageAccountsIcon />\n            </Button>\n          </CardActions>\n        )}\n      </Card>\n    </MyProfileCardContainer>\n  );\n};\n\nexport default MyProfileCard;\n","\nimport styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\nimport Avatar from '@mui/material/Avatar';\n\nexport const UserProfileCardContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .card-container {\n\t\tbackground-color: #1e1e1e;\n\t\tcolor: white;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t\twidth: 100%;\n\t\tpadding: 5px 10px 15px 10px;\n\t}\n\n\t& .card-content {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n\t& .card-user-text {\n\t\tcolor: #52575d;\n\t\tfont-weight: 500;\n\t}\n\n\t& .card-action {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-betweens;\n\t}\n\n\t& .challenge-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t}\n\n\t& .watch-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 212, 0, 0.9);\n\t\tfont-weight: bold;\n\t}\n\n\t& .watch-btn:hover {\n\t\tbackground-color: rgba(255, 212, 0, 1);\n\t}\n\n\t& .challenge-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(22, 120, 209, 0.8);\n\t\tfont-weight: bold;\n\t}\n\n\t& .challenge-btn:hover\t {\n\t\tbackground-color: rgba(22, 120, 209, 1);\n\t}\n\n\t& .friend-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .friend-unfriend-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(30, 30, 30, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t\tcolor: #ec3f31;\n\t}\n\n\t& .friend-unfriend-btn:hover {\n\t\tbackground-color: rgba(30, 30, 30, 1);\n\t}\n\n\n\t& .friend-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(94, 189, 255, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .friend-btn:hover {\n\t\tbackground-color: rgba(94, 189, 255, 1);\n\t}\n\n\t& .unblock-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: red;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(255, 0, 0, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .block-btn:hover {\n\t\tbackground-color: rgba(255, 0, 0, 1);\n\t}\n\n\t& .message-block-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: #393939;\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .message-btn {\n\t\twidth: 100%;\n\t\theight: 35px;\n\t\tbackground-color: rgba(156, 250, 36, 0.8);\n\t\tfont-weight: bold;\n\t\tmargin: 20px 0 0 0;\n\t}\n\n\t& .message-btn:hover {\n\t\tbackground-color: rgba(156, 250, 36, 1);\n\t}\n`;\n\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\twidth: 180px;\n\theight: 180px;\n\tmargin-bottom: 20px;\n`;","import React, { useCallback, VFC, useState, useContext } from 'react';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { IUser, IDmList } from '@typings/db';\nimport PersonOffIcon from '@mui/icons-material/PersonOff';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport PersonAddAlt1Icon from '@mui/icons-material/PersonAddAlt1';\nimport GamepadIcon from '@mui/icons-material/Gamepad';\nimport axios from 'axios';\nimport BasicModal from '@components/BasicModal';\nimport config from '@utils/config';\nimport { UserProfileCardContainer, UserAvatar } from './style';\nimport { SocketContext } from '@store/socket';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport { toast } from 'react-toastify';\n\ninterface Props {\n  UserData: IUser;\n}\n\nconst UserProfileCard: VFC<Props> = ({ UserData }) => {\n  const { id } = useParams<{ id: string }>();\n  const { data: dmList, mutate: mutateDmList } = useSWR<IDmList[]>('/api/dms/dmlist', fetcher);\n  const { data: isFriend, mutate: mutateisFriend } = useSWR<boolean>(\n    `/api/friend/checkfriend/${id}`,\n    fetcher,\n  );\n  const { data: isBlock, mutate: mutateIsBlock } = useSWR<boolean>(\n    `/api/friend/checkblock/${id}`,\n    fetcher,\n  );\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  const history = useHistory();\n  const [isAddFriendModal, setIsAddFriendModal] = useState(false);\n  const [isRemoveFriendModal, setIsRemoveFriendModal] = useState(false);\n  const [isBlockModal, setIsBlockModal] = useState(false);\n  const [isRemoveBlockModal, setIsRemoveBlockModal] = useState(false);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState = 0;\n  if (onGameList && onGameList[UserData?.userId]) isState = 2;\n  if (isState === 0 && onlineList && UserData) {\n    onlineList.map((onlineUser) => {\n      if (onlineUser.userId === UserData.userId) isState = 1;\n    });\n  }\n\n  const removeAllModals = useCallback(() => {\n    setIsAddFriendModal(false);\n    setIsBlockModal(false);\n    setIsRemoveBlockModal(false);\n    setIsRemoveFriendModal(false);\n  }, []);\n\n  const onToggleAddFriendModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsAddFriendModal((prev) => !prev);\n    },\n    [isAddFriendModal, setIsAddFriendModal],\n  );\n\n  const onToggleRemoveFriendModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsRemoveFriendModal((prev) => !prev);\n    },\n    [isRemoveFriendModal, setIsRemoveFriendModal],\n  );\n\n  const onToggleBlockModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsBlockModal((prev) => !prev);\n    },\n    [isBlockModal, setIsBlockModal],\n  );\n\n  const onToggleRemoveBlockModal = useCallback(\n    (e) => {\n      e.preventDefault();\n      setIsRemoveBlockModal((prev) => !prev);\n    },\n    [isRemoveBlockModal, setIsRemoveBlockModal],\n  );\n\n  const onClickChallengeBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .post(`/api/dms/sendMessage/${UserData.userId}/3/0`, { message: '' }, config)\n      .then((res) => {\n        history.push(`/game/ping-pong/${res.data}`);\n      })\n      .catch((error) => {\n        if (error.response.data.data.message === 'Block 상태') {\n          toast.error(`You were blocked by ${UserData.username}`, {\n            autoClose: 3000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        } else {\n          toast.error(error.message, {\n            autoClose: 3000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n\n  const onClickWatchBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (onGameList) history.push(`/game/ping-pong/${onGameList[UserData.userId]}`);\n    },\n    [onGameList],\n  );\n\n  const onClickAddFriendBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/addfriend/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        removeAllModals();\n      })\n      .catch((error) => {\n        if (error.response.data.data.message === 'Block 상태') {\n          toast.error(`You were blocked by ${UserData.username}`, {\n            autoClose: 3000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        } else {\n          toast.error(error.message, {\n            autoClose: 3000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        }\n      });\n  }, []);\n\n  const onClickRemoveFriendBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/removefriend/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 3000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickAddBlockBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/addblock/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        mutateIsBlock();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 3000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickRemoveBlockBtn = useCallback((e) => {\n    e.preventDefault();\n    axios\n      .get(`/api/friend/removeblock/${UserData.userId}`, config)\n      .then(() => {\n        mutateisFriend();\n        mutateIsBlock();\n        removeAllModals();\n      })\n      .catch((error) => {\n        toast.error(error.message, {\n          autoClose: 3000,\n          position: toast.POSITION.TOP_RIGHT,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          theme: 'colored',\n        });\n      });\n  }, []);\n\n  const onClickMessageBtn = useCallback(\n    (e) => {\n      e.preventDefault();\n      axios\n        .get(`/api/dms/create/${UserData.userId}`, config)\n        .then((res) => {\n          mutateDmList().then(() => {\n            history.push(`/social/dm/${res.data}`);\n          });\n        })\n        .catch((error) => {\n          toast.error(error.message, {\n            autoClose: 3000,\n            position: toast.POSITION.TOP_RIGHT,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            theme: 'colored',\n          });\n        });\n    },\n    [UserData, mutateDmList, dmList],\n  );\n\n  return (\n    <UserProfileCardContainer>\n      {isAddFriendModal && (\n        <BasicModal\n          headerContent={`Add ${id}`}\n          content={`Are you sure you want to add ${id} to your friends?`}\n          NoBtn={onToggleAddFriendModal}\n          YesBtn={onClickAddFriendBtn}\n        />\n      )}\n      {isRemoveFriendModal && (\n        <BasicModal\n          headerContent={`Remove ${id}`}\n          content={`Are you sure you want to permanently remove ${id} from your friends?`}\n          NoBtn={onToggleRemoveFriendModal}\n          YesBtn={onClickRemoveFriendBtn}\n        />\n      )}\n      {isBlockModal && (\n        <BasicModal\n          headerContent={`Block ${id}`}\n          content={`Are you sure you want to block ${id}? It will be removed from your friend list too.`}\n          NoBtn={onToggleBlockModal}\n          YesBtn={onClickAddBlockBtn}\n        />\n      )}\n      {isRemoveBlockModal && (\n        <BasicModal\n          headerContent={`UnBlock ${id}`}\n          content={`Are you sure you want to unblock ${id}?`}\n          NoBtn={onToggleRemoveBlockModal}\n          YesBtn={onClickRemoveBlockBtn}\n        />\n      )}\n\n      <Card className=\"card-container\" variant=\"outlined\">\n        <CardContent className=\"card-content\">\n          <UserAvatar\n            isstate={`${\n              isState\n                ? isState === 1\n                  ? '2px solid #1ed14b'\n                  : '2px solid #FFD400'\n                : '2px solid #d63638'\n            }`}\n            src={UserData?.profile}\n            alt=\"Avatar\"\n          />\n          <Typography variant=\"h5\" component=\"div\">\n            {UserData?.userId}\n          </Typography>\n          <span className=\"card-user-text\">{UserData?.username}</span>\n        </CardContent>\n        <CardActions className=\"card-action\">\n          {isBlock ? (\n            <Button className=\"challenge-block-btn\" variant=\"contained\" disabled>\n              BLOCKED&nbsp;\n              <GamepadIcon />\n            </Button>\n          ) : isState === 2 && onGameList && myData && onGameList[myData?.userId] === undefined ? (\n            <Button onClick={onClickWatchBtn} variant=\"contained\" className=\"watch-btn\">\n              WATCH&nbsp;\n              <VisibilityIcon />\n            </Button>\n          ) : onGameList && myData && onGameList[myData?.userId] ? (\n            <Button variant=\"contained\" className=\"challenge-block-btn\" disabled>\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          ) : (\n            <Button onClick={onClickChallengeBtn} variant=\"contained\" className=\"challenge-btn\">\n              CHALLENGE&nbsp;\n              <GamepadIcon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button variant=\"contained\" disabled className=\"friend-block-btn\">\n              BLOCKED&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : isFriend ? (\n            <Button\n              onClick={onToggleRemoveFriendModal}\n              variant=\"contained\"\n              className=\"friend-unfriend-btn\"\n            >\n              UNFRIEND&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : (\n            <Button className=\"friend-btn\" onClick={onToggleAddFriendModal} variant=\"contained\">\n              FRIEND&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button className=\"unblock-btn\" onClick={onToggleRemoveBlockModal} variant=\"contained\">\n              UNBLOCK&nbsp;\n              <PersonAddAlt1Icon />\n            </Button>\n          ) : (\n            <Button className=\"block-btn\" onClick={onToggleBlockModal} variant=\"contained\">\n              BLOCK&nbsp;\n              <PersonOffIcon />\n            </Button>\n          )}\n          {isBlock ? (\n            <Button className=\"message-block-btn\" variant=\"contained\" disabled>\n              BLOCKED&nbsp;\n              <ChatIcon />\n            </Button>\n          ) : (\n            <Button className=\"message-btn\" onClick={onClickMessageBtn} variant=\"contained\">\n              MESSAGE&nbsp;\n              <ChatIcon />\n            </Button>\n          )}\n        </CardActions>\n      </Card>\n    </UserProfileCardContainer>\n  );\n};\n\nexport default UserProfileCard;\n","import styled from '@emotion/styled';\n\nexport const UserMatchesContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\n\t& .profile-matches-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .profile-pagination-wrapper {\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\n\t\tcolor: white;\n\n\t}\n\n\t& .profile-pagination-wrapper {\n\t\tcolor: white;\n\t}\n\t& .profile-pagination {\n\t\toverflow: hidden;\n\t}\n\n\t& .css-1mf6u8l-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: white;\n\t}\n\n\t& .css-pqjvzy-MuiSvgIcon-root-MuiSelect-icon {\n\t\tcolor: white;\n\t}\n\t\n`;\n\nexport const UserMatchesListWrapper = styled.div`\n\n  & .list-item-wrapper {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-top: 1px solid rgba(57, 57, 57, 0.7);\n\t\tpadding: 6px 15px;\n\t\tcolor: white;\n\t}\n\n\t& .list-item-wrapper:hover {\n\t\tbackground: #666666;\n\t}\n\n\t& .avatar {\n\t\twidth: 56px;\n\t\theight: 56px;\n\t}\n\n\t& .opponent-text {\n\t\tcolor: white;\n\t}\n\n\t& .user-text {\n\t\tcolor: white;\n\t}\n\n\t& .user-matches-icon-win {\n\t\tfont-size: 34px;\n\t\tcolor: #ffe937;\n\t}\n\t& .user-matches-icon-lose {\n\t\tfont-size: 34px;\n\t\tcolor: #ec443b;\n\t}\n\n\t& .matches-text {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\twidth: 63%;\n\t}\n`;\n\nexport const UserMatchesResult = styled.div<{ textColor: string }>`\n\tcolor: ${((props) => props.textColor)};\n`;","import React, { VFC, useState } from 'react';\nimport { IUser } from '@typings/db';\nimport useSWR from 'swr';\nimport fetcher from '@utils/fetcher';\nimport { UserMatchesContainer, UserMatchesListWrapper, UserMatchesResult } from './style';\nimport TablePagination from '@mui/material/TablePagination';\nimport SentimentVeryDissatisfiedSharpIcon from '@mui/icons-material/SentimentVeryDissatisfiedSharp';\nimport SentimentVerySatisfiedIcon from '@mui/icons-material/SentimentVerySatisfied';\nimport { Link } from 'react-router-dom';\nimport Avatar from '@mui/material/Avatar';\nimport List from '@mui/material/List';\nimport { IUserGameHistory } from '@typings/db';\n\ninterface Props {\n  userData: IUser | null | undefined;\n}\n\nconst UserMatches: VFC<Props> = ({ userData }) => {\n  const { data: userGameHistory } = useSWR<IUserGameHistory[]>(\n    `/api/game/history/userGameHistory/${userData?.userId}`,\n    fetcher,\n  );\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangePage = (e: any, newPage: any) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (e: any) => {\n    setRowsPerPage(parseInt(e.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <UserMatchesContainer>\n      <div className=\"profile-matches-header\">Matches</div>\n      {userGameHistory?.map((history, index) => {\n        if (index >= rowsPerPage * (page + 1)) return;\n        if (page > 0) {\n          if (index < rowsPerPage * page) return;\n        }\n        return (\n          <UserMatchesListWrapper key={history.historyId}>\n            <Link to={`/game/history/${history.historyId}`}>\n              <List className=\"list-item-wrapper\">\n                <Avatar className=\"avatar\" src={userData?.profile} alt=\"Avatar\" />\n                <div className=\"matches-text\">\n                  <UserMatchesResult textColor={history?.isWinner ? '#ffe937' : '#ec443b'}>\n                    {history?.isWinner ? 'Won' : 'Lost'}\n                    <span className=\"opponent-text\"> against {history?.opponent}</span>\n                  </UserMatchesResult>\n                  <span className=\"\">{history?.myPoint + ' - ' + history?.opponentPoint}</span>\n                </div>\n\n                {history?.isWinner ? (\n                  <SentimentVerySatisfiedIcon className=\"user-matches-icon-win\" />\n                ) : (\n                  <SentimentVeryDissatisfiedSharpIcon className=\"user-matches-icon-lose\" />\n                )}\n              </List>\n            </Link>\n          </UserMatchesListWrapper>\n        );\n      })}\n      <div className=\"profile-pagination-wrapper\">\n        <TablePagination\n          className=\"profile-pagination\"\n          component=\"div\"\n          count={userGameHistory ? userGameHistory?.length : 0}\n          page={page}\n          onPageChange={handleChangePage}\n          rowsPerPage={rowsPerPage}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n          style={{ color: 'white' }}\n        />\n      </div>\n    </UserMatchesContainer>\n  );\n};\n\nexport default UserMatches;\n","import styled from '@emotion/styled';\n\nexport const UserStatisticsContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor:white;\n\twidth: 100%;\n\theight: 270px;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\tpadding: 5px 10px 15px 10px;\n\tmargin-top: 15px;\n\tfont-size: 20px;\n\twhite-space: nowrap;\n\n\t& .statistics-header {\n\t\tfont-size: 22px;\n\t\tmargin: 10px 0 15px 10px;\n\t}\n\n\t& .statistics-count-wrapper {\n\t\tmargin: 10px;\n\t\tdisplay: flex;\n\n\t}\n\n\t& .statistics-match-icon {\n\t\tfont-size: 45px;\n\n\t}\n\n\t& .statistics-match-text {\n\t\twidth: 100%;\n\t\tmargin-left: 15px;\n\t\tline-height: 40px;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n`;","import React, { VFC } from 'react';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport EventBusyIcon from '@mui/icons-material/EventBusy';\nimport { IUserMatches, IUser } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport GradeIcon from '@mui/icons-material/Grade';\nimport { UserStatisticsContainer } from './style';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserStatistics: VFC<Props> = ({ userData }) => {\n  const { data: MatchesCount } = useSWR<IUserMatches>(\n    `/api/game/history/userWinLoseFight/${userData?.userId}`,\n    fetcher,\n  );\n\n  return (\n    <UserStatisticsContainer>\n      <div className=\"statistics-header\">Statistics</div>\n      <div className=\"statistics-count-wrapper \">\n        <GradeIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>RATING</span>\n          <span>\n            {MatchesCount &&\n              (2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14 < 0\n                ? 0\n                : 2000 + (MatchesCount?.numOfWin - MatchesCount?.numOfLose) * 14)}\n          </span>\n        </div>\n      </div>\n      <div className=\"statistics-count-wrapper \">\n        <EmojiEventsIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>Win Count</span>\n          <span>{MatchesCount?.numOfWin}</span>\n        </div>\n      </div>\n      <div className=\"statistics-count-wrapper \">\n        <EventBusyIcon className=\"statistics-match-icon\" />\n        <div className=\"statistics-match-text\">\n          <span>Loss Count</span>\n          <span>{MatchesCount?.numOfLose}</span>\n        </div>\n      </div>\n    </UserStatisticsContainer>\n  );\n};\n\nexport default UserStatistics;\n","import styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\n\n\nexport const UserFriendCardContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\theight: 300px;\n\n\t& .friends-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .list-item-wrapper {\n\t\tcolor: white;\n\t}\n\n\t& .list-item-wrapper:hover {\n\t\tbackground-color: rgba(74,75,84,0.5);\n\t}\n\n\t& .user {\n\t\tmargin-left: 12px;\n\t}\n\n\t& .no-friend-wrapper {\n\t\tdisplay: flex;\n\t\theight: 100%;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t}\n\n`;\n\nexport const UserAvatar = styled(Avatar) < { isstate: string }>`\n\tborder: ${(props) => props.isstate};\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { VFC, useContext } from 'react';\nimport { UserFriendCardContainer, UserAvatar, ScrollbarColor } from './style';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { IFriendList, IAllUser } from '@typings/db';\nimport Avatar from '@mui/material/Avatar';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport { Link } from 'react-router-dom';\nimport { SocketContext } from '@store/socket';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserFriendCard: VFC<Props> = ({ userData }) => {\n  const { data: userFriendList } = useSWR<IFriendList[]>(\n    `/api/friend/friends/${userData?.userId}`,\n    fetcher,\n  );\n  const { data: allUser } = useSWR<IAllUser[], any[]>('/api/users/alluser', fetcher);\n  const { onlineList, onGameList } = useContext(SocketContext);\n  let isState;\n  return (\n    <UserFriendCardContainer>\n      <div className=\"friends-header\">Friends</div>\n      {userFriendList?.length ? (\n        <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n          <div>\n            {userFriendList?.map((friend) => {\n              return allUser?.map((user: IAllUser) => {\n                if (friend.userId2 === user.userId) {\n                  isState = 0;\n                  if (onGameList && onGameList[user.userId]) isState = 2;\n\n                  if (isState === 0) {\n                    onlineList?.map((onlineUser) => {\n                      if (onlineUser.userId === user.userId) isState = 1;\n                    });\n                  }\n                  return (\n                    <Link to={`/users/${user?.userId}`} key={user.userId}>\n                      <ListItem className=\"list-item-wrapper\" button>\n                        <UserAvatar\n                          isstate={`${\n                            isState\n                              ? isState === 1\n                                ? '2px solid #1ed14b'\n                                : '2px solid #FFD400'\n                              : '2px solid #d63638'\n                          }`}\n                          src={user?.profile}\n                          alt=\"Avatar\"\n                        />\n                        <ListItemText className=\"user\" primary={user?.username} />\n                      </ListItem>\n                    </Link>\n                  );\n                }\n              });\n            })}\n          </div>\n        </Scrollbars>\n      ) : (\n        <div className=\"no-friend-wrapper\">\n          <span>no friend found</span>\n        </div>\n      )}\n    </UserFriendCardContainer>\n  );\n};\n\nexport default UserFriendCard;\n","import styled from '@emotion/styled';\n\nexport const UserProfileAchieveCardContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tcolor: white;\n\tfont-size: 16px;\n\twidth: 100%;\n\tbackground-color: #1e1e1e;\n\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\tmargin-bottom: 15px;\n\theight: 320px;\n\n\t& .achievements-header {\n\t\tmargin: 18px;\n\t\tfont-size: 22px;\n\t}\n\n\t& .achievements-achievement {\n\t\tmargin: 15px;\n\t\tborder: 1px solid rgba(57, 57, 57, 0.7);\n\t}\n\n`;\n\nexport const ScrollbarColor = styled.div`\n  ...style;\n  background-color: #787c7f;\n  width: 8px;\n  border-radius: 5px;\n\n\t&:hover {\n\t\tbackground-color: white;\n\t}\n`;","import React, { VFC } from 'react';\nimport { UserProfileAchieveCardContainer, ScrollbarColor } from './style';\nimport { IAchievement } from '@typings/db';\nimport fetcher from '@utils/fetcher';\nimport useSWR from 'swr';\nimport { IUser } from '@typings/db';\nimport Achievement from '@components/Achievement';\nimport Scrollbars from 'react-custom-scrollbars';\nimport StarIcon from '@mui/icons-material/Star';\nimport BusinessIcon from '@mui/icons-material/Business';\nimport SendIcon from '@mui/icons-material/Send';\nimport GroupsIcon from '@mui/icons-material/Groups';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport RecordVoiceOverIcon from '@mui/icons-material/RecordVoiceOver';\nimport ChatBubbleIcon from '@mui/icons-material/ChatBubble';\nimport ForumIcon from '@mui/icons-material/Forum';\nimport AirplanemodeActiveIcon from '@mui/icons-material/AirplanemodeActive';\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport LocalDiningIcon from '@mui/icons-material/LocalDining';\nimport ShieldIcon from '@mui/icons-material/Shield';\nimport SecurityIcon from '@mui/icons-material/Security';\nimport LocalPoliceIcon from '@mui/icons-material/LocalPolice';\nimport SchoolIcon from '@mui/icons-material/School';\nimport LocalFireDepartmentIcon from '@mui/icons-material/LocalFireDepartment';\nimport GavelIcon from '@mui/icons-material/Gavel';\n\ninterface Props {\n  userData: IUser | undefined | null;\n}\n\nconst UserProfileAchieveCard: VFC<Props> = ({ userData }) => {\n  const { data: friendCount } = useSWR<IAchievement>(\n    `/api/friend/countFriends/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: DmListCount } = useSWR<IAchievement>(\n    `/api/dms/getDmListNumber/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: matchCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfFight/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: winCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfWin/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: loseCount } = useSWR<IAchievement>(\n    `/api/game/achievement/numOfLose/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  const { data: channelCount } = useSWR<IAchievement>(\n    `/api/channels/achievement/numOfChannels/${userData?.userId}`,\n    fetcher,\n    {\n      dedupingInterval: 10000,\n    },\n  );\n  return (\n    <UserProfileAchieveCardContainer>\n      <div className=\"achievements-header\">Achievements</div>\n      <Scrollbars renderThumbVertical={({ style, ...props }) => <ScrollbarColor {...props} />}>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ChatBubbleIcon}\n            maxCount={5}\n            curValue={channelCount}\n            header={'Channels member'}\n            condition={'Join 5 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={GroupsIcon}\n            maxCount={10}\n            curValue={friendCount}\n            header={'Small group'}\n            condition={'Have 10 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={RecordVoiceOverIcon}\n            maxCount={30}\n            curValue={DmListCount}\n            header={'Chatterbox '}\n            condition={'DM to 30 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalPoliceIcon}\n            maxCount={15}\n            curValue={loseCount}\n            header={'Captain America'}\n            condition={'Lose 15 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LightbulbIcon}\n            maxCount={5}\n            curValue={matchCount}\n            header={'Welcome newbie '}\n            condition={'Match 5 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SchoolIcon}\n            maxCount={30}\n            curValue={matchCount}\n            header={'Alumnus'}\n            condition={'Match 30 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalDiningIcon}\n            maxCount={5}\n            curValue={winCount}\n            header={'Warriors'}\n            condition={'Win 5 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={LocalFireDepartmentIcon}\n            maxCount={15}\n            curValue={winCount}\n            header={'Fighter'}\n            condition={'Win 15 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={BusinessIcon}\n            maxCount={5}\n            curValue={friendCount}\n            header={'Businesses with 5 employees'}\n            condition={'Have 5 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ForumIcon}\n            maxCount={60}\n            curValue={channelCount}\n            header={'Community member'}\n            condition={'Join 60 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SendIcon}\n            maxCount={5}\n            curValue={DmListCount}\n            header={'Paper Airplane'}\n            condition={'DM to 5 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={FacebookIcon}\n            maxCount={150}\n            curValue={channelCount}\n            header={'Addicted to social media'}\n            condition={'Join 150 channels'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={AirplanemodeActiveIcon}\n            maxCount={300}\n            curValue={matchCount}\n            header={'Air Force Medal of honor'}\n            condition={'Match 300 times'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={ShieldIcon}\n            maxCount={5}\n            curValue={loseCount}\n            header={'Shield'}\n            condition={'Lose 5 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SecurityIcon}\n            maxCount={100}\n            curValue={loseCount}\n            header={'Aegis'}\n            condition={'Lose 100 games'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={SportsBaseballIcon}\n            maxCount={100}\n            curValue={DmListCount}\n            header={'Chan Ho Park '}\n            condition={'DM to 100 people'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={StarIcon}\n            maxCount={100}\n            curValue={friendCount}\n            header={'Star'}\n            condition={'Have 100 friends'}\n          />\n        </div>\n        <div className=\"achievements-achievement\">\n          <Achievement\n            Icon={GavelIcon}\n            maxCount={100}\n            curValue={winCount}\n            header={'Mjolnir'}\n            condition={'Win 100 games'}\n          />\n        </div>\n      </Scrollbars>\n    </UserProfileAchieveCardContainer>\n  );\n};\n\nexport default UserProfileAchieveCard;\n","import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const ProfileContainer = styled(Box)`\n\tflex-grow: 1;\n\tbackground-color: #121212;\n\tpadding: 20px;\n`;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport MyProfileCard from '@components/MyProfileCard';\nimport UserProfileCard from '@components/UserProfileCard';\nimport UserMatches from '@components/UserMatches';\nimport UserStatistics from '@components/UserStatistics';\nimport UserFriendCard from '@components/UserFriendCard';\nimport UserProfileAchieveCard from '@components/UserProfileAchieveCard';\nimport fetcher from '@utils/fetcher';\nimport { useParams } from 'react-router-dom';\nimport { IUser, IAllUser } from '@typings/db';\nimport useSWR from 'swr';\nimport { ProfileContainer } from './style';\n\nconst Profile = () => {\n  const { id } = useParams<{ id: string }>();\n  const { data: alluser } = useSWR<IAllUser[]>('/api/users/alluser', fetcher);\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\n  let UserData;\n  if (id && id !== myData?.userId) {\n    alluser?.map((user) => {\n      if (user.userId === id) UserData = user;\n    });\n  }\n\n  return (\n    <ProfileContainer>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12} md={3}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <MyProfileCard />\n          ) : (\n            <UserProfileCard UserData={UserData} />\n          )}\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserStatistics userData={myData} />\n          ) : (\n            <UserStatistics userData={UserData} />\n          )}\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserMatches userData={myData} />\n          ) : (\n            <UserMatches userData={UserData} />\n          )}\n        </Grid>\n        <Grid item xs={12} sm={12} md={3}>\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserProfileAchieveCard userData={myData} />\n          ) : (\n            <UserProfileAchieveCard userData={UserData} />\n          )}\n          {id === undefined || id === myData?.userId || !UserData ? (\n            <UserFriendCard userData={myData} />\n          ) : (\n            <UserFriendCard userData={UserData} />\n          )}\n        </Grid>\n      </Grid>\n    </ProfileContainer>\n  );\n};\n\nexport default Profile;\n"],"names":["Container","styled","AchieveBody","ProgressBar","props","width","dayjs","Icon","curValue","maxCount","header","condition","useState","progress","setProgress","useEffect","timeout","setTimeout","number","star","prev","clearTimeout","className","style","position","textAlign","time","format","ModalBackground","ModalContent","ButtonContainer","content","NoBtn","YesBtn","headerContent","onClick","Error","IconButton","Close","Button","variant","MyProfileCardContainer","Box","UserAvatar","Avatar","isstate","useParams","id","myData","useSWR","fetcher","data","isAdmin","useContext","SocketContext","onlineList","onGameList","isState","userId","map","onlineUser","Card","CardContent","src","profile","alt","Typography","component","username","CardActions","to","Settings","ManageAccounts","disabled","UserProfileCardContainer","UserData","dmList","mutateDmList","mutate","isFriend","mutateisFriend","isBlock","mutateIsBlock","history","useHistory","isAddFriendModal","setIsAddFriendModal","isRemoveFriendModal","setIsRemoveFriendModal","isBlockModal","setIsBlockModal","isRemoveBlockModal","setIsRemoveBlockModal","removeAllModals","useCallback","onToggleAddFriendModal","e","preventDefault","onToggleRemoveFriendModal","onToggleBlockModal","onToggleRemoveBlockModal","onClickChallengeBtn","axios","message","config","then","res","push","catch","error","response","toast","autoClose","hideProgressBar","closeOnClick","pauseOnHover","theme","onClickWatchBtn","onClickAddFriendBtn","onClickRemoveFriendBtn","onClickAddBlockBtn","onClickRemoveBlockBtn","onClickMessageBtn","BasicModal","Gamepad","undefined","Visibility","PersonAddAlt1","PersonOff","Chat","UserMatchesContainer","UserMatchesListWrapper","UserMatchesResult","textColor","userData","userGameHistory","page","setPage","rowsPerPage","setRowsPerPage","index","key","historyId","List","isWinner","opponent","myPoint","opponentPoint","SentimentVerySatisfied","SentimentVeryDissatisfiedSharp","TablePagination","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","color","UserStatisticsContainer","MatchesCount","Grade","numOfWin","numOfLose","EmojiEvents","EventBusy","UserFriendCardContainer","ScrollbarColor","userFriendList","allUser","renderThumbVertical","friend","user","userId2","ListItem","button","ListItemText","primary","UserProfileAchieveCardContainer","friendCount","dedupingInterval","DmListCount","matchCount","winCount","loseCount","channelCount","Achievement","ChatBubbleIcon","GroupsIcon","RecordVoiceOverIcon","LocalPoliceIcon","LightbulbIcon","SchoolIcon","LocalDiningIcon","LocalFireDepartmentIcon","BusinessIcon","ForumIcon","SendIcon","FacebookIcon","AirplanemodeActiveIcon","ShieldIcon","SecurityIcon","SportsBaseballIcon","StarIcon","GavelIcon","ProfileContainer","alluser","Grid","container","spacing","item","xs","sm","md"],"sourceRoot":""}