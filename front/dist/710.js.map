{"version":3,"file":"710.js","mappings":"6MAGaA,GAAyBC,EAAAA,EAAAA,GAAOC,EAAAA,EAAPD,CAAH,I,EAAA,4H,kBAAA,E,qFC4BnC,EAlBkC,SAAC,GAAgB,IAAdE,EAAc,EAAdA,QAGnC,OAFeC,EAAAA,EAAAA,MAAPC,GAGN,gCACE,gBAACL,EAAD,KACE,gBAACM,EAAA,EAAD,CAAQC,UAAU,UAAUC,SAAS,UACnC,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYH,UAAU,cAAcI,QAAQ,KAAKC,UAAU,OACxDT,S,0GCpBFU,E,QAAyBZ,EAAAA,IAAH,I,EAAA,2T,kBAAA,E,+FCkDnC,EAnCkC,SAAC,GAQ7B,IAPJa,EAOI,EAPJA,sBACAC,EAMI,EANJA,cACAC,EAKI,EALJA,QACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YACAC,EACI,EADJA,eAEMC,GAAWC,EAAAA,EAAAA,eAAc,CAAEC,SAAU,MAC3C,OACE,gCACGF,EAAW,KAAO,gBAACG,EAAA,EAAD,MAEnB,gBAACX,EAAD,KACE,gBAACY,EAAA,EAAD,CAAetB,QAAS,qBACxB,uBAAKI,UAAU,WACb,uBAAKA,UAAU,wBACb,gBAACmB,EAAA,EAAD,CACEC,MAAM,SACNb,sBAAuBA,EACvBI,KAAMA,EACNH,cAAeA,EACfC,QAASA,EACTC,kBAAmBA,EACnBE,YAAaA,EACbC,eAAgBA","sources":["webpack://brojoon/./components/ChannelHeader/style.ts","webpack://brojoon/./components/ChannelHeader/index.tsx","webpack://brojoon/./pages/ChannelCreate/style.ts","webpack://brojoon/./pages/ChannelCreate/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport Box from '@mui/material/Box';\n\nexport const ChannelHeaderContainer = styled(Box)`\n\twidth: 100%;\n\n\t& .app-bar {\n\t\tbackground-color: #272727;\n\t}\n\n\t& .header-text {\n\t\tflex-grow: 1;\n\t}\n`;","import React, { VFC } from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { ChannelHeaderContainer } from './style';\n\nimport { useParams } from 'react-router-dom';\n\ninterface Props {\n  content: string;\n}\n\nconst ChannelHeader: VFC<Props> = ({ content }) => {\n  const { id } = useParams<{ id: string }>();\n\n  return (\n    <>\n      <ChannelHeaderContainer>\n        <AppBar className=\"app-bar\" position=\"static\">\n          <Toolbar>\n            <Typography className=\"header-text\" variant=\"h6\" component=\"div\">\n              {content}\n            </Typography>\n          </Toolbar>\n        </AppBar>\n      </ChannelHeaderContainer>\n    </>\n  );\n};\n\nexport default ChannelHeader;\n","import styled from '@emotion/styled';\n\nexport const ChannelCreateContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\n\t& .wrapper {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-color: #121212;\n\t}\n\n\t& .channel-form-wrapper {\n\t\tbackground-color: #1e1e1e;\n\t\tmargin: 15px 15px 15px;\n\t\twidth: calc(100% - 30px);\n\t\tborder-radius: 4px;\n\t}\n\n`;\n","import React, { useState, useCallback, VFC, useEffect } from 'react';\nimport ChannelHeader from '@components/ChannelHeader';\nimport ChannelForm from '@components/ChannelForm';\nimport { ChannelCreateContainer } from './style';\nimport ChannelLeftDrawBar from '@components/ChannelLeftDrawBar';\nimport { useMediaQuery } from 'react-responsive';\n\ninterface Props {\n  onSubmitChannelCreate: () => void;\n  setVisibility: (e: any) => void;\n  setName: (e: any) => void;\n  name: string;\n  setPasswordValues: any;\n  createError: number;\n  setCreateError: (e: any) => void;\n}\n\nconst ChannelCreate: VFC<Props> = ({\n  onSubmitChannelCreate,\n  setVisibility,\n  setName,\n  setPasswordValues,\n  name,\n  createError,\n  setCreateError,\n}) => {\n  const isMobile = useMediaQuery({ maxWidth: 650 });\n  return (\n    <>\n      {isMobile ? null : <ChannelLeftDrawBar />}\n\n      <ChannelCreateContainer>\n        <ChannelHeader content={'Create a Channel'} />\n        <div className=\"wrapper\">\n          <div className=\"channel-form-wrapper\">\n            <ChannelForm\n              value=\"CREATE\"\n              onSubmitChannelCreate={onSubmitChannelCreate}\n              name={name}\n              setVisibility={setVisibility}\n              setName={setName}\n              setPasswordValues={setPasswordValues}\n              createError={createError}\n              setCreateError={setCreateError}\n            />\n          </div>\n        </div>\n      </ChannelCreateContainer>\n    </>\n  );\n};\n\nexport default ChannelCreate;\n"],"names":["ChannelHeaderContainer","styled","Box","content","useParams","id","AppBar","className","position","Toolbar","Typography","variant","component","ChannelCreateContainer","onSubmitChannelCreate","setVisibility","setName","setPasswordValues","name","createError","setCreateError","isMobile","useMediaQuery","maxWidth","ChannelLeftDrawBar","ChannelHeader","ChannelForm","value"],"sourceRoot":""}