{"version":3,"file":"900.js","mappings":"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","sources":["webpack://brojoon/./components/BasicModal/style.ts","webpack://brojoon/./components/BasicModal/index.tsx","webpack://brojoon/./components/UserRightModal/style.ts","webpack://brojoon/./components/UserRightModal/index.tsx","webpack://brojoon/./components/TabPanel/style.ts","webpack://brojoon/./components/TabPanel/index.tsx","webpack://brojoon/./pages/Admin/style.ts","webpack://brojoon/./pages/Admin/index.tsx","webpack://brojoon/./utils/config.ts","webpack://brojoon/./utils/fetcher.ts","webpack://brojoon/./utils/useSocket.ts"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const ModalBackground = styled.div`\r\n\tcolor: white;\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tz-index: 6000;\r\n\tbackground-color: rgba(30, 30, 030, 0.5);\r\n\r\n`;\r\n\r\nexport const ModalContent = styled.div<{ ismobile: boolean }>`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\twidth: ${(props) => props.ismobile ? '290px' : '400px'}; \r\n\tbackground-color: #1e1e1e;\r\n\tcolor: #979797;\r\n\topacity: 1;\r\n\tborder: 1px solid #1e1e1e;\r\n\tborder-radius: 4px;\r\n\tz-index: 7000;\r\n\ttransform: translate(-50%, -50%);\r\n\tbox-shadow:\r\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n\r\n\t& .container {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tbackground-color: #fec107;\r\n\t}\r\n\r\n\t& .header {\r\n\t\tmargin: 1px 10px 0 8px;\r\n\t\tfont-size: 20px;\r\n\t\tcolor: white;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t& .header-content {\r\n\t\tmargin: 0 0 0 4px;\r\n\t\tline-height: 22px;\r\n\t}\r\n\r\n\t& .header .emoji {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .content {\r\n\t\tmargin: 10px;\r\n\t}\r\n`\r\n\r\nexport const ButtonContainer = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\tmargin-top: 15px;\r\n\tfont-weight: 600;\r\n\r\n\t& .noBtn {\r\n\t\tcolor: #979797;\r\n\t}\r\n`;","import React, { VFC } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { ModalBackground, ModalContent, ButtonContainer } from './style';\r\nimport { useMediaQuery } from 'react-responsive';\r\n\r\ninterface Props {\r\n  content: string;\r\n  headerContent: string;\r\n  NoBtn: (e: any) => void;\r\n  YesBtn: (e: any) => void;\r\n}\r\nconst BasicModal: VFC<Props> = ({ content, NoBtn, YesBtn, headerContent }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 480 });\r\n  return (\r\n    <>\r\n      <ModalBackground onClick={NoBtn}></ModalBackground>\r\n      <ModalContent ismobile={isMobile}>\r\n        <div className=\"container\">\r\n          <div className=\"header\">\r\n            <ErrorIcon className=\"emoji\" />\r\n            <div className=\"header-content\">{headerContent}</div>\r\n          </div>\r\n          <div>\r\n            <IconButton className=\"emoji\" onClick={NoBtn}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"content\">{content}</div>\r\n        <ButtonContainer>\r\n          <Button className=\"noBtn\" onClick={NoBtn} variant=\"text\">\r\n            NO\r\n          </Button>\r\n          <Button onClick={YesBtn} variant=\"text\">\r\n            YES\r\n          </Button>\r\n        </ButtonContainer>\r\n      </ModalContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasicModal;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const UserRightModalBack = styled.div`\r\n\tcolor: white;\r\n\tposition: fixed;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tz-index: 6000;\r\n\tbackground-color: rgba(30, 30, 030, 0.5);\r\n\r\n`;\r\n\r\nexport const UserRightModalContainer = styled.div`\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\twidth: 400px;\r\n\tbackground-color: #1e1e1e;\r\n\tcolor: #979797;\r\n\topacity: 1;\r\n\tborder: 1px solid #1e1e1e;\r\n\tborder-radius: 4px;\r\n\tz-index: 7000;\r\n\ttransform: translate(-50%, -50%);\r\n\tbox-shadow:\r\n\t\t0 3px 1px -2px rgb(0 0 0 / 20%), 0 2px 2px 0 rgb(0 0 0 / 14%), 0 1px 5px 0 rgb(0 0 0 / 12%);\r\n\r\n\t& .wrapper {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tbackground-color: #fec107;\r\n\t}\r\n\r\n\t& .header {\r\n\t\tmargin: 1px 10px 0 8px;\r\n\t\tfont-size: 20px;\r\n\t\tcolor: white;\r\n\t\tdisplay: flex;\r\n\t}\r\n\r\n\t& .error-icon {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .header-content {\r\n\t\tmargin: 0 0 0 4px;\r\n\t\tline-height: 22px;\r\n\t}\r\n\r\n\t& .close-icon {\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t& .body {\r\n\t\tmargin: 10px;\r\n\t}\r\n\r\n\t& .button-wrapper {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tmargin-top: 15px;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t& .moderate-btn {\r\n\t\tfont-weight: 600\r\n\t}\r\n\r\n\t& .ban-btn {\r\n\t\tfont-weight: 600;\r\n\t\tcolor: red;\r\n\t}\r\n`;","import React, { VFC } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport { UserRightModalBack, UserRightModalContainer } from './style';\r\n\r\ninterface Props {\r\n  content: string;\r\n  headerContent: string;\r\n  NoBtn: (e: any) => void;\r\n  ModerateBtn: (e: any) => void;\r\n  BanBtn: (e: any) => void;\r\n}\r\nconst UserRightModal: VFC<Props> = ({ content, NoBtn, ModerateBtn, BanBtn, headerContent }) => {\r\n  return (\r\n    <>\r\n      <UserRightModalBack onClick={NoBtn}></UserRightModalBack>\r\n      <UserRightModalContainer>\r\n        <div className=\"wrapper\">\r\n          <div className=\"header\">\r\n            <ErrorIcon className=\"error-icon\" />\r\n            <div className=\"header-content\">{headerContent}</div>\r\n          </div>\r\n          <div>\r\n            <IconButton className=\"close-icon\" onClick={NoBtn}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"body\">{content}</div>\r\n        <div className=\"button-wrapper\">\r\n          <Button className=\"moderate-btn\" onClick={ModerateBtn} variant=\"text\">\r\n            Moderator\r\n          </Button>\r\n          <Button className=\"ban-btn\" onClick={BanBtn} variant=\"text\">\r\n            Ban\r\n          </Button>\r\n        </div>\r\n      </UserRightModalContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserRightModal;\r\n","import styled from '@emotion/styled';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const UserAvatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n\r\n`;","import React, { useContext } from 'react';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { IAllUser } from '@typings/db';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport { UserAvatar } from './style';\r\nimport { SocketContext } from '@store/socket';\r\n\r\nexport const TabPanel1 = () => {\r\n  const { data: adminList, mutate: mutateAdminList } = useSWR<IAllUser[]>(\r\n    '/api/users/listAdmin',\r\n    fetcher,\r\n  );\r\n  const { onlineList, onGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  return (\r\n    <Scrollbars>\r\n      <List sx={{ width: '100%' }} component=\"nav\" aria-label=\"mailbox folders\">\r\n        {adminList &&\r\n          adminList?.map((admin) => {\r\n            isState = 0;\r\n            if (onGameList && onGameList[admin.userId]) isState = 2;\r\n            if (isState === 0) {\r\n              onlineList?.map((onlineUser) => {\r\n                if (onlineUser.userId === admin.userId) isState = 1;\r\n              });\r\n            }\r\n            return (\r\n              <ListItem button key={admin.userId}>\r\n                <UserAvatar\r\n                  isstate={`${\r\n                    isState\r\n                      ? isState === 1\r\n                        ? '2px solid #1ed14b'\r\n                        : '2px solid #FFD400'\r\n                      : '2px solid #d63638'\r\n                  }`}\r\n                  src={admin.profile}\r\n                  alt=\"Avatar\"\r\n                />\r\n                <ListItemText primary={admin.userId} style={{ marginLeft: '12px' }} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n      </List>\r\n    </Scrollbars>\r\n  );\r\n};\r\n","import styled from '@emotion/styled';\r\nimport Box from '@mui/material/Box';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nexport const AdminPageContainer = styled.div`\r\n\tbackground-color: white;\r\n\theight: 100%;\r\n\r\n\t& .admin-page-header {\r\n\t\tbackground-color: #d3d3d3;\r\n\t\theight: 70px;\r\n\t\tfont-weight: 700;\r\n\t\tfont-size: 30px;\r\n\t\tline-height: 65px;\r\n\t\tbox-shadow:\r\n\t\t\trgb(0 0 0 / 20%) 0px 2px 4px -1px, rgb(0 0 0 / 14%) 0px 4px 5px 0px, rgb(0 0 0 / 12%) 0px 1px 10px 0px;\r\n\t}\r\n\r\n\t& .header-span {\r\n\t\tmargin-left: 50px;\r\n\t}\r\n`;\r\n\r\nexport const AdminPageWrapper = styled(Box)`\r\n\twidth: 100%;\r\n\theight: calc(100% - 180px);\r\n\tmargin-top: 10px;\r\n\r\n\t& .tab-panel-2-list {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t& .tab-panel-2-text {\r\n\t\tmargin-left: 12px;\r\n\t}\r\n\r\n\t& .tab-panel-3-list {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t& .tab-panel-3-avatar {\r\n\t\tborder: 2px solid red;\r\n\t}\r\n\r\n\t& .tab-panel-3-text {\r\n\t\tmargin-left: 12px;\r\n\t}\r\n\r\n\t& .tab-panel-4-list {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t& .tab-panel-4-list-item {\r\n\t\tfont-size: 16px;\r\n\t\tmargin-top: 11px;\r\n\t\tcolor: gray;\r\n\t}\r\n\r\n\t& .tab-panel-4-avatar {\r\n\t\tborder: 2px solid red;\r\n\t\twidth: 38px;\r\n\t\theight: 38px;\r\n\t}\r\n\r\n\t& .tab-pannel-4-text {\r\n\t\tmargin-left: 12px;\r\n\t}\r\n\r\n\t& .mute-icon {\r\n\t\tcolor: red;\r\n\t}\r\n\r\n\t& .delete-channel-wrapper {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tmargin-top: 20px;\r\n\t}\r\n\r\n\t& .delete-btn {\r\n\t\tbackground-color: red;\r\n\t\tfont-weight: 600;\r\n\t}\r\n\r\n\t& .tab-panel-5-list {\r\n\t\twidth: 100%;\r\n\t}\r\n\r\n\t& .tab-panel-5-avatar {\r\n\t\tborder: 2px solid red;\r\n\t}\r\n\r\n\t& .tab-panel-5-text {\r\n\t\tmargin-left: 12px;\r\n\t}\r\n\r\n\r\n\r\n`;\r\n\r\n\r\nexport const TabPanelAatar = styled(Avatar) <{ isstate: string }>`\r\n\tborder: ${(props) => props.isstate};\r\n`;","import React, { useState, useCallback, useEffect, useContext } from 'react';\r\nimport useSWR from 'swr';\r\nimport fetcher from '@utils/fetcher';\r\nimport { IChannelList2, IAllUser, IUser, State } from '@typings/db';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport BasicModal from '@components/BasicModal';\r\nimport axios from 'axios';\r\nimport UserRightModal from '@components/UserRightModal';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useParams, useHistory, Link } from 'react-router-dom';\r\nimport config from '@utils/config';\r\nimport { SocketContext } from '@store/socket';\r\nimport getSocket from '@utils/useSocket';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport { TabPanel1 } from '@components/TabPanel';\r\nimport { AdminPageContainer, AdminPageWrapper, TabPanelAatar } from './style';\r\n\r\nconst Admin = () => {\r\n  const { data: alluserList, mutate: mutateAlluserList } = useSWR<IAllUser[]>(\r\n    '/api/users/alluser',\r\n    fetcher,\r\n  );\r\n  const { data: adminList, mutate: mutateAdminList } = useSWR<IAllUser[]>(\r\n    '/api/users/listAdmin',\r\n    fetcher,\r\n  );\r\n  const { data: banList, mutate: mutateBanList } = useSWR<IAllUser[]>(\r\n    '/api/users/listBan',\r\n    fetcher,\r\n  );\r\n  const { data: moderatorList, mutate: mutatemoderatorList } = useSWR<IAllUser[]>(\r\n    '/api/users/listModerator',\r\n    fetcher,\r\n  );\r\n  const { data: channelList, mutate: mutateChannelList } = useSWR<IChannelList2[]>(\r\n    '/api/channels/ownerApi/siteOwnerChannelList',\r\n    fetcher,\r\n  );\r\n\r\n  const { data: DMList } = useSWR<number[]>('/api/dms/dmlistOnlyIdJustArray', fetcher);\r\n  const { data: ChannelList } = useSWR<number[]>('/api/channels/myChannelListOnlyId', fetcher);\r\n  const { onlineList, setOnlineList, onGameList, setOnGameList } = useContext(SocketContext);\r\n  let isState;\r\n\r\n  const { data: myData } = useSWR<IUser | null>('/api/users', fetcher);\r\n\r\n  const [value, setValue] = useState('1');\r\n  const [isUnModeratorModal, setIsUnModeratorModal] = useState(false);\r\n  const [isUnBanUserModal, setIsUnBanUserModal] = useState(false);\r\n  const [unModeratorSelected, setUnModeratorSelected] = useState('');\r\n  const [unBanUserSelected, setUnBanUserSelected] = useState('');\r\n  const [isUserPrivilegeModal, setIsUserPrivilegeModal] = useState(false);\r\n  const [userPrivilegeSelected, setUserPrivilegeSelected] = useState('');\r\n\r\n  const socket = getSocket();\r\n\r\n  useEffect(() => {\r\n    if (DMList && ChannelList && myData) {\r\n      socket.emit('login', {\r\n        userId: myData.userId,\r\n        username: myData.username,\r\n        Dms: DMList,\r\n        channels: ChannelList,\r\n      });\r\n    }\r\n  }, [socket, DMList, ChannelList, myData]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onGameList', (data: any) => {\r\n      setOnGameList(data);\r\n    });\r\n    return () => {\r\n      socket.off('onGameList');\r\n    };\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket?.on('onlineList', (data: any) => {\r\n      setOnlineList(data);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('onlineList');\r\n    };\r\n  }, [socket]);\r\n\r\n  const onClickUserPrivilege = useCallback(\r\n    (e, userId) => {\r\n      setUserPrivilegeSelected(userId);\r\n      setIsUserPrivilegeModal(true);\r\n    },\r\n    [isUserPrivilegeModal, userPrivilegeSelected],\r\n  );\r\n\r\n  const onCloseUserPrivilegeModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsUserPrivilegeModal(false);\r\n    },\r\n    [isUnModeratorModal],\r\n  );\r\n\r\n  const onClickUnModerator = useCallback(\r\n    (e, userId) => {\r\n      let isAdmin = false;\r\n      adminList?.map((admin) => {\r\n        if (admin.userId === myData?.userId) isAdmin = true;\r\n      });\r\n      if (isAdmin) {\r\n        setUnModeratorSelected(userId);\r\n        setIsUnModeratorModal(true);\r\n      }\r\n    },\r\n    [unModeratorSelected, adminList, myData],\r\n  );\r\n  const onCloseUnModeratorModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsUnModeratorModal(false);\r\n    },\r\n    [isUnModeratorModal],\r\n  );\r\n\r\n  const onClickUnBanUser = useCallback(\r\n    (e, userId) => {\r\n      setUnBanUserSelected(userId);\r\n      setIsUnBanUserModal(true);\r\n    },\r\n    [unModeratorSelected],\r\n  );\r\n\r\n  const onCloseUnBanUserModal = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setIsUnBanUserModal(false);\r\n    },\r\n    [isUnBanUserModal],\r\n  );\r\n\r\n  const handleChange = useCallback((event: any, newValue: string) => {\r\n    setValue(newValue);\r\n  }, []);\r\n\r\n  const onSubmitModerator = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      let isAdmin = false;\r\n      adminList?.map((admin) => {\r\n        if (admin.userId === myData?.userId) isAdmin = true;\r\n      });\r\n\r\n      if (isAdmin) {\r\n        if (userPrivilegeSelected) {\r\n          axios\r\n            .get(`/api/users/addModerator/${userPrivilegeSelected}`, config)\r\n            .then(() => {\r\n              mutatemoderatorList();\r\n              mutateAlluserList();\r\n              setIsUserPrivilegeModal(false);\r\n              setUserPrivilegeSelected('');\r\n            })\r\n            .catch((error) => {\r\n              toast.error(error.message, {\r\n                autoClose: 3000,\r\n                position: toast.POSITION.TOP_RIGHT,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                theme: 'colored',\r\n              });\r\n            });\r\n        }\r\n      }\r\n    },\r\n    [userPrivilegeSelected, adminList, myData],\r\n  );\r\n\r\n  const onSubmitUnModerator = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (unModeratorSelected) {\r\n        axios\r\n          .get(`/api/users/removeModerator/${unModeratorSelected}`, config)\r\n          .then(() => {\r\n            mutatemoderatorList();\r\n            mutateAlluserList();\r\n            setIsUnModeratorModal(false);\r\n            setUnModeratorSelected('');\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message, {\r\n              autoClose: 3000,\r\n              position: toast.POSITION.TOP_RIGHT,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              theme: 'colored',\r\n            });\r\n          });\r\n      }\r\n    },\r\n    [unModeratorSelected],\r\n  );\r\n\r\n  const onSubmitBan = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (userPrivilegeSelected) {\r\n        axios\r\n          .get(`/api/users/addBan/${userPrivilegeSelected}`, config)\r\n          .then(() => {\r\n            mutateBanList();\r\n            mutateAlluserList();\r\n            setIsUserPrivilegeModal(false);\r\n            setUserPrivilegeSelected('');\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message, {\r\n              autoClose: 3000,\r\n              position: toast.POSITION.TOP_RIGHT,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              theme: 'colored',\r\n            });\r\n          });\r\n      }\r\n    },\r\n    [userPrivilegeSelected],\r\n  );\r\n\r\n  const onSubmitUnBanUser = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (unBanUserSelected) {\r\n        axios\r\n          .get(`/api/users/removeBan/${unBanUserSelected}`, config)\r\n          .then(() => {\r\n            mutateBanList();\r\n            mutateAlluserList();\r\n            setIsUnBanUserModal(false);\r\n            setUnBanUserSelected('');\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.message, {\r\n              autoClose: 3000,\r\n              position: toast.POSITION.TOP_RIGHT,\r\n              hideProgressBar: false,\r\n              closeOnClick: true,\r\n              pauseOnHover: true,\r\n              theme: 'colored',\r\n            });\r\n          });\r\n      }\r\n    },\r\n    [unBanUserSelected],\r\n  );\r\n  if (!adminList) return null;\r\n  return (\r\n    <AdminPageContainer>\r\n      {isUnModeratorModal && (\r\n        <BasicModal\r\n          headerContent=\"Remove from moderator list\"\r\n          content=\"Are you sure you want to remove this user from the moderator list?\"\r\n          NoBtn={onCloseUnModeratorModal}\r\n          YesBtn={onSubmitUnModerator}\r\n        />\r\n      )}\r\n      {isUnBanUserModal && (\r\n        <BasicModal\r\n          headerContent=\"Remove from ban list\"\r\n          content=\"Are you sure you want to remove this user from the ban list?\"\r\n          NoBtn={onCloseUnBanUserModal}\r\n          YesBtn={onSubmitUnBanUser}\r\n        />\r\n      )}\r\n      {isUserPrivilegeModal && (\r\n        <UserRightModal\r\n          headerContent=\"Assign user privilege\"\r\n          content=\"You can add you to the list of moderator or ban\"\r\n          NoBtn={onCloseUserPrivilegeModal}\r\n          ModerateBtn={onSubmitModerator}\r\n          BanBtn={onSubmitBan}\r\n        />\r\n      )}\r\n      <div className=\"admin-page-header\">\r\n        <span className=\"header-span\">Administrator</span>\r\n      </div>\r\n      <AdminPageWrapper sx={{ typography: 'body1' }}>\r\n        <TabContext value={value}>\r\n          <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n            <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n              <Tab label=\"AdminList\" value=\"1\" />\r\n              <Tab label=\"ModeratorList\" value=\"2\" />\r\n              <Tab label=\"UserList\" value=\"3\" />\r\n              <Tab label=\"ChannelList\" value=\"4\" />\r\n              <Tab label=\"BanList\" value=\"5\" />\r\n            </TabList>\r\n          </Box>\r\n          <TabPanel value=\"1\">\r\n            <TabPanel1 />\r\n          </TabPanel>\r\n          <TabPanel value=\"2\">\r\n            <Scrollbars>\r\n              <List className=\"tab-panel-2-list\" component=\"nav\" aria-label=\"mailbox folders\">\r\n                {moderatorList?.map((moderator) => {\r\n                  isState = 0;\r\n                  if (onGameList && onGameList[moderator.userId]) isState = 2;\r\n                  if (isState === 0) {\r\n                    onlineList?.map((onlineUser) => {\r\n                      if (onlineUser.userId === moderator.userId) isState = 1;\r\n                    });\r\n                  }\r\n                  return (\r\n                    <ListItem\r\n                      button\r\n                      onClick={(e) => {\r\n                        onClickUnModerator(e, moderator.userId);\r\n                      }}\r\n                      key={moderator.userId}\r\n                    >\r\n                      <TabPanelAatar\r\n                        isstate={`${\r\n                          isState\r\n                            ? isState === 1\r\n                              ? '2px solid #1ed14b'\r\n                              : '2px solid #FFD400'\r\n                            : '2px solid #d63638'\r\n                        }`}\r\n                        src={moderator.profile}\r\n                        alt=\"Avatar\"\r\n                      />\r\n                      <ListItemText className=\"tab-panel-2-text\" primary={moderator.userId} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Scrollbars>\r\n          </TabPanel>\r\n          <TabPanel value=\"3\">\r\n            <Scrollbars>\r\n              <List className=\"tab-panel-3-list\" component=\"nav\" aria-label=\"mailbox folders\">\r\n                {alluserList?.map((user) => {\r\n                  let visibility = true;\r\n                  banList?.map((banedUser) => {\r\n                    if (banedUser.userId === user.userId) visibility = false;\r\n                  });\r\n                  adminList?.map((admin) => {\r\n                    if (admin.userId === user.userId) visibility = false;\r\n                  });\r\n                  moderatorList?.map((moderator) => {\r\n                    if (moderator.userId === user.userId) visibility = false;\r\n                  });\r\n\r\n                  if (visibility) {\r\n                    isState = 0;\r\n                    if (onGameList && onGameList[user.userId]) isState = 2;\r\n                    if (isState === 0) {\r\n                      onlineList?.map((onlineUser) => {\r\n                        if (onlineUser.userId === user.userId) isState = 1;\r\n                      });\r\n                    }\r\n                    return (\r\n                      <ListItem\r\n                        button\r\n                        onClick={(e) => {\r\n                          onClickUserPrivilege(e, user.userId);\r\n                        }}\r\n                        key={user.userId}\r\n                      >\r\n                        <TabPanelAatar\r\n                          isstate={`${\r\n                            isState\r\n                              ? isState === 1\r\n                                ? '2px solid #1ed14b'\r\n                                : '2px solid #FFD400'\r\n                              : '2px solid #d63638'\r\n                          }`}\r\n                          src={user.profile}\r\n                          alt=\"Avatar\"\r\n                        />\r\n                        <ListItemText className=\"tab-panel-3-text\" primary={user.userId} />\r\n                      </ListItem>\r\n                    );\r\n                  }\r\n                })}\r\n              </List>\r\n            </Scrollbars>\r\n          </TabPanel>\r\n          <TabPanel value=\"4\">\r\n            <Scrollbars>\r\n              <List className=\"tab-panel-4-list\" component=\"nav\" aria-label=\"mailbox folders\">\r\n                {channelList?.map((channel) => {\r\n                  return (\r\n                    <Link to={`/admin/${channel.id}`} key={channel.id}>\r\n                      <ListItem button>\r\n                        <Typography>{channel.name}</Typography>\r\n                      </ListItem>\r\n                    </Link>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Scrollbars>\r\n          </TabPanel>\r\n          <TabPanel value=\"5\">\r\n            <Scrollbars>\r\n              <List className=\"tab-panel-5-list\" component=\"nav\" aria-label=\"mailbox folders\">\r\n                {banList?.map((banedUser) => {\r\n                  return (\r\n                    <ListItem\r\n                      button\r\n                      onClick={(e) => {\r\n                        onClickUnBanUser(e, banedUser.userId);\r\n                      }}\r\n                      key={banedUser.userId}\r\n                    >\r\n                      <Avatar src={banedUser.profile} alt=\"Avatar\" />\r\n                      <ListItemText className=\"tab-panel-5-text\" primary={banedUser.userId} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Scrollbars>\r\n          </TabPanel>\r\n        </TabContext>\r\n      </AdminPageWrapper>\r\n    </AdminPageContainer>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import getToken from '@utils/getToken';\r\n\r\nconst config = {\r\n\twithCredentials: true,\r\n\t// headers: {\r\n\t// \tAuthorization: `Bearer ${getToken()}`,\r\n\t// }\r\n}\r\n\r\nexport default config","import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst fetcher = (url: string): any => axios.get(url, {\r\n\twithCredentials: true,\r\n\t// headers: {\r\n\t// \tAuthorization: `Bearer ${getToken()}`,\r\n\t// }\r\n}).then((response) => response.data).catch((error) => {\r\n\r\n\ttoast.error(error.message, {\r\n\t\tautoClose: 3000,\r\n\t\tposition: toast.POSITION.TOP_RIGHT,\r\n\t\thideProgressBar: false,\r\n\t\tcloseOnClick: true,\r\n\t\tpauseOnHover: true,\r\n\t\ttheme: \"colored\"\r\n\t});\r\n\tif (error.response.data.code === 401) {\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.location.href = '/login';\r\n\t\t}, 3000);\r\n\r\n\t\t// const history = useHistory();\r\n\t\t// history.push('/login');\r\n\t} else if (error.response.data.data.message === \"ban 유저\") {\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.location.href = '/login';\r\n\t\t}, 3000);\r\n\t} else {\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\twindow.location.href = '/home';\r\n\t\t}, 3000);\r\n\t}\r\n\treturn false;\r\n\r\n})\r\n\r\nexport default fetcher;","import io from 'socket.io-client';\r\nimport { useCallback } from 'react';\r\n\r\nlet socket: any = undefined;\r\n\r\nconst getSocket = () => {\r\n  if (!socket) {\r\n    socket = io.connect('http://44.192.96.197:8081');\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\nexport default getSocket;\r\n"],"names":["ModalBackground","styled","ModalContent","props","ismobile","ButtonContainer","content","NoBtn","YesBtn","headerContent","isMobile","useMediaQuery","maxWidth","onClick","className","Error","IconButton","Close","Button","variant","UserRightModalBack","UserRightModalContainer","ModerateBtn","BanBtn","UserAvatar","Avatar","isstate","TabPanel1","isState","useSWR","fetcher","adminList","data","mutate","useContext","SocketContext","onlineList","onGameList","List","sx","width","component","map","admin","userId","onlineUser","ListItem","button","key","src","profile","alt","ListItemText","primary","style","marginLeft","AdminPageContainer","AdminPageWrapper","Box","TabPanelAatar","alluserList","mutateAlluserList","banList","mutateBanList","moderatorList","mutatemoderatorList","channelList","DMList","ChannelList","setOnlineList","setOnGameList","myData","useState","value","setValue","isUnModeratorModal","setIsUnModeratorModal","isUnBanUserModal","setIsUnBanUserModal","unModeratorSelected","setUnModeratorSelected","unBanUserSelected","setUnBanUserSelected","isUserPrivilegeModal","setIsUserPrivilegeModal","userPrivilegeSelected","setUserPrivilegeSelected","socket","getSocket","useEffect","emit","username","Dms","channels","on","off","onClickUserPrivilege","useCallback","e","onCloseUserPrivilegeModal","preventDefault","onClickUnModerator","isAdmin","onCloseUnModeratorModal","onClickUnBanUser","onCloseUnBanUserModal","handleChange","event","newValue","onSubmitModerator","axios","config","then","catch","error","toast","message","autoClose","position","hideProgressBar","closeOnClick","pauseOnHover","theme","onSubmitUnModerator","onSubmitBan","onSubmitUnBanUser","BasicModal","typography","TabContext","borderBottom","borderColor","TabList","onChange","Tab","label","TabPanel","moderator","user","visibility","banedUser","channel","to","id","Typography","name","withCredentials","url","response","code","setTimeout","window","location","href","undefined","io"],"sourceRoot":""}